/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/regenerator-runtime/runtime.js":
/*!******************************************************!*\
  !*** ../node_modules/regenerator-runtime/runtime.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = GeneratorFunctionPrototype;
  define(Gp, "constructor", GeneratorFunctionPrototype);
  define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  });
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  define(Gp, iteratorSymbol, function() {
    return this;
  });

  define(Gp, "toString", function() {
    return "[object Generator]";
  });

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : undefined
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, in modern engines
  // we can explicitly access globalThis. In older engines we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}


/***/ }),

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/ios-vh-fix */ "./js/utils/ios-vh-fix.js");
/* harmony import */ var _modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/modals/init-modals */ "./js/modules/modals/init-modals.js");
/* harmony import */ var _modules_form_init_custom_select__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/form/init-custom-select */ "./js/modules/form/init-custom-select.js");
/* harmony import */ var _modules_form_init_form_validate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/form/init-form-validate */ "./js/modules/form/init-form-validate.js");
/* harmony import */ var _modules_card_counter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/card-counter */ "./js/modules/card-counter.js");
/* harmony import */ var _modules_toggle_button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/toggle-button */ "./js/modules/toggle-button.js");
/* harmony import */ var _modules_init_tabs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/init-tabs */ "./js/modules/init-tabs.js");
/* harmony import */ var _modules_init_accordion__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/init-accordion */ "./js/modules/init-accordion.js");
/* harmony import */ var _modules_init_header_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/init-header-actions */ "./js/modules/init-header-actions.js");
/* harmony import */ var _modules_sliders_init_sliders__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/sliders/init-sliders */ "./js/modules/sliders/init-sliders.js");
/* harmony import */ var _modules_tooltip_badge__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modules/tooltip-badge */ "./js/modules/tooltip-badge.js");
/* harmony import */ var _modules_init_read_more__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./modules/init-read-more */ "./js/modules/init-read-more.js");
/* harmony import */ var _modules_designer_popup_close__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./modules/designer-popup-close */ "./js/modules/designer-popup-close.js");
/* harmony import */ var _modules_hover_select_lighting_action__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./modules/hover-select-lighting-action */ "./js/modules/hover-select-lighting-action.js");
/* harmony import */ var _modules_init_ui_slider__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./modules/init-ui-slider */ "./js/modules/init-ui-slider.js");
/* harmony import */ var _modules_init_filters_toggle__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./modules/init-filters-toggle */ "./js/modules/init-filters-toggle.js");
/* harmony import */ var _modules_remove_border_filter__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./modules/remove-border-filter */ "./js/modules/remove-border-filter.js");
/* harmony import */ var _modules_sliders_init_top_slider__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./modules/sliders/init-top-slider */ "./js/modules/sliders/init-top-slider.js");
/* harmony import */ var _modules_init_top_slider_btn__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./modules/init-top-slider-btn */ "./js/modules/init-top-slider-btn.js");
/* harmony import */ var _modules_close_filter_select_list__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./modules/close-filter-select-list */ "./js/modules/close-filter-select-list.js");
/* harmony import */ var _modules_init_scroll_lock__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./modules/init-scroll-lock */ "./js/modules/init-scroll-lock.js");
/* harmony import */ var _modules_init_tooltips_list_init_tooltips_list__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./modules/init-tooltips-list/init-tooltips-list */ "./js/modules/init-tooltips-list/init-tooltips-list.js");
/* harmony import */ var _modules_init_counter_list_init_counter_list__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./modules/init-counter-list/init-counter-list */ "./js/modules/init-counter-list/init-counter-list.js");
/* harmony import */ var _modules_init_radio_buttons__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./modules/init-radio-buttons */ "./js/modules/init-radio-buttons.js");
/* harmony import */ var _modules_init_basket_input__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./modules/init-basket-input */ "./js/modules/init-basket-input.js");
/* harmony import */ var _modules_init_more_filters__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./modules/init-more-filters */ "./js/modules/init-more-filters.js");
/* harmony import */ var _modules_frize_label_init__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./modules/frize-label-init */ "./js/modules/frize-label-init.js");
/* harmony import */ var _modules_map_init_map__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./modules/map/init-map */ "./js/modules/map/init-map.js");
/* harmony import */ var _modules_sliders_init_fancy_slider__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./modules/sliders/init-fancy-slider */ "./js/modules/sliders/init-fancy-slider.js");
/* harmony import */ var _modules_promo_code__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./modules/promo-code */ "./js/modules/promo-code.js");
/* harmony import */ var _modules_show_input_on_checked__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./modules/show-input-on-checked */ "./js/modules/show-input-on-checked.js");
/* harmony import */ var _modules_sliders_slider_product__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./modules/sliders/slider-product */ "./js/modules/sliders/slider-product.js");
/* harmony import */ var _modules_init_open_block__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./modules/init-open-block */ "./js/modules/init-open-block.js");
/* harmony import */ var _modules_delivery_return__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./modules/delivery-return */ "./js/modules/delivery-return.js");
/* harmony import */ var _modules_init_range_slider__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./modules/init-range-slider */ "./js/modules/init-range-slider.js");
/* harmony import */ var _modules_init_show_counter__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./modules/init-show-counter */ "./js/modules/init-show-counter.js");
/* harmony import */ var _modules_sliders_init_info_block_slider__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./modules/sliders/init-info-block-slider */ "./js/modules/sliders/init-info-block-slider.js");
/* harmony import */ var _modules_init_open_more__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./modules/init-open-more */ "./js/modules/init-open-more.js");
/* harmony import */ var _modules_show_all_text__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./modules/show-all-text */ "./js/modules/show-all-text.js");
/* harmony import */ var _modules_init_open_more_reviews__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./modules/init-open-more-reviews */ "./js/modules/init-open-more-reviews.js");
/* harmony import */ var _modules_init_move_to__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./modules/init-move-to */ "./js/modules/init-move-to.js");
/* harmony import */ var _modules_sliders_slider_list__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./modules/sliders/slider-list */ "./js/modules/sliders/slider-list.js");






































 // import {openSubList} from './modules/open-sublist';



 // ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  // Utils
  // ---------------------------------
  Object(_utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__["iosVhFix"])(); // Modules
  // ---------------------------------

  Object(_modules_card_counter__WEBPACK_IMPORTED_MODULE_4__["cardCounter"])();
  Object(_modules_toggle_button__WEBPACK_IMPORTED_MODULE_5__["toggleButton"])();
  Object(_modules_init_tabs__WEBPACK_IMPORTED_MODULE_6__["initTabs"])();
  Object(_modules_init_accordion__WEBPACK_IMPORTED_MODULE_7__["initAccordions"])(); // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана

  window.addEventListener('load', function () {
    Object(_modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__["initModals"])();
    Object(_modules_form_init_custom_select__WEBPACK_IMPORTED_MODULE_2__["initCustomSelect"])();
    Object(_modules_form_init_form_validate__WEBPACK_IMPORTED_MODULE_3__["initFormValidate"])();
    Object(_modules_sliders_init_sliders__WEBPACK_IMPORTED_MODULE_9__["initSliders"])();
    Object(_modules_init_header_actions__WEBPACK_IMPORTED_MODULE_8__["initHeaderActions"])();
    Object(_modules_tooltip_badge__WEBPACK_IMPORTED_MODULE_10__["tooltipCatalogBadge"])();
    Object(_modules_tooltip_badge__WEBPACK_IMPORTED_MODULE_10__["tooltipBusketQuestionBadge"])();
    Object(_modules_init_read_more__WEBPACK_IMPORTED_MODULE_11__["initReadMore"])();
    Object(_modules_designer_popup_close__WEBPACK_IMPORTED_MODULE_12__["initCloseDesignerPopup"])();
    Object(_modules_hover_select_lighting_action__WEBPACK_IMPORTED_MODULE_13__["hoverSelectLightingAction"])();
    Object(_modules_init_ui_slider__WEBPACK_IMPORTED_MODULE_14__["initUiSlider"])();
    Object(_modules_init_ui_slider__WEBPACK_IMPORTED_MODULE_14__["initUiStepSlider"])();
    Object(_modules_init_filters_toggle__WEBPACK_IMPORTED_MODULE_15__["initFiltersToggle"])();
    Object(_modules_remove_border_filter__WEBPACK_IMPORTED_MODULE_16__["removeBorderFilter"])();
    Object(_modules_sliders_init_top_slider__WEBPACK_IMPORTED_MODULE_17__["initTopSlider"])();
    Object(_modules_init_top_slider_btn__WEBPACK_IMPORTED_MODULE_18__["initTopSliderBtn"])();
    Object(_modules_close_filter_select_list__WEBPACK_IMPORTED_MODULE_19__["closeFilterSelectList"])();
    Object(_modules_init_scroll_lock__WEBPACK_IMPORTED_MODULE_20__["initScrollLock"])();
    Object(_modules_init_tooltips_list_init_tooltips_list__WEBPACK_IMPORTED_MODULE_21__["initTooltipsList"])();
    Object(_modules_init_counter_list_init_counter_list__WEBPACK_IMPORTED_MODULE_22__["initCounterList"])();
    Object(_modules_init_radio_buttons__WEBPACK_IMPORTED_MODULE_23__["initRadioButtons"])();
    Object(_modules_init_basket_input__WEBPACK_IMPORTED_MODULE_24__["initBasketInput"])();
    Object(_modules_init_more_filters__WEBPACK_IMPORTED_MODULE_25__["initMoreFilters"])();
    Object(_modules_frize_label_init__WEBPACK_IMPORTED_MODULE_26__["frizeLabelInit"])();
    Object(_modules_map_init_map__WEBPACK_IMPORTED_MODULE_27__["initMap"])();
    Object(_modules_sliders_init_fancy_slider__WEBPACK_IMPORTED_MODULE_28__["initGalleryFancybox"])();
    Object(_modules_promo_code__WEBPACK_IMPORTED_MODULE_29__["promoCode"])();
    Object(_modules_show_input_on_checked__WEBPACK_IMPORTED_MODULE_30__["showInputOnChecked"])();
    Object(_modules_sliders_slider_product__WEBPACK_IMPORTED_MODULE_31__["sliderProduct"])();
    Object(_modules_init_open_block__WEBPACK_IMPORTED_MODULE_32__["initOpenBlock"])();
    Object(_modules_init_range_slider__WEBPACK_IMPORTED_MODULE_34__["initRangeSlider"])();
    Object(_modules_init_show_counter__WEBPACK_IMPORTED_MODULE_35__["initShowCounter"])();
    Object(_modules_sliders_init_info_block_slider__WEBPACK_IMPORTED_MODULE_36__["initInfoBlockSlider"])();
    Object(_modules_init_open_more__WEBPACK_IMPORTED_MODULE_37__["initOpenMore"])();
    Object(_modules_show_all_text__WEBPACK_IMPORTED_MODULE_38__["showAllText"])(); // openSubList();

    Object(_modules_init_open_more_reviews__WEBPACK_IMPORTED_MODULE_39__["initOpenMoreReviews"])();
    Object(_modules_delivery_return__WEBPACK_IMPORTED_MODULE_33__["deliveryReturn"])();
    Object(_modules_init_move_to__WEBPACK_IMPORTED_MODULE_40__["initMoveTo"])();
    Object(_modules_sliders_slider_list__WEBPACK_IMPORTED_MODULE_41__["sliderList"])();
  });
}); // ---------------------------------
// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.
// привязывайте js не на классы, а на дата атрибуты (data-validate)
// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✔️
// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.
// для адаптивного JS используейтся matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();
// используйте .closest(el)

/***/ }),

/***/ "./js/modules/accordions.js":
/*!**********************************!*\
  !*** ./js/modules/accordions.js ***!
  \**********************************/
/*! exports provided: Accordions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Accordions", function() { return Accordions; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var Accordions = /*#__PURE__*/function () {
  function Accordions() {
    _classCallCheck(this, Accordions);

    this._openHeight = 0;
    this._windowWidth = window.innerWidth;
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._windowResizeHandler = this._windowResizeHandler.bind(this);

    this._init();
  }

  _createClass(Accordions, [{
    key: "_init",
    value: function _init() {
      this.fullUpdate();
      document.addEventListener('click', this._documentClickHandler);
      window.addEventListener('resize', this._windowResizeHandler);
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;

      if (!target.closest('[data-accordion="button"]')) {
        return;
      }

      evt.preventDefault();
      var element = target.closest('[data-accordion="element"]');

      if (element.classList.contains('is-active')) {
        this.closeAccordion(element);
        return;
      }

      this.openAccordion(element);
    }
  }, {
    key: "_windowResizeHandler",
    value: function _windowResizeHandler() {
      if (this._windowWidth === window.innerWidth) {
        return;
      }

      this._windowWidth = window.innerWidth;
      this.updateAccordionsHeight();
    }
  }, {
    key: "closeAllAccordion",
    value: function closeAllAccordion(parent) {
      var _this = this;

      var elements = parent.querySelectorAll('[data-accordion="element"]');
      elements.forEach(function (element) {
        var currentParent = element.closest('[data-accordion="parent"]');

        if (currentParent === parent) {
          _this.closeAccordion(element);
        }
      });
    }
  }, {
    key: "updateAccordionsHeight",
    value: function updateAccordionsHeight() {
      var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

      if (element) {
        var content = element.querySelector('[data-accordion="content"]');
        content.style.transition = 'none';
        content.style.maxHeight = "".concat(content.scrollHeight, "px");
        setTimeout(function () {
          content.style.transition = null;
        });
        return;
      }

      var openElements = document.querySelectorAll('[data-accordion="element"].is-active');
      openElements.forEach(function (openElement) {
        var content = openElement.querySelector('[data-accordion="content"]');
        content.style.transition = 'none';
        content.style.maxHeight = "".concat(content.scrollHeight, "px");
        setTimeout(function () {
          content.style.transition = null;
        });
      });
    }
  }, {
    key: "fullUpdate",
    value: function fullUpdate() {
      var _this2 = this;

      var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      var transition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var openElements;

      if (parent) {
        openElements = parent.querySelectorAll('[data-accordion="element"].is-active');
      } else {
        openElements = document.querySelectorAll('[data-accordion="element"].is-active');
      }

      openElements.forEach(function (openElement) {
        var innerParent = openElement.querySelector('[data-accordion="parent"]');

        if (innerParent) {
          return;
        }

        _this2.openAccordion(openElement, transition);
      });
    }
  }, {
    key: "openAccordion",
    value: function openAccordion(element) {
      var transition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var parentElement = element.closest('[data-accordion="parent"]');
      var contentElement = element.querySelector('[data-accordion="content"]');
      this._openHeight += contentElement.scrollHeight;

      if (parentElement.hasAttribute('data-single')) {
        this.closeAllAccordion(parentElement);
      }

      element.classList.add('is-active');

      if (transition) {
        contentElement.style.maxHeight = "".concat(this._openHeight, "px");
      } else {
        contentElement.style.transition = 'none';
        contentElement.style.maxHeight = "".concat(this._openHeight, "px");
        setTimeout(function () {
          contentElement.style.transition = null;
        });
      }

      if (parentElement.closest('[data-accordion="element"]')) {
        this.openAccordion(parentElement.closest('[data-accordion="element"]'), transition);
        return;
      }

      this._openHeight = 0;
    }
  }, {
    key: "closeAccordion",
    value: function closeAccordion(element) {
      var transition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var contentElement = element.querySelector('[data-accordion="content"]');

      if (!contentElement) {
        return;
      }

      element.classList.remove('is-active');

      if (transition) {
        contentElement.style.maxHeight = '0';
      } else {
        contentElement.style.transition = 'none';
        contentElement.style.maxHeight = '0';
        setTimeout(function () {
          contentElement.style.transition = null;
        });
      }
    }
  }]);

  return Accordions;
}();

/***/ }),

/***/ "./js/modules/card-counter.js":
/*!************************************!*\
  !*** ./js/modules/card-counter.js ***!
  \************************************/
/*! exports provided: cardCounter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cardCounter", function() { return cardCounter; });
// увеличивает / уменьшает / скрывает / показыкает счетчик в карточке товара
var cardCounter = function cardCounter() {
  document.addEventListener('click', function (evt) {
    var parrent = evt.target.closest('[data-toggle-show-or-hidden="parrent"');

    if (!parrent) {
      return;
    } // отключает переход по ссылке: "купить", "под заказ"


    if (evt.target.closest('[data-prevent-default="on"]')) {
      evt.preventDefault();
    }

    var counter = parrent.querySelector('[data-toggle-show-or-hidden="counter"]');
    var buttonPlus = parrent.querySelector('[data-toggle-show-or-hidden="button-plus"]');
    var maxLimit = parrent.querySelector('[data-counter-max-limin]');
    var counterValue = parseInt(counter.textContent, 10);
    var units = counter.hasAttribute('data-no-units') ? '' : 'шт.';

    var isClickButtonPlus = function isClickButtonPlus() {
      return !!evt.target.closest('[data-toggle-show-or-hidden="button-plus"]');
    };

    var isClickButtonMinus = function isClickButtonMinus() {
      return !!evt.target.closest('[data-toggle-show-or-hidden="button-minus"]');
    };

    var isClickButtonCounterShow = function isClickButtonCounterShow() {
      return !!evt.target.closest('[data-toggle-show-or-hidden="button-show"]');
    };

    var addProduct = function addProduct() {
      return counter.textContent = "".concat(counterValue + 1, " ").concat(units);
    };

    var removeProduct = function removeProduct() {
      return counter.textContent = "".concat(counterValue - 1, " ").concat(units);
    };

    var showCounter = function showCounter() {
      return parrent.classList.add('is-open');
    };

    var hiddenCounter = function hiddenCounter() {
      return parrent.classList.remove('is-open');
    };

    var isCounterEualsMaxLimit = function isCounterEualsMaxLimit() {
      return maxLimit && counterValue + 1 === +maxLimit.dataset.counterMaxLimin;
    };

    var buttonPlusDisabled = function buttonPlusDisabled() {
      return buttonPlus.disabled = true;
    };

    var buttonPlusEnabled = function buttonPlusEnabled() {
      return buttonPlus.disabled = false;
    };

    if (isClickButtonCounterShow()) {
      showCounter();
      addProduct();
    }

    if (isClickButtonPlus()) {
      addProduct();

      if (isCounterEualsMaxLimit()) {
        buttonPlusDisabled();
      }
    }

    if (isClickButtonMinus()) {
      if (counterValue === 1) {
        hiddenCounter();
      }

      removeProduct();
      buttonPlusEnabled();
    }
  });
};



/***/ }),

/***/ "./js/modules/close-filter-select-list.js":
/*!************************************************!*\
  !*** ./js/modules/close-filter-select-list.js ***!
  \************************************************/
/*! exports provided: closeFilterSelectList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "closeFilterSelectList", function() { return closeFilterSelectList; });
var closeButton = document.querySelector('.filter-select-list .j-close');
var breakpoint = window.matchMedia('(max-width:767px)');
var list = document.querySelector('.filter-select-list');

var breakpointChecker = function breakpointChecker() {
  closeButton.addEventListener('click', function () {
    if (list.classList.contains('is-open')) {
      list.classList.remove('is-open');
    }
  });
};

var closeFilterSelectList = function closeFilterSelectList() {
  if (!closeButton) {
    return;
  }

  breakpoint.addListener(breakpointChecker);
  breakpointChecker();
};



/***/ }),

/***/ "./js/modules/delivery-return.js":
/*!***************************************!*\
  !*** ./js/modules/delivery-return.js ***!
  \***************************************/
/*! exports provided: deliveryReturn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deliveryReturn", function() { return deliveryReturn; });
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var breakpoint = window.matchMedia('(max-width:767px)');

var deliveryReturn = function deliveryReturn() {
  var tableItems = document.querySelectorAll('.delivery-return__table-item');

  if (tableItems.length) {
    var breakpointChecker = function breakpointChecker() {
      if (breakpoint.matches) {
        tableItems.forEach(function (elem) {
          var prices = _toConsumableArray(elem.querySelectorAll('.delivery-return__table-content--price')).map(function (el) {
            return el.textContent;
          });

          var description = _toConsumableArray(elem.querySelectorAll('.delivery-return__table-content--description')).map(function (el) {
            return el.innerHTML.toLowerCase();
          });

          var string = '';

          if (prices.every(function (val) {
            return val === prices[0];
          })) {
            console.log(elem);
            var firstDescription = elem.querySelector('.delivery-return__table-content--description');
            firstDescription.classList.add('delivery-return__table-content--two-line');
            firstDescription.closest('.delivery-return__table-row').classList.add('delivery-return__table-row--two-lines');
            firstDescription.innerHTML = description.join(' или ');
            elem.querySelector('.delivery-return__table-row:nth-of-type(2)').classList.add('visually-hidden');
          }
        });
      }
    }; // breakpoint.addListener(breakpointChecker);


    breakpointChecker();
  }
};



/***/ }),

/***/ "./js/modules/designer-popup-close.js":
/*!********************************************!*\
  !*** ./js/modules/designer-popup-close.js ***!
  \********************************************/
/*! exports provided: initCloseDesignerPopup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initCloseDesignerPopup", function() { return initCloseDesignerPopup; });
var closeButtons = document.querySelectorAll('.designer-card__close-btn');

var onButtonClick = function onButtonClick(_ref) {
  var target = _ref.target;
  var popup = target.closest('.designer-card__popup');
  popup.classList.add('hidden');
  setTimeout(function () {
    popup.classList.remove('hidden');
  }, 300);
};

var initCloseDesignerPopup = function initCloseDesignerPopup() {
  if (!closeButtons.length) {
    return;
  }

  closeButtons.forEach(function (button) {
    button.addEventListener('click', onButtonClick);
  });
};



/***/ }),

/***/ "./js/modules/form/custom-select.js":
/*!******************************************!*\
  !*** ./js/modules/form/custom-select.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CustomSelect; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

// Функции создания разметки и рендера нативного селекта
var createElement = function createElement(template) {
  var newElement = document.createElement('div');
  newElement.innerHTML = template;
  return newElement.firstChild;
};

var renderElement = function renderElement(container, component) {
  var place = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'beforeend';

  switch (place) {
    case 'prepend':
      container.prepend(component);
      break;

    case 'afterend':
      container.after(component);
      break;

    case 'beforeend':
      container.append(component);
      break;
  }
};

var createNativeOptionsMarkup = function createNativeOptionsMarkup(items, activeIndex) {
  return items.map(function (el, index) {
    if (activeIndex.length) {
      var currentIndex = activeIndex.find(function (item) {
        return item === index;
      });

      if (currentIndex === index) {
        return "<option ".concat(el.value ? "value=".concat(el.value) : '', " selected>").concat(el.text ? "".concat(el.text) : '', "</option>");
      } else {
        return "<option ".concat(el.value ? "value=".concat(el.value) : '', ">").concat(el.text ? "".concat(el.text) : '', "</option>");
      }
    } else {
      return "<option ".concat(el.value ? "value=".concat(el.value) : '', ">").concat(el.text ? "".concat(el.text) : '', "</option>");
    }
  }).join('\n');
};

var createNativeSelectMarkup = function createNativeSelectMarkup(_ref) {
  var id = _ref.id,
      items = _ref.items,
      multiple = _ref.multiple,
      name = _ref.name,
      required = _ref.required,
      _ref$activeIndex = _ref.activeIndex,
      activeIndex = _ref$activeIndex === void 0 ? [] : _ref$activeIndex;
  return "<select ".concat(id ? "id='".concat(id, "'") : '', " ").concat(name ? "name='".concat(name, "'") : '', " ").concat(multiple ? 'multiple' : '', " ").concat(required ? 'required' : '', " tabindex=\"-1\" aria-hidden=\"true\">\n            <option value=\"\"></option>\n            ").concat(createNativeOptionsMarkup(items, activeIndex), "\n          </select>");
}; // Функция расстановки активных состояний у li по умолчанию


var setActiveState = function setActiveState(multiple, selectItems) {
  var flag = true;
  var activeIndex = [];
  selectItems.forEach(function (item, index) {
    if (multiple) {
      if (item.getAttribute('aria-selected') === 'true') {
        activeIndex.push(index);
      }
    } else {
      if (item.getAttribute('aria-selected') === 'true' && flag) {
        activeIndex.push(index);
        flag = false;
      } else {
        item.setAttribute('aria-selected', 'false');
      }
    }
  });
  return activeIndex;
}; // Формирование строки для мультиселекта


var createMultiString = function createMultiString(arr) {
  var str = '';

  if (arr.length) {
    if (arr.length === 1) {
      str = arr[0].innerHTML;
    } else {
      arr.forEach(function (el, index) {
        if (index === arr.length - 1) {
          str += el.innerHTML;
        } else {
          str += "".concat(el.innerHTML, ", ");
        }
      });
    }
  }

  return str;
}; // Функция расстановки активных состояний у li по умолчанию


var setSelectActiveState = function setSelectActiveState(multiple, insert, item) {
  var buttonTextBlock = item.querySelector('.custom-select__text');
  var activeItems = item.querySelectorAll('.custom-select__item[aria-selected="true"]');
  var label = item.querySelector('.custom-select__label');
  var str = createMultiString(activeItems);
  buttonTextBlock.style.transition = '0s';

  if (label) {
    label.style.transition = '0s';
  }

  setTimeout(function () {
    if (label) {
      label.style.transition = null;
    }

    buttonTextBlock.style.transition = null;
  }, 300);

  if (multiple && insert) {
    item.classList.add('not-empty');
    buttonTextBlock.innerHTML = str;
  } else if (multiple) {
    return;
  } else {
    item.classList.add('not-empty');
    buttonTextBlock.innerHTML = activeItems[0].innerHTML;
  }
}; // Функция создания структуры селекта, после создания селекта она сразу его рендерит


var createSelectStructure = function createSelectStructure(item) {
  var options = {};
  options.items = [];
  var multiple = item.dataset.multiple;
  var id = item.dataset.id;
  var name = item.dataset.name;
  var required = item.dataset.required;
  var insert = item.dataset.insert;
  var selectItems = item.querySelectorAll('.custom-select__item');
  var activeIndex = setActiveState(multiple, selectItems);

  if (activeIndex.length) {
    options.activeIndex = activeIndex;
    setSelectActiveState(multiple, insert, item);
  }

  options.name = name || false;
  options.id = id || false;
  options.required = Boolean(required);
  options.multiple = Boolean(multiple);
  selectItems.forEach(function (selectItem) {
    var value = selectItem.dataset.selectValue;
    var itemInfo = {};
    itemInfo.text = selectItem.innerText;
    itemInfo.value = value;
    options.items.push(itemInfo);
  });
  renderElement(item, createElement(createNativeSelectMarkup(options)));
  return item;
}; // Закрытие селекта


var closeSelect = function closeSelect() {
  var activeSelect = document.querySelector('[data-select].is-open');
  document.removeEventListener('click', onDocumentClick);
  document.removeEventListener('keydown', onEscapePress);

  if (activeSelect) {
    activeSelect.classList.remove('is-open');
  }
}; // Действия при клике на элемент списка


var clickAction = function clickAction(el, index) {
  var parent = el.closest('.custom-select');
  var multiple = parent.dataset.multiple;
  var insert = parent.dataset.insert;
  var buttonTextBlock = parent.querySelector('.custom-select__text');
  var itemText = el.innerText;
  var options = parent.querySelectorAll('option');
  var select = parent.querySelector('select');
  var changeEv = new CustomEvent('change');
  var inputEv = new CustomEvent('input');
  select.dispatchEvent(changeEv);
  select.dispatchEvent(inputEv);
  var form = select.closest('form');

  if (form) {
    var formChangeEv = new CustomEvent('change');
    var formInputEv = new CustomEvent('input');
    form.dispatchEvent(formChangeEv);
    form.dispatchEvent(formInputEv);
  }

  if (multiple) {
    if (insert === 'true') {
      if (el.getAttribute('aria-selected') === 'true') {
        el.setAttribute('aria-selected', 'false');
        var activeItems = parent.querySelectorAll('.custom-select__item[aria-selected="true"]');
        var str = createMultiString(activeItems);
        options[index + 1].selected = false;
        buttonTextBlock.innerText = str;

        if (!str) {
          parent.classList.remove('not-empty');
          parent.classList.remove('is-valid');
        }
      } else {
        el.setAttribute('aria-selected', 'true');

        var _activeItems = parent.querySelectorAll('.custom-select__item[aria-selected="true"]');

        var _str = createMultiString(_activeItems);

        buttonTextBlock.innerText = _str;
        parent.classList.add('not-empty');
        parent.classList.add('is-valid');
        options[index + 1].selected = true;
      }
    } else {
      if (el.getAttribute('aria-selected') === 'true') {
        el.setAttribute('aria-selected', 'false');
        options[index + 1].selected = false;
      } else {
        el.setAttribute('aria-selected', 'true');
        options[index + 1].selected = true;
      }
    }
  } else {
    var activeItem = parent.querySelector('.custom-select__item[aria-selected="true"]');

    if (el.getAttribute('aria-selected') === 'true') {
      closeSelect();
    } else {
      if (activeItem) {
        activeItem.setAttribute('aria-selected', 'false');
        parent.classList.remove('not-empty');
        parent.classList.remove('is-valid');
      }

      buttonTextBlock.innerText = itemText;
      el.setAttribute('aria-selected', 'true');
      parent.classList.add('not-empty');
      parent.classList.add('is-valid');
      options[index + 1].selected = true;
      closeSelect();
    }
  }
}; // Обработчики событий


var onDocumentClick = function onDocumentClick(_ref2) {
  var target = _ref2.target;

  if (!target.closest('.custom-select')) {
    closeSelect();
  }
};

var onEscapePress = function onEscapePress(e) {
  var isEscape = e.key === 'Escape';

  if (isEscape) {
    closeSelect();
  }
};

var onItemClick = function onItemClick(el, index) {
  clickAction(el, index);
};

var onItemKeydown = function onItemKeydown(e, el, index) {
  var isEnter = e.key === 'Enter';

  if (isEnter) {
    clickAction(el, index);
  }
};

var onLastItemKeydown = function onLastItemKeydown(e) {
  var isTab = e.key === 'Tab';

  if (isTab) {
    closeSelect();
  }
};

var onSelectClick = function onSelectClick(e) {
  var parent = e.target.closest('[data-select]');
  var activeSelect = document.querySelector('[data-select].is-open');
  parent.classList.remove('is-invalid');

  if (activeSelect && activeSelect === parent) {
    activeSelect.classList.remove('is-open');
    return;
  }

  if (activeSelect) {
    closeSelect();
  }

  document.addEventListener('click', onDocumentClick);
  document.addEventListener('keydown', onEscapePress);

  if (parent.classList.contains('is-open')) {
    parent.classList.remove('is-open');
  } else {
    parent.classList.add('is-open');
  }
};

var onSelectKeydown = function onSelectKeydown(e) {
  var parent = e.target.closest('[data-select]');
  parent.classList.remove('is-invalid');

  if (e.shiftKey && e.key === 'Tab' && parent.closest('.is-open')) {
    closeSelect();
  }
}; // Все действия с селектом


var setSelectAction = function setSelectAction(item) {
  var customSelect = item;
  var button = customSelect.querySelector('.custom-select__button');
  var selectItems = customSelect.querySelectorAll('.custom-select__item');
  button.addEventListener('click', onSelectClick);
  button.addEventListener('keydown', onSelectKeydown);
  selectItems.forEach(function (el, index) {
    el.addEventListener('click', function () {
      onItemClick(el, index);
    });
    el.addEventListener('keydown', function (e) {
      onItemKeydown(e, el, index);
    });

    if (index === selectItems.length - 1) {
      el.addEventListener('keydown', onLastItemKeydown);
    }
  });
}; // Класс CustomSelect


var CustomSelect = /*#__PURE__*/function () {
  function CustomSelect() {
    _classCallCheck(this, CustomSelect);

    window.selectInit = this.init.bind(this);
  }

  _createClass(CustomSelect, [{
    key: "setAction",
    value: function setAction(item) {
      setSelectAction(item);
    }
  }, {
    key: "createSelect",
    value: function createSelect(item) {
      createSelectStructure(item);
      return item;
    }
  }, {
    key: "init",
    value: function init() {
      var _this = this;

      var selects = document.querySelectorAll('[data-select]');
      selects.forEach(function (select) {
        if (!select.classList.contains('is-initialized')) {
          var newSelect = _this.createSelect(select);

          _this.setAction(newSelect);

          select.classList.add('is-initialized');
        }
      });
    }
  }]);

  return CustomSelect;
}();



/***/ }),

/***/ "./js/modules/form/form-validate.js":
/*!******************************************!*\
  !*** ./js/modules/form/form-validate.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return FormsValidate; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

// import {initTooltip} from './init-tooltips-list/init-tooltip';
// import {getTooltipsOptions} from './init-tooltips-list/get-tooltips-options';
// Константы и переменные
var BASE_COUNTRY_CODE = '+7';
var BASE_MATRIX = '(___) ___ __ __';
var phoneLength = BASE_COUNTRY_CODE.length + BASE_MATRIX.length; // Ограничения ввода для обычных полей

var returnLimitationsRegEx = function returnLimitationsRegEx(dataLimitations) {
  switch (dataLimitations) {
    case 'digit':
      return /[^\d]/g;

    case 'name':
      return /[^a-zA-Zа-яёА-ЯЁ\-\s]/g;

    case 'letters':
      return /[^a-zA-Zа-яёА-ЯЁ\s]/g;

    case 'letters-and-digit':
      return /[^a-zA-Zа-яёА-ЯЁ\s\d]/g;

    case 'cyrillic':
      return /[^а-яёА-ЯЁ\s]/g;

    case 'latin':
      return /[^a-zA-Z\s]/g;

    default:
      return false;
  }
};

var simpleLimitations = function simpleLimitations(formElement, dataLimitations) {
  var RegEx = returnLimitationsRegEx(dataLimitations);

  if (RegEx) {
    formElement.addEventListener('input', function () {
      formElement.value = formElement.value.replace(RegEx, '');
    });
    return;
  } // eslint-disable-next-line no-console


  console.error("\u041F\u0435\u0440\u0435\u0434\u0430\u043D\u043D\u044B\u0439 \u0444\u043E\u0440\u043C\u0430\u0442 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u044F: ".concat(dataLimitations, ", \u043D\u0435 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044F. \u041F\u0440\u043E\u0432\u0435\u0440\u044C\u0442\u0435 \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u043E\u0441\u0442\u044C \u0432\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0445 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439 \u0432 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441\u043E \u0441\u043F\u0435\u0446\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0435\u0439."));
}; // Ограничения ввода для обычных полей с матрицей


var returnMatrixLimitationsRegEx = function returnMatrixLimitationsRegEx(dataMatrixLimitations) {
  switch (dataMatrixLimitations) {
    case 'digit':
      return /[^\d]/g;

    case 'name':
      return /[^\а-яё\А-ЯЁ\a-z\A-Z\-]]/g;

    case 'letters':
      return /[^\а-яё\А-ЯЁ\a-z\A-Z]/g;

    case 'letters-and-digit':
      return /[^\а-яё\А-ЯЁ\a-z\A-Z\d]/g;

    case 'cyrillic':
      return /[^\а-яё\А-ЯЁ]/g;

    case 'latin':
      return /[^\a-z\A-Z]/g;

    default:
      return false;
  }
};

var initMatrixReplace = function initMatrixReplace(target, matrix, RegEx) {
  var def = matrix.replace(RegEx, '');
  var val = target.value.replace(RegEx, '');
  var i = 0;

  if (def.length >= val.length) {
    val = def;
  }

  target.value = matrix.replace(/./g, function (a) {
    if (/[_\^]/.test(a) && i < val.length) {
      return val.charAt(i++);
    } else if (i >= val.length) {
      return '';
    } else {
      return a;
    }
  });
};

var simpleMatrix = function simpleMatrix(formElement, dataMatrix, dataMatrixLimitations) {
  if (dataMatrixLimitations === null) {
    // eslint-disable-next-line no-console
    console.error('При валидации по матрице обязательно указывать формат ограничений: data-matrix-limitations=""');
    return;
  }

  var RegEx = returnMatrixLimitationsRegEx(dataMatrixLimitations);

  if (RegEx) {
    formElement.addEventListener('input', function () {
      initMatrixReplace(formElement, dataMatrix, RegEx);
    });
  } else {
    // eslint-disable-next-line no-console
    console.error("\u041F\u0435\u0440\u0435\u0434\u0430\u043D\u043D\u044B\u0439 \u0444\u043E\u0440\u043C\u0430\u0442 \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u044F: ".concat(dataMatrixLimitations, ", \u043D\u0435 \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044F. \u041F\u0440\u043E\u0432\u0435\u0440\u044C\u0442\u0435 \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u043E\u0441\u0442\u044C \u0432\u0432\u0435\u0434\u0451\u043D\u043D\u044B\u0445 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439 \u0432 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441\u043E \u0441\u043F\u0435\u0446\u0438\u0444\u0438\u043A\u0430\u0446\u0438\u0435\u0439."));
  }
}; // Маска для телефона


var onInputPhoneInput = function onInputPhoneInput(_ref) {
  var target = _ref.target;
  var matrix = "".concat(BASE_COUNTRY_CODE).concat(BASE_MATRIX);
  var def = matrix.replace(/\D/g, '');
  var i = 0;
  var val = target.value.replace(/\D/g, '');

  if (def.length >= val.length) {
    val = def;
  }

  target.value = matrix.replace(/./g, function (a) {
    if (/[_\d]/.test(a) && i < val.length) {
      return val.charAt(i++);
    } else if (i >= val.length) {
      return '';
    } else {
      return a;
    }
  });
};

var prettifyPhoneInput = function prettifyPhoneInput(input) {
  if (!input.value.startsWith(BASE_COUNTRY_CODE)) {
    if (input.value.startsWith('8')) {
      input.value = input.value.replace('8', BASE_COUNTRY_CODE);
    } else {
      input.value = "".concat(BASE_COUNTRY_CODE).concat(input.value);
    }
  } // onInputPhoneInput({input});


  var matrix = "".concat(BASE_COUNTRY_CODE).concat(BASE_MATRIX);
  var def = matrix.replace(/\D/g, '');
  var i = 0;
  var val = input.value.replace(/\D/g, '');

  if (def.length >= val.length) {
    val = def;
  }

  input.value = matrix.replace(/./g, function (a) {
    if (/[_\d]/.test(a) && i < val.length) {
      return val.charAt(i++);
    } else if (i >= val.length) {
      return '';
    } else {
      return a;
    }
  });
};

var onFocusPhoneInput = function onFocusPhoneInput(_ref2) {
  var target = _ref2.target;

  if (!target.value) {
    target.value = BASE_COUNTRY_CODE;
  }

  target.addEventListener('input', onInputPhoneInput);
  target.addEventListener('blur', onBlurPhoneInput);
  target.addEventListener('keydown', onKeydownPhoneInput);
};

var onKeydownPhoneInput = function onKeydownPhoneInput(e) {
  if (e.target.selectionStart === 1 && e.keyCode === 8 || e.keyCode === 46) {
    e.preventDefault();
  }

  if (e.target.selectionStart <= phoneLength && e.keyCode !== 8 && e.keyCode !== 46 && e.keyCode !== 37 && e.keyCode !== 39) {
    e.target.setSelectionRange(phoneLength, phoneLength);
  }
};

var onBlurPhoneInput = function onBlurPhoneInput(_ref3) {
  var target = _ref3.target;

  if (target.value === BASE_COUNTRY_CODE) {
    var parent = target.closest('[data-validate-type="phone"]');
    target.value = '';
    parent.classList.remove('not-empty');
    target.removeEventListener('input', onInputPhoneInput);
    target.removeEventListener('blur', onBlurPhoneInput);
  }
}; // Показ ошибок полей форм


var hideError = function hideError(el) {
  if (el.classList.contains('toggle-group')) {
    validateToggleGroup(el);
    el.setAttribute('aria-invalid', 'true');
    el.classList.remove('is-invalid');
    el.classList.add('is-valid');
  } else {
    var parent = el.closest('[data-validate-type]');
    el.setAttribute('aria-invalid', 'false');
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
  }
};

var showError = function showError(el) {
  if (el.classList.contains('toggle-group')) {
    validateToggleGroup(el);
    el.setAttribute('aria-invalid', 'false');
    el.classList.add('is-invalid');
    el.classList.remove('is-valid');
  } else {
    var parent = el.closest('[data-validate-type]');
    el.setAttribute('aria-invalid', 'true');
    parent.classList.add('is-invalid');
    parent.classList.remove('is-valid');
  }
};

var showInputsError = function showInputsError(inputs) {
  var flag = true;
  var result = true;
  inputs.forEach(function (input) {
    var type = input.closest('[data-validate-type]').dataset.validateType;

    if (type === 'toggle-group') {
      return;
    }

    flag = validateInputs(type, input);

    if (!flag) {
      result = flag;
      showError(input);
    } else {
      hideError(input);
    }
  });
  return result;
};

var showGroupInputsError = function showGroupInputsError(parents) {
  var flag = true;
  var result = true;

  if (!parents.length) {
    return result;
  }

  parents.forEach(function (parent) {
    flag = validateToggleGroup(parent);

    if (!flag) {
      result = flag;
      showError(parent);
    } else {
      hideError(parent);
    }
  });
  return result;
};

var showErrors = function showErrors(inputs, parents) {
  var result = true;
  var inputsResult = showInputsError(inputs);
  var groupResult = showGroupInputsError(parents);

  if (!inputsResult || !groupResult) {
    result = false;
  }

  return result;
}; // Валидация полей форм


var validateTextInput = function validateTextInput(input) {
  var parent = input.closest('[data-validate-type]');
  var flag = true;
  var minLength = +input.getAttribute('minlength');

  if (!minLength) {
    minLength = 1;
  }

  if (input.value.length >= minLength) {
    parent.classList.add('is-valid');
    parent.classList.remove('is-invalid');
    input.setAttribute('aria-invalid', 'false');
  } else {
    parent.classList.remove('is-valid');
    input.setAttribute('aria-invalid', 'true');
    flag = false;
  }

  return flag;
};

var validatePhoneInput = function validatePhoneInput(input) {
  var parent = input.closest('[data-validate-type]');
  var flag = true;

  if (input.value.length >= phoneLength) {
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
    input.setAttribute('aria-invalid', 'false');
  } else {
    parent.classList.remove('is-valid');
    input.setAttribute('aria-invalid', 'true');
    flag = false;
  }

  return flag;
};

var validateEmailInput = function validateEmailInput(input) {
  var parent = input.closest('[data-validate-type]');
  var flag = true;
  var emailString = /[a-zA-Zа-яёА-ЯЁ0-9]{1}([a-zA-Zа-яёА-ЯЁ0-9\-_\.]{1,})?@[a-zA-Zа-яёА-ЯЁ0-9\-]{1}([a-zA-Zа-яёА-ЯЁ0-9.\-]{1,})?[a-zA-Zа-яёА-ЯЁ0-9\-]{1}\.[a-zA-Zа-яёА-ЯЁ]{2,6}/;
  var regEmail = new RegExp(emailString, '');

  if (regEmail.test(input.value)) {
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
    input.setAttribute('aria-invalid', 'false');
  } else {
    parent.classList.remove('is-valid');
    input.setAttribute('aria-invalid', 'true');
    flag = false;
  }

  return flag;
};

var validateMatrixInput = function validateMatrixInput(input) {
  var parent = input.closest('[data-validate-type]');
  var flag = true;
  var matrix = input.closest('[data-matrix]').dataset.matrix;

  if (input.value.length === matrix.length) {
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
    input.setAttribute('aria-invalid', 'false');
  } else {
    parent.classList.remove('is-valid');
    input.setAttribute('aria-invalid', 'true');
    flag = false;
  }

  return flag;
};

var findSelectedOption = function findSelectedOption(options) {
  var flag = false;
  options.forEach(function (option) {
    if (option.value && option.selected) {
      flag = true;
    }
  });
  return flag;
};

var validateSelect = function validateSelect(input) {
  var parent = input.closest('[data-validate-type]');
  var options = input.querySelectorAll('option');
  var customSelectText = parent.querySelector('.custom-select__text');
  input.setAttribute('aria-invalid', 'false');
  var flag = true;

  if (findSelectedOption(options)) {
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
    input.setAttribute('aria-invalid', 'false');
  } else {
    parent.classList.remove('is-valid');
    input.setAttribute('aria-invalid', 'true');
    customSelectText.innerHTML = '';
    parent.classList.remove('not-empty');
    flag = false;
  }

  return flag;
};

var validateCheckbox = function validateCheckbox(input) {
  var parent = input.closest('[data-validate-type]');
  var flag = true;

  if (input.checked) {
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
  } else {
    parent.classList.remove('is-valid');
    flag = false;
  }

  return flag;
};

var validateInputs = function validateInputs(type, input) {
  switch (type) {
    case 'text':
      return validateTextInput(input);

    case 'phone':
      return validatePhoneInput(input);

    case 'email':
      return validateEmailInput(input);

    case 'matrix':
      return validateMatrixInput(input);

    case 'select':
      return validateSelect(input);

    case 'checkbox':
      return validateCheckbox(input);

    default:
      return false;
  }
};

var returnCheckedElements = function returnCheckedElements(inputs) {
  var flag = false;
  inputs.forEach(function (input) {
    if (input.checked) {
      flag = true;
    }
  });
  return flag;
};

var removeGroupAria = function removeGroupAria(inputs) {
  inputs.forEach(function (input) {
    if (!input.checked) {
      input.removeAttribute('aria-required');
      input.removeAttribute('aria-invalid');
    } else {
      input.setAttribute('aria-required', true);
      input.setAttribute('aria-invalid', false);
    }
  });
};

var setGroupAria = function setGroupAria(inputs) {
  inputs.forEach(function (input) {
    input.setAttribute('aria-required', true);
    input.setAttribute('aria-invalid', true);
  });
};

var validateToggleGroup = function validateToggleGroup(parent) {
  var formElements = parent.querySelectorAll('input');
  var flag = true;

  if (returnCheckedElements(formElements)) {
    removeGroupAria(formElements);
    parent.classList.remove('is-invalid');
    parent.classList.add('is-valid');
  } else {
    setGroupAria(formElements);
    parent.classList.remove('is-valid');
    flag = false;
  }

  return flag;
};

var checkInputValidity = function checkInputValidity(type, input) {
  validateInputs(type, input);
}; // Установка всех действий в полях форм


var formElementLimitationsAction = function formElementLimitationsAction(formValidateElement) {
  var dataLimitations = formValidateElement.dataset.limitations ? formValidateElement.dataset.limitations : null;
  var formElement = formValidateElement.querySelector('input');

  if (!formElement) {
    formElement = formValidateElement.querySelector('textarea');
  }

  if (!formElement) {
    // eslint-disable-next-line no-console
    console.error('В валидируемом блоке отсутствует поле формы');
    return;
  }

  if (dataLimitations) {
    simpleLimitations(formElement, dataLimitations);
  }
};

var formElementMatrixAction = function formElementMatrixAction(formValidateElement) {
  var dataMatrix = formValidateElement.dataset.matrix ? formValidateElement.dataset.matrix : null;
  var dataMatrixLimitations = formValidateElement.dataset.matrixLimitations ? formValidateElement.dataset.matrixLimitations : null;
  var formElement = formValidateElement.querySelector('input');

  if (!formElement) {
    formElement = formValidateElement.querySelector('textarea');
  }

  if (!formElement) {
    // eslint-disable-next-line no-console
    console.error('В валидируемом блоке отсутствует поле формы');
    return;
  }

  if (dataMatrix) {
    simpleMatrix(formElement, dataMatrix, dataMatrixLimitations);
  }
};

var formElementValidateAction = function formElementValidateAction(formValidateElement) {
  var dataValidateType = formValidateElement.dataset.validateType;
  var dataLimitations = formValidateElement.dataset.limitations ? formValidateElement.dataset.limitations : null;
  var dataMatrix = formValidateElement.dataset.matrix ? formValidateElement.dataset.matrix : null;
  var dataMatrixLimitations = formValidateElement.dataset.matrixLimitations ? formValidateElement.dataset.matrixLimitations : null;

  if (dataValidateType !== 'toggle-group') {
    var formElement = formValidateElement.querySelector('input');

    if (!formElement) {
      formElement = formValidateElement.querySelector('textarea');
    }

    if (!formElement) {
      formElement = formValidateElement.querySelector('select');
    }

    if (!formElement) {
      // eslint-disable-next-line no-console
      console.error('В валидируемом блоке отсутствует поле формы');
      return;
    }

    formElement.setAttribute('aria-required', true);
    formElement.setAttribute('aria-invalid', true);

    if (dataLimitations) {
      simpleLimitations(formElement, dataLimitations);
    }

    if (dataMatrix) {
      simpleMatrix(formElement, dataMatrix, dataMatrixLimitations);
    }

    if (dataValidateType === 'phone') {
      if (formElement.value) {
        prettifyPhoneInput(formElement);
      }

      formElement.addEventListener('focus', onFocusPhoneInput);
    }

    formElement.addEventListener('input', function () {
      var inputLength = formElement.value.length;

      if (inputLength > 0) {
        formValidateElement.classList.add('custom-input--filled');
      } else {
        formValidateElement.classList.remove('custom-input--filled');
      }
    });
    formElement.addEventListener('input', function () {
      checkInputValidity(dataValidateType, formElement);
    });
    checkInputValidity(dataValidateType, formElement);
  } else {
    var formElements = formValidateElement.querySelectorAll('input');

    if (formElements.length) {
      formElements.forEach(function (el) {
        el.setAttribute('aria-required', true);
        el.setAttribute('aria-invalid', true);
        el.addEventListener('input', function () {
          validateToggleGroup(formValidateElement);
        });
      });
      validateToggleGroup(formValidateElement);
    } else {
      // eslint-disable-next-line no-console
      console.error('В валидируемом блоке отсутствуют поля формы');
      return;
    }
  }
}; // Обработка события submit на форме


var onFormSubmit = function onFormSubmit(e, callback) {
  var formElements = e.target.querySelectorAll('[aria-required="true"]');
  var groupsFormElement = e.target.querySelectorAll('[data-validate-type="toggle-group"]');

  if (showErrors(formElements, groupsFormElement) && callback && callback.validationSuccessCallback) {
    callback.validationSuccessCallback(e);

    e.target.closest('[data-tippy-root]')._tippy.hide();
  } else if (callback && callback.validationErrorCallback) {
    callback.validationErrorCallback(e);
  } else {
    e.preventDefault();
  }
}; // Очистка полей формы


var clearForm = function clearForm(form) {
  form.reset();
  var formValidateElements = form.querySelectorAll('[data-validate-type]');
  var notEmptyInputs = form.querySelectorAll('.not-empty');
  var invalidInputs = form.querySelectorAll('.is-invalid');
  notEmptyInputs.forEach(function (notEmptyInput) {
    notEmptyInput.classList.remove('not-empty');
  });
  invalidInputs.forEach(function (invalidInput) {
    invalidInput.classList.remove('is-invalid');
  });
  formValidateElements.forEach(function (formValidateElement) {
    var dataValidateType = formValidateElement.dataset.validateType;

    if (dataValidateType !== 'toggle-group') {
      var formElement = formValidateElement.querySelector('input');

      if (!formElement) {
        formElement = formValidateElement.querySelector('textarea');
      }

      if (!formElement) {
        formElement = formValidateElement.querySelector('select');
      }

      if (!formElement) {
        // eslint-disable-next-line no-console
        console.error('В валидируемом блоке отсутствует поле формы');
        return;
      }

      formElement.value = '';
      checkInputValidity(dataValidateType, formElement);
    } else {
      validateToggleGroup(formValidateElement);
    }
  });
};

window.clearForm = clearForm; // Класс FormsValidate

var FormsValidate = /*#__PURE__*/function () {
  function FormsValidate(wrappers) {
    var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, FormsValidate);

    this.wrappers = wrappers;
    this.callback = callback;
  }

  _createClass(FormsValidate, [{
    key: "init",
    value: function init(formWrappers) {
      var _this = this;

      if (!formWrappers) {
        formWrappers = this.wrappers;
      }

      var typeOfNode = Object.prototype.toString.call(formWrappers);

      if (typeOfNode === '[object HTMLCollection]' || typeOfNode === '[object NodeList]' || typeOfNode === '[object Array]') {
        formWrappers.forEach(function (wrapper) {
          if (wrapper.classList.contains('is-initialized')) {
            // eslint-disable-next-line no-console
            console.error('На данной форме валидация уже инициализированна');
          } else {
            _this.initItem(wrapper);
          }
        });
      } else if (typeOfNode === '[object HTMLDivElement]' || typeOfNode === '[object HTMLElement]') {
        if (!formWrappers.classList.contains('is-initialized')) {
          this.initItem(formWrappers);
        }
      } else {
        // eslint-disable-next-line no-console
        console.error('Переданный обьект не соответствует формату');
        return;
      }
    }
  }, {
    key: "initItem",
    value: function initItem(element) {
      var _this2 = this;

      element.classList.add('is-initialized');
      var form = element.querySelector('form');
      var resetButtons = form.querySelectorAll('button[type="reset"], [data-reset]');
      form.noValidate = true;
      form.addEventListener('submit', function (e) {
        onFormSubmit(e, _this2.callback);
      });

      if (resetButtons.length) {
        resetButtons.forEach(function (btn) {
          btn.addEventListener('click', function (e) {
            e.preventDefault();
            clearForm(form);
          });
        });
      }

      var formValidateElements = form.querySelectorAll('[data-validate-type]');
      var formLimitationsElements = form.querySelectorAll('[data-limitations]:not([data-validate-type])');
      var formMatrixElements = form.querySelectorAll('[data-matrix]:not([data-validate-type])');

      if (formValidateElements.length) {
        formValidateElements.forEach(function (el) {
          formElementValidateAction(el);
        });
      }

      if (formLimitationsElements.length) {
        formLimitationsElements.forEach(function (el) {
          formElementLimitationsAction(el);
        });
      }

      if (formMatrixElements.length) {
        formMatrixElements.forEach(function (el) {
          formElementMatrixAction(el);
        });
      }
    }
  }]);

  return FormsValidate;
}();


window.FormsValidate = FormsValidate;

/***/ }),

/***/ "./js/modules/form/init-custom-select.js":
/*!***********************************************!*\
  !*** ./js/modules/form/init-custom-select.js ***!
  \***********************************************/
/*! exports provided: initCustomSelect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initCustomSelect", function() { return initCustomSelect; });
/* harmony import */ var _custom_select__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./custom-select */ "./js/modules/form/custom-select.js");


var initCustomSelect = function initCustomSelect() {
  var customSelect = new _custom_select__WEBPACK_IMPORTED_MODULE_0__["default"]();
  customSelect.init();
};



/***/ }),

/***/ "./js/modules/form/init-form-validate.js":
/*!***********************************************!*\
  !*** ./js/modules/form/init-form-validate.js ***!
  \***********************************************/
/*! exports provided: initFormValidate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initFormValidate", function() { return initFormValidate; });
/* harmony import */ var _form_validate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./form-validate */ "./js/modules/form/form-validate.js");

var formWrappers = document.querySelectorAll('[data-validate]');

var resetForm = function resetForm(form) {
  setTimeout(function () {
    window.clearForm(form);
  }, 1000);
};

var baseValidationSuccessCallback = function baseValidationSuccessCallback(e) {
  e.preventDefault(); // В данном колбеке бэкендер будет писать запрос на отправку формы на сервер и обрабатывать возможные ошибки при отправке

  resetForm(e.target);
};

var baseValidationErrorCallback = function baseValidationErrorCallback(e) {
  e.preventDefault();
};

var customExampleValidationSuccessCallback = function customExampleValidationSuccessCallback(e) {
  e.preventDefault(); // В данном колбеке бэкендер будет писать запрос на отправку формы на сервер и обрабатывать возможные ошибки при отправке

  resetForm(e.target); // eslint-disable-next-line no-console

  console.log('Ваша форма успешна отправлена');
};

var customExampleValidationErrorCallback = function customExampleValidationErrorCallback(e) {
  e.preventDefault(); // eslint-disable-next-line no-console

  console.error('Отправка формы невозможна, заполните все обязательные поля');
};

var callbacks = {
  base: {
    // Колбек при успешной валидации формы при попытке её отправки
    validationSuccessCallback: baseValidationSuccessCallback,
    // Колбек при не успешной валидации формы при попытке её отправки, не связан с запросами на сервер
    validationErrorCallback: baseValidationErrorCallback
  },
  customExample: {
    validationSuccessCallback: customExampleValidationSuccessCallback,
    validationErrorCallback: customExampleValidationErrorCallback
  }
};

var setCustomPhoneInputsEvent = function setCustomPhoneInputsEvent() {
  if (document.querySelectorAll('[data-validate-type="phone"] input').length) {
    document.querySelector('html').addEventListener('input', function (_ref) {
      var target = _ref.target;

      if (target.closest('[data-validate-type="phone"]')) {
        target.closest('[data-validate-type="phone"]').querySelector('input').dispatchEvent(new Event('input'));
      }
    });
  }
};

var initFormValidate = function initFormValidate() {
  if (formWrappers.length) {
    setCustomPhoneInputsEvent();
    formWrappers.forEach(function (wrapper) {
      var callback = wrapper.dataset.callback;

      if (!callback) {
        callback = 'base';
      }

      var formValidate = new _form_validate__WEBPACK_IMPORTED_MODULE_0__["default"](wrapper, callbacks[callback]);
      return formValidate.init();
    });
  }
};



/***/ }),

/***/ "./js/modules/frize-label-init.js":
/*!****************************************!*\
  !*** ./js/modules/frize-label-init.js ***!
  \****************************************/
/*! exports provided: frizeLabelInit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "frizeLabelInit", function() { return frizeLabelInit; });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// если в инпуте есть значение на родителе появляется класс is-value, иначе класс удается
var frizeLabel = function frizeLabel(parent) {
  if (!parent && parent.classList.contains('is-initialized')) {
    return;
  } else {
    parent.classList.add('is-initialized');
  }

  parent.addEventListener('input', function (evt) {
    var input = evt.target.closest('[data-frize-label="input"]');

    if (input && input.value !== '') {
      parent.classList.add('is-value');
    } else {
      parent.classList.remove('is-value');
    }
  }); // при отправки формы со всех инпутов снимается класс is-value

  document.addEventListener('click', function (evt) {
    var form = evt.target.closest('form');

    if (!form) {
      return;
    } else if (form.classList.contains('frize-label-is-initialized-js')) {
      return;
    }

    form.classList.add('frize-label-is-initialized-js');
    form.addEventListener('submit', function () {
      var TIME_DELETE_CLASS = 1200;
      var customInputList = form.querySelectorAll('.custom-input');

      var _iterator = _createForOfIteratorHelper(customInputList),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var item = _step.value;
          item.classList.remove('custom-input--filled'); // удаляет наследие от другово автора

          if (!item.classList.contains('is-invalid') && item.value === '') {
            (function () {
              var inputIsValueClass = item.querySelector('.is-value');
              setTimeout(function () {
                return inputIsValueClass.classList.remove('is-value');
              }, TIME_DELETE_CLASS);
            })();
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    });
  });
};

var frizeLabelInit = function frizeLabelInit() {
  var parents = document.querySelectorAll('[data-frize-label="parent"]');

  var _iterator2 = _createForOfIteratorHelper(parents),
      _step2;

  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var item = _step2.value;
      frizeLabel(item);
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
}; // window сделан для бэкэнда


window.frizeLabelInit = frizeLabelInit;


/***/ }),

/***/ "./js/modules/hover-select-lighting-action.js":
/*!****************************************************!*\
  !*** ./js/modules/hover-select-lighting-action.js ***!
  \****************************************************/
/*! exports provided: hoverSelectLightingAction */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hoverSelectLightingAction", function() { return hoverSelectLightingAction; });
var linkOverAction = function linkOverAction(evt) {
  if (evt.target.classList.contains('tabs-lighting__link')) {
    var link = evt.target;
    var imageNumber = link.dataset.image;
    var element = evt.target.parentElement.parentElement.parentElement.parentElement;
    var mainImage = element.querySelector('.tabs-lighting__image--main');
    var hoverImage = element.querySelector(".tabs-lighting__image--hover[data-image=\"".concat(imageNumber, "\"]"));
    mainImage.classList.add('is-hide');
    hoverImage.classList.add('is-show');
  }
};

var linkOutAction = function linkOutAction(evt) {
  if (evt.target.classList.contains('tabs-lighting__link')) {
    var link = evt.target;
    var imageNumber = link.dataset.image;
    var element = evt.target.parentElement.parentElement.parentElement.parentElement;
    var mainImage = element.querySelector('.tabs-lighting__image--main');
    var hoverImage = element.querySelector(".tabs-lighting__image--hover[data-image=\"".concat(imageNumber, "\"]"));
    mainImage.classList.remove('is-hide');
    hoverImage.classList.remove('is-show');
  }
};

var itemOverAction = function itemOverAction(evt) {
  if (evt.target.classList.contains('tabs-lighting__item')) {
    var link = evt.target.firstChild;
    var imageNumber = link.dataset.image;
    var element = evt.target.parentElement.parentElement.parentElement;
    var mainImage = element.querySelector('.tabs-lighting__image--main');
    var hoverImage = element.querySelector(".tabs-lighting__image--hover[data-image=\"".concat(imageNumber, "\"]"));
    mainImage.classList.add('is-hide');
    hoverImage.classList.add('is-show');
  }
};

var itemOutAction = function itemOutAction(evt) {
  if (evt.target.classList.contains('tabs-lighting__item')) {
    var link = evt.target.firstChild;
    var imageNumber = link.dataset.image;
    var element = evt.target.parentElement.parentElement.parentElement;
    var mainImage = element.querySelector('.tabs-lighting__image--main');
    var hoverImage = element.querySelector(".tabs-lighting__image--hover[data-image=\"".concat(imageNumber, "\"]"));
    mainImage.classList.remove('is-hide');
    hoverImage.classList.remove('is-show');
  }
};

var newOverAction = function newOverAction(evt) {
  if (evt.target.classList.contains('tabs-lighting__new')) {
    var link = evt.target.parentElement;
    var imageNumber = link.dataset.image;
    var element = evt.target.parentElement.parentElement.parentElement.parentElement.parentElement;
    var mainImage = element.querySelector('.tabs-lighting__image--main');
    var hoverImage = element.querySelector(".tabs-lighting__image--hover[data-image=\"".concat(imageNumber, "\"]"));
    mainImage.classList.add('is-hide');
    hoverImage.classList.add('is-show');
  }
};

var newOutAction = function newOutAction(evt) {
  if (evt.target.classList.contains('tabs-lighting__new')) {
    var link = evt.target.parentElement;
    var imageNumber = link.dataset.image;
    var element = evt.target.parentElement.parentElement.parentElement.parentElement.parentElement;
    var mainImage = element.querySelector('.tabs-lighting__image--main');
    var hoverImage = element.querySelector(".tabs-lighting__image--hover[data-image=\"".concat(imageNumber, "\"]"));
    mainImage.classList.remove('is-hide');
    hoverImage.classList.remove('is-show');
  }
};

var hoverSelectLightingAction = function hoverSelectLightingAction() {
  document.addEventListener('mouseover', function (evt) {
    linkOverAction(evt);
    itemOverAction(evt);
    newOverAction(evt);
  });
  document.addEventListener('mouseout', function (evt) {
    linkOutAction(evt);
    itemOutAction(evt);
    newOutAction(evt);
  });
};



/***/ }),

/***/ "./js/modules/init-accordion.js":
/*!**************************************!*\
  !*** ./js/modules/init-accordion.js ***!
  \**************************************/
/*! exports provided: initAccordions, accordions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initAccordions", function() { return initAccordions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "accordions", function() { return accordions; });
/* harmony import */ var _accordions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accordions */ "./js/modules/accordions.js");

var accordions;

var initAccordions = function initAccordions() {
  accordions = new _accordions__WEBPACK_IMPORTED_MODULE_0__["Accordions"](); // Используйте в разработке экспортируемую переменную accordions, window сделан для бэкэнда

  window.accordions = accordions;
};



/***/ }),

/***/ "./js/modules/init-basket-input.js":
/*!*****************************************!*\
  !*** ./js/modules/init-basket-input.js ***!
  \*****************************************/
/*! exports provided: initBasketInput */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initBasketInput", function() { return initBasketInput; });
var initBasketInput = function initBasketInput() {
  var basketInputWrap = document.querySelector('.basket-menu__input');

  if (!basketInputWrap) {
    return;
  }

  var basketInput = basketInputWrap.querySelector('input');
  basketInput.addEventListener('focus', function (e) {
    basketInputWrap.classList.add('active');
  });
  basketInput.addEventListener('blur', function (e) {
    if (!basketInput.value) {
      basketInputWrap.classList.remove('active');
    }
  });
};



/***/ }),

/***/ "./js/modules/init-counter-list/change-disabled-batton.js":
/*!****************************************************************!*\
  !*** ./js/modules/init-counter-list/change-disabled-batton.js ***!
  \****************************************************************/
/*! exports provided: changeDisabledBatton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "changeDisabledBatton", function() { return changeDisabledBatton; });
/* harmony import */ var _is_quantity_equal_limit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is-quantity-equal-limit */ "./js/modules/init-counter-list/is-quantity-equal-limit.js");
// disabled кнопку плюс если счетчик равен
// максимальному лимиту и enabled если меньше


var isDisabledBatton = function isDisabledBatton(limit, quantity) {
  return Object(_is_quantity_equal_limit__WEBPACK_IMPORTED_MODULE_0__["isQuantityEqualLimit"])({
    limit: limit,
    quantity: quantity
  });
};

var changeDisabledBatton = function changeDisabledBatton(_ref) {
  var quantity = _ref.quantity,
      limit = _ref.limit,
      batton = _ref.batton;

  if (isDisabledBatton(limit, quantity)) {
    batton.disabled = true;
  } else {
    batton.disabled = false;
  }
};



/***/ }),

/***/ "./js/modules/init-counter-list/counter-change.js":
/*!********************************************************!*\
  !*** ./js/modules/init-counter-list/counter-change.js ***!
  \********************************************************/
/*! exports provided: counterСhange */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "counterСhange", function() { return counterСhange; });
/* harmony import */ var _change_disabled_batton__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./change-disabled-batton */ "./js/modules/init-counter-list/change-disabled-batton.js");
/* harmony import */ var _is_quantity_equal_limit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is-quantity-equal-limit */ "./js/modules/init-counter-list/is-quantity-equal-limit.js");
// изменяет состояние в счетчике



var counterСhange = function counterСhange(_ref) {
  var evt = _ref.evt,
      quantity = _ref.quantity,
      maxQuantity = _ref.maxQuantity,
      minQuantity = _ref.minQuantity,
      plus = _ref.plus,
      minus = _ref.minus;

  var addProduct = function addProduct() {
    return quantity.textContent = +quantity.textContent + 1;
  };

  var removeProduct = function removeProduct() {
    return quantity.textContent = +quantity.textContent - 1;
  };

  if (evt.target.closest('[data-counter="minus"]')) {
    if (Object(_is_quantity_equal_limit__WEBPACK_IMPORTED_MODULE_1__["isQuantityEqualLimit"])({
      limit: minQuantity,
      quantity: quantity
    })) {
      return;
    }

    removeProduct();
    Object(_change_disabled_batton__WEBPACK_IMPORTED_MODULE_0__["changeDisabledBatton"])({
      quantity: quantity,
      limit: maxQuantity,
      batton: plus
    });
    Object(_change_disabled_batton__WEBPACK_IMPORTED_MODULE_0__["changeDisabledBatton"])({
      quantity: quantity,
      limit: minQuantity,
      batton: minus
    });
  }

  if (evt.target.closest('[data-counter="plus"]')) {
    if (Object(_is_quantity_equal_limit__WEBPACK_IMPORTED_MODULE_1__["isQuantityEqualLimit"])({
      limit: maxQuantity,
      quantity: quantity
    })) {
      return;
    }

    addProduct();
    Object(_change_disabled_batton__WEBPACK_IMPORTED_MODULE_0__["changeDisabledBatton"])({
      quantity: quantity,
      limit: maxQuantity,
      batton: plus
    });
    Object(_change_disabled_batton__WEBPACK_IMPORTED_MODULE_0__["changeDisabledBatton"])({
      quantity: quantity,
      limit: minQuantity,
      batton: minus
    });
  }
};



/***/ }),

/***/ "./js/modules/init-counter-list/init-counter-list.js":
/*!***********************************************************!*\
  !*** ./js/modules/init-counter-list/init-counter-list.js ***!
  \***********************************************************/
/*! exports provided: initCounterList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initCounterList", function() { return initCounterList; });
/* harmony import */ var _init_counter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./init-counter */ "./js/modules/init-counter-list/init-counter.js");
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// инициализирует список счетчиков на странице


var initCounterList = function initCounterList() {
  var countersList = document.querySelectorAll('[data-counter="parrent"]');

  if (!countersList.length) {
    return;
  }

  var _iterator = _createForOfIteratorHelper(countersList),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var counter = _step.value;

      if (!counter.classList.contains('is-initialized')) {
        Object(_init_counter__WEBPACK_IMPORTED_MODULE_0__["initCounter"])(counter);
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}; // для бэкенда


window.initCounterList = initCounterList;


/***/ }),

/***/ "./js/modules/init-counter-list/init-counter.js":
/*!******************************************************!*\
  !*** ./js/modules/init-counter-list/init-counter.js ***!
  \******************************************************/
/*! exports provided: initCounter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initCounter", function() { return initCounter; });
/* harmony import */ var _counter_change__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./counter-change */ "./js/modules/init-counter-list/counter-change.js");
/* harmony import */ var _change_disabled_batton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./change-disabled-batton */ "./js/modules/init-counter-list/change-disabled-batton.js");
// инициализирует счетчик



var initCounter = function initCounter(counter) {
  if (!counter) {
    return;
  }

  counter.classList.add('is-initialized');
  var maxQuantity = counter.querySelector('[data-counter-max-quantity]');
  var minQuantity = counter.querySelector('[data-counter-min-quantity]');
  var plus = counter.querySelector('[data-counter="plus"]');
  var minus = counter.querySelector('[data-counter="minus"]');
  var quantity = counter.querySelector('[data-counter="quantity-products"]');
  var productInfo = document.querySelector('.product-info');
  var addBasket = document.querySelector('.product-info__add-basket');
  var counterBlock = document.querySelector('.product-info__counter-block');

  if (maxQuantity) {
    maxQuantity = +maxQuantity.dataset.counterMaxQuantity;
  }

  if (minQuantity) {
    minQuantity = +minQuantity.dataset.counterMinQuantity;
  }

  Object(_change_disabled_batton__WEBPACK_IMPORTED_MODULE_1__["changeDisabledBatton"])({
    quantity: quantity,
    limit: maxQuantity,
    batton: plus
  });
  Object(_change_disabled_batton__WEBPACK_IMPORTED_MODULE_1__["changeDisabledBatton"])({
    quantity: quantity,
    limit: minQuantity,
    batton: minus
  });
  counter.addEventListener('click', function (evt) {
    Object(_counter_change__WEBPACK_IMPORTED_MODULE_0__["counterСhange"])({
      evt: evt,
      quantity: quantity,
      maxQuantity: maxQuantity,
      minQuantity: minQuantity,
      plus: plus,
      minus: minus
    });

    if (productInfo && minus.hasAttribute('disabled')) {
      addBasket.classList.remove('is-hide');
      counterBlock.classList.remove('is-open');
      var productInfoCounter = productInfo.querySelector('.counter__quantity-products');
      productInfoCounter.textContent = '1';
      minus.removeAttribute('disabled');
    }
  });
};



/***/ }),

/***/ "./js/modules/init-counter-list/is-quantity-equal-limit.js":
/*!*****************************************************************!*\
  !*** ./js/modules/init-counter-list/is-quantity-equal-limit.js ***!
  \*****************************************************************/
/*! exports provided: isQuantityEqualLimit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isQuantityEqualLimit", function() { return isQuantityEqualLimit; });
// проверяет является ли количество равным лимиту
var isQuantityEqualLimit = function isQuantityEqualLimit(_ref) {
  var limit = _ref.limit,
      quantity = _ref.quantity;

  if (limit !== 0 && !limit) {
    return false;
  }

  return +quantity.textContent === limit;
};



/***/ }),

/***/ "./js/modules/init-filters-toggle.js":
/*!*******************************************!*\
  !*** ./js/modules/init-filters-toggle.js ***!
  \*******************************************/
/*! exports provided: initFiltersToggle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initFiltersToggle", function() { return initFiltersToggle; });
var toggle = document.querySelector('.j-filters-toggle');
var breakpoint = window.matchMedia('(max-width:1023px)');

var initFiltersToggle = function initFiltersToggle() {
  if (!toggle) {
    return;
  }

  var filters = document.querySelector('.j-filters');
  var closeButtons = document.querySelectorAll('.j-filters .j-close');
  var content = document.querySelector('.catalog-checkbox-content--mobile');
  var showBtn = document.querySelector('.j-show-btn');
  var back = document.querySelector('.catalog-checkbox-content--mobile .j-back');
  var form = document.querySelector('.filters__form form');

  var breakpointChecker = function breakpointChecker() {
    if (breakpoint.matches) {
      toggle.addEventListener('click', function () {
        if (!filters.classList.contains('is-active')) {
          filters.classList.add('is-active');
          window.disableBodyScroll(form);
          closeButtons.forEach(function (close) {
            close.addEventListener('click', function () {
              filters.classList.remove('is-active');
              showBtn.classList.remove('is-active');
              window.enableBodyScroll(form); // eslint-disable-next-line max-nested-callbacks

              setTimeout(function () {
                form.scrollTo(0, 0);
                content.scrollTo(0, 0);
              }, 500);

              if (content.classList.contains('is-active')) {
                content.classList.remove('is-active'); // eslint-disable-next-line max-nested-callbacks

                setTimeout(function () {
                  form.scrollTo(0, 0);
                }, 500);
              }
            });
          });
          showBtn.addEventListener('click', function () {
            if (!showBtn.classList.contains('is-active')) {
              showBtn.classList.add('is-active');
              content.classList.add('is-active');
              window.enableBodyScroll(form);
              setTimeout(function () {
                form.scrollTo(0, 0);
              }, 500);
              back.addEventListener('click', function () {
                showBtn.classList.remove('is-active');
                content.classList.remove('is-active');
                window.disableBodyScroll(form); // eslint-disable-next-line max-nested-callbacks

                setTimeout(function () {
                  content.scrollTo(0, 0);
                }, 500);
              });
            }
          });
        }
      });
    } else {
      return;
    }
  };

  breakpoint.addListener(breakpointChecker);
  breakpointChecker();
};



/***/ }),

/***/ "./js/modules/init-header-actions.js":
/*!*******************************************!*\
  !*** ./js/modules/init-header-actions.js ***!
  \*******************************************/
/*! exports provided: initHeaderActions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initHeaderActions", function() { return initHeaderActions; });
/* harmony import */ var _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/scroll-lock */ "./js/utils/scroll-lock.js");
/* harmony import */ var _init_tabs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./init-tabs */ "./js/modules/init-tabs.js");


var header = document.querySelector('.header');
var catalogBtn = document.querySelector('.header__catalog-btn');
var tabControls = document.querySelectorAll('.header-catalog .tabs__control');
var tabElements = document.querySelectorAll('.header-catalog .tabs__element'); // const tabElements = catalogTabs.querySelectorAll('.header-catalog__content-inner');

var breakpoint = window.matchMedia('(max-width: 1023px)');
var breakpointMob = window.matchMedia('(max-width: 767px)');
var pb = 3;
var mobFixMenu = 64;
var scrollLock = new _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__["ScrollLock"]();

var onHoverOpenBtn = function onHoverOpenBtn(evt) {
  if (evt.target.closest('.header__catalog-btn') && !header.classList.contains('is-catalog-open')) {
    header.classList.add('is-catalog-open');
    scrollLock.disableScrolling();
  } else if (!evt.target.closest('.header__catalog-btn') && !evt.target.closest('.header-catalog__menu')) {
    if (header.classList.contains('is-catalog-open')) {
      header.classList.remove('is-catalog-open');
      scrollLock.enableScrolling();
    }
  }
};

var breakpointChecker = function breakpointChecker() {
  if (!catalogBtn) {
    return;
  }

  var mapModal = document.querySelector('.modal-contacts__map-wrp');
  setStyles();
  window.addEventListener('resize', setStyles);
  window.addEventListener('click', clickHandles);

  if (tabControls.length) {
    tabControls.forEach(function (tabControl) {
      tabControl.addEventListener('mouseenter', showTabContent);
    });
  }

  if (!breakpoint.matches) {
    // window.addEventListener('mouseover', onHoverOpenBtn);
    if (header.classList.contains('is-menu-open')) {
      header.classList.remove('is-menu-open');
    }

    if (header.classList.contains('is-submenu-open')) {
      header.classList.remove('is-submenu-open');
    }

    if (mapModal.classList.contains('is-open')) {
      mapModal.classList.remove('is-open');
    }
  } else {
    window.removeEventListener('mouseover', onHoverOpenBtn);
  }
};

var showTabContent = function showTabContent(evt) {
  if (!breakpoint.matches) {
    var flag = false;

    if (!flag) {
      _init_tabs__WEBPACK_IMPORTED_MODULE_1__["tabs"].openTab(evt.target);
      flag = true;
    }
  }
};

var clickHandles = function clickHandles(evt) {
  var headerCatalog = header.querySelector('.header-catalog');
  var headerCatalogContentWrp = headerCatalog.querySelector('.header-catalog__content-wrp');
  var headerCatalogMenu = header.querySelector('.header-catalog__menu');
  var submenuLinks = header.querySelectorAll('.js-submenu-open');
  var backBtns = header.querySelectorAll('.js-menu-back');
  var closeBtns = header.querySelectorAll('.js-menu-close');
  var mapBtn = document.querySelector('.js-show-map');
  var mapModal = document.querySelector('.modal-contacts__map-wrp');
  var closeMapModal = document.querySelector('.modal-contacts__map-close-btn');

  if (evt.target.closest('.header__catalog-btn') === catalogBtn) {
    if (header.classList.contains('is-catalog-open')) {
      header.classList.remove('is-catalog-open');
      scrollLock.enableScrolling();
    } else {
      header.classList.add('is-catalog-open');
      scrollLock.disableScrolling();
    }
  } else if (evt.target.closest('.header-catalog') && !evt.target.closest('.header-catalog__menu') && !breakpoint.matches) {
    if (header.classList.contains('is-catalog-open')) {
      header.classList.remove('is-catalog-open');
      scrollLock.enableScrolling();
    }
  }

  if (breakpoint.matches) {
    tabControls.forEach(function (control) {
      if (evt.target.closest('.tabs__control') === control) {
        header.classList.add('is-menu-open');
      }
    });
    submenuLinks.forEach(function (link) {
      if (evt.target.closest('.js-submenu-open') === link) {
        header.classList.add('is-submenu-open');
        link.nextElementSibling.classList.add('is-open');
      }
    });
    backBtns.forEach(function (backbtn) {
      if (evt.target.closest('.js-menu-back') === backbtn) {
        if (header.classList.contains('is-submenu-open')) {
          header.classList.remove('is-submenu-open');
          backbtn.closest('.header-catalog__filter-list-wrp').classList.remove('is-open');
        } else {
          header.classList.remove('is-menu-open');
          setTimeout(function () {
            headerCatalogContentWrp.scrollTo(0, 0);
          }, 300);
        }
      }
    });
    closeBtns.forEach(function (closebtn) {
      if (evt.target.closest('.js-menu-close') === closebtn) {
        if (header.classList.contains('is-catalog-open')) {
          header.classList.remove('is-catalog-open');
        }

        if (header.classList.contains('is-menu-open')) {
          header.classList.remove('is-menu-open');
        }

        if (header.classList.contains('is-submenu-open')) {
          header.classList.remove('is-submenu-open');
        }

        scrollLock.enableScrolling();
      }
    });
  }

  if (breakpoint.matches) {
    if (evt.target.closest('.js-show-map') === mapBtn) {
      mapModal.classList.add('is-open');
    }
  }

  if (breakpoint.matches) {
    if (evt.target.closest('.modal-contacts__map-close-btn') === closeMapModal) {
      mapModal.classList.remove('is-open');
    }
  }
};

var setStyles = function setStyles() {
  var headerCatalog = header.querySelector('.header-catalog');
  var headerCatalogContentWrp = headerCatalog.querySelector('.header-catalog__content-wrp');
  var headerCatalogControls = headerCatalog.querySelector('.tabs__controls');
  var modalCityGrid = document.querySelector('.modal-city__list');
  var modalCityItem = document.querySelectorAll('.modal-city__item');
  var modalNavbars = document.querySelectorAll('.js-navbar');
  var pt = catalogBtn.getBoundingClientRect().bottom + pb;
  var maxHeight = document.documentElement.clientHeight - pt;
  var gridCol = 3;
  modalNavbars.forEach(function (bar) {
    bar.nextElementSibling.style.maxHeight = 'calc(100% - ' + bar.offsetHeight + 'px + 1px)';
  });

  if (!breakpoint.matches) {
    headerCatalog.style.paddingTop = pt + 'px';
    headerCatalogControls.style.maxHeight = maxHeight + 'px';
    headerCatalogContentWrp.style.height = maxHeight + 'px';
    tabElements.forEach(function (tab) {
      tab.style.maxHeight = maxHeight + 'px';
    });
  } else {
    headerCatalog.style.paddingTop = mobFixMenu + 'px';
    headerCatalogControls.style.maxHeight = null;
    headerCatalogContentWrp.style.height = null;
    tabElements.forEach(function (tab) {
      tab.style.maxHeight = null;
    });
  }

  if (!breakpointMob.matches) {
    modalCityGrid.style.gridTemplateRows = 'repeat(' + modalCityItem.length / gridCol + ',1fr)';
  } else {
    modalCityGrid.style.gridTemplateRows = null;
  } // if (breakpoint.matches) {
  //   tabElements.forEach((el) => {
  //     let bar = el.querySelector('.mobile-navbar');
  //     if (bar) {
  //       el.style.paddingTop = bar.scrollHeight + 'px';
  //     }
  //   });
  // } else {
  //   tabElements.forEach((el) => {
  //     el.style.paddingTop = null;
  //   });
  // }

};

var initHeaderActions = function initHeaderActions() {
  breakpointChecker();
  breakpoint.addListener(breakpointChecker);
  breakpointMob.addListener(breakpointChecker);
};



/***/ }),

/***/ "./js/modules/init-more-filters.js":
/*!*****************************************!*\
  !*** ./js/modules/init-more-filters.js ***!
  \*****************************************/
/*! exports provided: initMoreFilters */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initMoreFilters", function() { return initMoreFilters; });
var initMoreFilters = function initMoreFilters() {
  var filterModal = document.querySelector('.modal--filter');

  if (!filterModal) {
    return;
  }

  var breakpoint = window.matchMedia('(max-width:1023px)');

  var breakpointChecker = function breakpointChecker() {
    if (breakpoint.matches) {
      window.modals.close('filter');
    }
  };

  breakpoint.addListener(breakpointChecker);
  breakpointChecker();
};



/***/ }),

/***/ "./js/modules/init-move-to.js":
/*!************************************!*\
  !*** ./js/modules/init-move-to.js ***!
  \************************************/
/*! exports provided: initMoveTo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initMoveTo", function() { return initMoveTo; });
/* harmony import */ var _vendor_moveTo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../vendor/moveTo */ "./js/vendor/moveTo.js");
/* harmony import */ var _vendor_moveTo__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_vendor_moveTo__WEBPACK_IMPORTED_MODULE_0__);


var initMoveTo = function initMoveTo() {
  var moveTo = new _vendor_moveTo__WEBPACK_IMPORTED_MODULE_0___default.a();
  var trigger = document.querySelectorAll('.js-trigger');
  trigger.forEach(function (item) {
    moveTo.registerTrigger(item);
  });
};



/***/ }),

/***/ "./js/modules/init-open-block.js":
/*!***************************************!*\
  !*** ./js/modules/init-open-block.js ***!
  \***************************************/
/*! exports provided: initOpenBlock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initOpenBlock", function() { return initOpenBlock; });
var btn = document.querySelector('.characteristics__button');

var initOpenBlock = function initOpenBlock() {
  if (!btn) {
    return;
  }

  var breakpoint = window.matchMedia("(max-width:767px)");
  var extraList2 = document.querySelectorAll('.characteristics__list table:nth-child(n+5)');
  var extraList = document.querySelectorAll('.characteristics__list table:nth-child(n+3)');

  function openList() {
    if (breakpoint.matches) {
      extraList.forEach(function (table) {
        table.style.display = 'table';
        btn.textContent = 'Свернуть характеристики';
        btn.classList.add('open');
      });
    } else {
      extraList2.forEach(function (table) {
        table.style.display = 'table';
        btn.textContent = 'Свернуть характеристики';
        btn.classList.add('open');
      });
    }
  }

  function closeList() {
    if (breakpoint.matches) {
      extraList.forEach(function (table) {
        table.style.display = 'none';
        btn.textContent = 'Развернуть характеристики';
        btn.classList.remove('open');
      });
    } else {
      extraList2.forEach(function (table) {
        table.style.display = 'none';
        btn.textContent = 'Развернуть характеристики';
        btn.classList.remove('open');
      });
    }
  }

  btn.addEventListener('click', function () {
    if (btn.classList.contains('open')) {
      closeList();
    } else {
      openList();
    }
  });
};



/***/ }),

/***/ "./js/modules/init-open-more-reviews.js":
/*!**********************************************!*\
  !*** ./js/modules/init-open-more-reviews.js ***!
  \**********************************************/
/*! exports provided: initOpenMoreReviews */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initOpenMoreReviews", function() { return initOpenMoreReviews; });
var btn = document.querySelector('.product-reviews__button');

var initOpenMoreReviews = function initOpenMoreReviews() {
  if (!btn) {
    return;
  }

  var extraList = document.querySelectorAll('.product-reviews__review:nth-child(n+5)');

  function openList() {
    extraList.forEach(function (list) {
      list.style.display = 'flex';
      btn.textContent = 'Свернуть отзывы';
      btn.classList.add('open');
    });
  }

  function closeList() {
    extraList.forEach(function (list) {
      list.style.display = 'none';
      btn.textContent = 'Показать больше отзывов';
      btn.classList.remove('open');
    });
  }

  btn.addEventListener('click', function () {
    if (btn.classList.contains('open')) {
      closeList();
    } else {
      openList();
    }
  });
};



/***/ }),

/***/ "./js/modules/init-open-more.js":
/*!**************************************!*\
  !*** ./js/modules/init-open-more.js ***!
  \**************************************/
/*! exports provided: initOpenMore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initOpenMore", function() { return initOpenMore; });
var initOpenMore = function initOpenMore() {
  var OpenMoreElement = document.querySelector('[data-open-more]');

  if (!OpenMoreElement) {
    return;
  }

  var btnElement = document.querySelector('[data-open-more-btn]');
  var extraText = document.querySelector('[data-open-more-text]');
  btnElement.addEventListener('click', function () {
    extraText.classList.add('is-open');
    btnElement.classList.add('is-hide');
  });
};



/***/ }),

/***/ "./js/modules/init-radio-buttons.js":
/*!******************************************!*\
  !*** ./js/modules/init-radio-buttons.js ***!
  \******************************************/
/*! exports provided: initRadioButtons */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initRadioButtons", function() { return initRadioButtons; });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var radioButtons = function radioButtons(parent) {
  // на родителе: radio-buttons="parent"
  // на элементах: radio-buttons="element"
  if (!parent) {
    return;
  } else {
    if (parent.classList.contains('is-initialized')) {
      return;
    }

    parent.classList.add('is-initialized');
  }

  var removeActiveClass = function removeActiveClass() {
    var elementsList = parent.querySelectorAll('[radio-buttons="element"]');

    var _iterator = _createForOfIteratorHelper(elementsList),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var element = _step.value;
        element.classList.remove('is-active');
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  };

  parent.addEventListener('click', function (evt) {
    evt.preventDefault();

    var isClickElement = function isClickElement() {
      return !!evt.target.closest('[radio-buttons="element"]');
    };

    if (isClickElement()) {
      var element = evt.target.closest('[radio-buttons="element"]');
      removeActiveClass();

      if (!element.classList.contains('is-active')) {
        element.classList.add('is-active');
      }
    }
  });
};

var initRadioButtons = function initRadioButtons() {
  var radioButtonsList = document.querySelectorAll('[radio-buttons="parent"]');

  var _iterator2 = _createForOfIteratorHelper(radioButtonsList),
      _step2;

  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var item = _step2.value;
      radioButtons(item);
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
}; // для бэка


window.initRadioButtons = initRadioButtons;


/***/ }),

/***/ "./js/modules/init-range-slider.js":
/*!*****************************************!*\
  !*** ./js/modules/init-range-slider.js ***!
  \*****************************************/
/*! exports provided: initRangeSlider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initRangeSlider", function() { return initRangeSlider; });
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var initRangeSlider = function initRangeSlider() {
  var rangeSlider = document.querySelector('[data-range-slider]');

  if (!rangeSlider) {
    return;
  }

  function updateSliderColorPips() {
    var pipsValues = rangeSlider.querySelectorAll('.noUi-value');
    var currentValue = rangeSlider.noUiSlider.get();
    pipsValues.forEach(function (element) {
      var currentElementValue = element.dataset.value;

      if (currentElementValue <= currentValue) {
        element.previousSibling.classList.add('red');
      } else {
        element.previousSibling.classList.remove('red');
      }
    });
  }

  var max = parseInt(rangeSlider.dataset.max);
  var min = parseInt(rangeSlider.dataset.min);
  var step = parseInt(rangeSlider.dataset.step);

  function arrValues(min, max, step) {
    var arr = [];

    for (var k = min; k <= max; k = k + step) {
      arr.push(k);
    }

    return arr;
  }

  if (rangeSlider) {
    var _noUiSlider$create;

    // eslint-disable-next-line no-undef
    noUiSlider.create(rangeSlider, (_noUiSlider$create = {
      start: rangeSlider.dataset.start,
      step: parseInt(rangeSlider.dataset.step),
      connect: "lower",
      tooltips: true,
      range: {
        'min': parseInt(rangeSlider.dataset.min),
        'max': parseInt(rangeSlider.dataset.max)
      },
      pips: {
        mode: 'values',
        values: arrValues(min, max, step),
        density: rangeSlider.dataset.density
      }
    }, _defineProperty(_noUiSlider$create, "tooltips", {
      to: function to(value) {
        return Math.floor(value) + " ".concat(rangeSlider.dataset.units);
      },
      from: function from(value) {
        return Number(value.replace(" ".concat(rangeSlider.dataset.units), ''));
      }
    }), _defineProperty(_noUiSlider$create, "format", {
      to: function to(value) {
        return Math.floor(value);
      },
      from: function from(value) {
        return Number(value.replace('', ''));
      }
    }), _noUiSlider$create));
    rangeSlider.noUiSlider.on('update', updateSliderColorPips);
  }
};



/***/ }),

/***/ "./js/modules/init-read-more.js":
/*!**************************************!*\
  !*** ./js/modules/init-read-more.js ***!
  \**************************************/
/*! exports provided: initReadMore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initReadMore", function() { return initReadMore; });
var initReadMore = function initReadMore() {
  var readMoreElements = document.querySelectorAll('.read-more');

  if (readMoreElements.length) {
    readMoreElements.forEach(function (el) {
      var btnElement = el.querySelector('.read-more__button');

      if (btnElement) {
        btnElement.addEventListener('click', function (evt) {
          evt.preventDefault();
          el.classList.toggle('is-open');
          document.activeElement.blur();
        });
      }
    });
  }
};



/***/ }),

/***/ "./js/modules/init-scroll-lock.js":
/*!****************************************!*\
  !*** ./js/modules/init-scroll-lock.js ***!
  \****************************************/
/*! exports provided: initScrollLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initScrollLock", function() { return initScrollLock; });
var toggle = document.querySelector('.filter-select-list__button');
var breakpoint = window.matchMedia('(max-width:767px)');
var list = document.querySelector('.filter-select-list__list');
var closeBtn = document.querySelector('.filter-select-list .j-close');
var filterItems = document.querySelectorAll('.filter-select-list__item');
var showBtn = document.querySelector('.filter-select-list__btn-show');

var initScrollLock = function initScrollLock() {
  if (!toggle) {
    return;
  }

  var parent = toggle.closest('.filter-select-list');

  var breakpointChecker = function breakpointChecker() {
    if (breakpoint.matches) {
      toggle.addEventListener('click', function () {
        if (parent.classList.contains('is-open')) {
          window.disableBodyScroll(list);
          closeBtn.addEventListener('click', function () {
            window.enableBodyScroll(list);
          });
          filterItems.forEach(function (item) {
            item.addEventListener('click', function () {
              window.enableBodyScroll(list);
            });
          });
          showBtn.addEventListener('click', function () {
            window.enableBodyScroll(list);
          });
        }
      });
    }
  };

  breakpoint.addListener(breakpointChecker);
  breakpointChecker();
};



/***/ }),

/***/ "./js/modules/init-show-counter.js":
/*!*****************************************!*\
  !*** ./js/modules/init-show-counter.js ***!
  \*****************************************/
/*! exports provided: initShowCounter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initShowCounter", function() { return initShowCounter; });
var addBasket = document.querySelector('.product-info__add-basket');

var initShowCounter = function initShowCounter() {
  if (!addBasket) {
    return;
  }

  var counterBlock = document.querySelector('.product-info__counter-block');

  function showCounter() {
    addBasket.classList.add('is-hide');
    counterBlock.classList.add('is-open');
  }

  addBasket.addEventListener('click', showCounter);
};



/***/ }),

/***/ "./js/modules/init-tabs.js":
/*!*********************************!*\
  !*** ./js/modules/init-tabs.js ***!
  \*********************************/
/*! exports provided: initTabs, tabs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initTabs", function() { return initTabs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tabs", function() { return tabs; });
/* harmony import */ var _tabs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tabs */ "./js/modules/tabs.js");

var tabs;

var initTabs = function initTabs() {
  tabs = new _tabs__WEBPACK_IMPORTED_MODULE_0__["Tabs"](); // Используйте в разработке экспортируемую переменную tabs, window сделан для бэкэнда

  window.tabs = tabs;
};



/***/ }),

/***/ "./js/modules/init-tooltips-list/custom-options-tooltip.js":
/*!*****************************************************************!*\
  !*** ./js/modules/init-tooltips-list/custom-options-tooltip.js ***!
  \*****************************************************************/
/*! exports provided: customOptionsTooltip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "customOptionsTooltip", function() { return customOptionsTooltip; });
// настройки для экземпляров плагина TooltipJs
// // вешаем на родителя, data-tooltip="parrent", data-tooltip-options="уникальное имя"
// // вешаем на всплывающую подсказку: data-tooltip="content"
// // побавляем в массив настройки, под ключем уникального имени
var customOptionsTooltip = {
  needInstallation: {
    offset: [-24, 16],
    theme: 'custom-light',
    placement: 'bottom-start'
  },
  alert: {
    offset: [-24, 16],
    theme: 'custom-alert',
    placement: 'bottom-start',
    trigger: 'click'
  },
  sale: {
    theme: 'custom-light',
    placement: 'bottom-start',
    trigger: 'click'
  },
  removeBasketItem: {
    trigger: 'click',
    offset: [-11, 16],
    theme: 'custom-light',
    placement: 'bottom-end'
  },
  designerCard: {
    offset: [11, 10],
    delay: [400, 1500],
    // ms
    theme: 'custom-light--designer-card',
    placement: 'bottom-end'
  },
  lowPrice: {
    trigger: 'click',
    theme: 'custom-big--very-big',
    placement: 'bottom-start',
    interactive: true,
    arrow: false,
    maxWidth: ''
  },
  rating: {
    trigger: 'click',
    theme: 'custom-big',
    placement: 'bottom',
    arrow: false
  }
};


/***/ }),

/***/ "./js/modules/init-tooltips-list/get-tooltips-options.js":
/*!***************************************************************!*\
  !*** ./js/modules/init-tooltips-list/get-tooltips-options.js ***!
  \***************************************************************/
/*! exports provided: getTooltipsOptions */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTooltipsOptions", function() { return getTooltipsOptions; });
/* harmony import */ var _custom_options_tooltip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./custom-options-tooltip */ "./js/modules/init-tooltips-list/custom-options-tooltip.js");
// функция отдает объект настроек или дефолтные настройки


var getTooltipsOptions = function getTooltipsOptions(tooltip) {
  var optionsDefault = {
    trigger: 'click',
    offset: [-24, 16],
    theme: 'custom-light',
    placement: 'bottom-start'
  };
  return _custom_options_tooltip__WEBPACK_IMPORTED_MODULE_0__["customOptionsTooltip"][tooltip.dataset.tooltipOptions] || optionsDefault;
};



/***/ }),

/***/ "./js/modules/init-tooltips-list/init-tooltip.js":
/*!*******************************************************!*\
  !*** ./js/modules/init-tooltips-list/init-tooltip.js ***!
  \*******************************************************/
/*! exports provided: initTooltip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initTooltip", function() { return initTooltip; });
// создает экземпляр для плагина TooltipJs
var initTooltip = function initTooltip(tooltip, options) {
  if (!tooltip) {
    return;
  }

  var content = tooltip.querySelector('[data-tooltip="content"]');

  if (content) {
    content.classList.remove('visually-hidden');
  } // eslint-disable-next-line


  var btnClose = content.querySelector('.tooltip-content__button-close');
  var newTippy = tippy(tooltip, options);

  if (btnClose) {
    btnClose.addEventListener('click', function () {
      newTippy.hide();
    });
  }
};



/***/ }),

/***/ "./js/modules/init-tooltips-list/init-tooltips-list.js":
/*!*************************************************************!*\
  !*** ./js/modules/init-tooltips-list/init-tooltips-list.js ***!
  \*************************************************************/
/*! exports provided: initTooltipsList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initTooltipsList", function() { return initTooltipsList; });
/* harmony import */ var _init_tooltip__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./init-tooltip */ "./js/modules/init-tooltips-list/init-tooltip.js");
/* harmony import */ var _get_tooltips_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./get-tooltips-options */ "./js/modules/init-tooltips-list/get-tooltips-options.js");
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// создает список экземпляров для плагина TooltipJs
// список для опций плагина в custom-options-tooltip.js



var initTooltipsList = function initTooltipsList() {
  var tooltipList = document.querySelectorAll('[data-tooltip="parrent"');

  if (!tooltipList.length) {
    return;
  }

  var _iterator = _createForOfIteratorHelper(tooltipList),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var tooltip = _step.value;
      var contentDefault = {
        content: tooltip.querySelector('[data-tooltip="content"]')
      };
      var options = Object(_get_tooltips_options__WEBPACK_IMPORTED_MODULE_1__["getTooltipsOptions"])(tooltip);
      Object(_init_tooltip__WEBPACK_IMPORTED_MODULE_0__["initTooltip"])(tooltip, Object.assign({}, options, contentDefault));
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
};



/***/ }),

/***/ "./js/modules/init-top-slider-btn.js":
/*!*******************************************!*\
  !*** ./js/modules/init-top-slider-btn.js ***!
  \*******************************************/
/*! exports provided: initTopSliderBtn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initTopSliderBtn", function() { return initTopSliderBtn; });
var btns = document.querySelectorAll('.top-slider__button');
var breadcrumbs = document.querySelector('.breadcrumbs');

var removeActiveClass = function removeActiveClass() {
  btns.forEach(function (btn) {
    btn.classList.remove('is-active');
  });
};

var initTopSliderBtn = function initTopSliderBtn() {
  if (!btns && !breadcrumbs) {
    return;
  }

  btns.forEach(function (btn) {
    btn.addEventListener('click', function () {
      var activeButtons = document.querySelectorAll('.top-slider__button.is-active');

      if (activeButtons) {
        removeActiveClass();
      }

      if (!btn.classList.contains('is-active')) {
        btn.classList.add('is-active');

        if (!breadcrumbs.classList.contains('is-active')) {
          breadcrumbs.classList.add('is-active');
        }
      }
    });
  });
};



/***/ }),

/***/ "./js/modules/init-ui-slider.js":
/*!**************************************!*\
  !*** ./js/modules/init-ui-slider.js ***!
  \**************************************/
/*! exports provided: initUiSlider, initUiStepSlider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initUiSlider", function() { return initUiSlider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initUiStepSlider", function() { return initUiStepSlider; });
var sliders = document.querySelectorAll('.input-range-accordion__slider--no-step');
var stepSliders = document.querySelectorAll('.input-range-accordion__slider--step');

var initUiSlider = function initUiSlider() {
  if (!sliders) {
    return;
  }

  sliders.forEach(function (slider) {
    var parent = slider.closest('.input-range-accordion__wrap');
    var inputMinPrice = parent.querySelector('.input-range-accordion__min-price');
    var inputMaxPrice = parent.querySelector('.input-range-accordion__max-price');
    var inputs = [inputMinPrice, inputMaxPrice];
    var min = Number(inputMinPrice.dataset.value);
    var max = Number(inputMaxPrice.dataset.value);
    var uiSlider = noUiSlider.create(slider, {
      range: {
        'min': [min],
        'max': [max]
      },
      start: [min, max],
      connect: [false, true, false]
    });
    slider.noUiSlider.on('update', function (values, handle) {
      inputs[handle].value = values[handle].slice(0, -3);
    });
    inputs.forEach(function (input, handle) {
      input.addEventListener('change', function () {
        slider.noUiSlider.setHandle(handle, this.value);
      });
      input.addEventListener('keydown', function (e) {
        var values = slider.noUiSlider.get();
        var value = Number(values[handle]); // [[handle0_down, handle0_up], [handle1_down, handle1_up]]

        var steps = slider.noUiSlider.steps(); // [down, up]

        var step = steps[handle];
        var position; // 13 is enter,
        // 38 is key up,
        // 40 is key down.

        switch (e.which) {
          case 13:
            slider.noUiSlider.setHandle(handle, this.value);
            break;

          case 38:
            // Get step to go increase slider value (up)
            position = step[1]; // false = no step is set

            if (position === false) {
              position = 1;
            } // null = edge of slider


            if (position !== null) {
              slider.noUiSlider.setHandle(handle, value + position);
            }

            break;

          case 40:
            position = step[0];

            if (position === false) {
              position = 1;
            }

            if (position !== null) {
              slider.noUiSlider.setHandle(handle, value - position);
            }

            break;
        }
      });
    });
    var form = slider.closest('form');

    if (form) {
      var resetBtns = form.querySelectorAll('[type="reset"]');

      if (resetBtns.length) {
        resetBtns.forEach(function (resetBtn) {
          resetBtn.addEventListener('click', function () {
            uiSlider.reset();
          });
        });
      }
    }
  });
};



var initUiStepSlider = function initUiStepSlider() {
  if (!sliders) {
    return;
  }

  stepSliders.forEach(function (slider) {
    var parent = slider.closest('.input-range-accordion__wrap--step');
    var sliderStep = parent.dataset.step;
    var inputMinPrice = parent.querySelector('.input-range-accordion__min-price');
    var inputMaxPrice = parent.querySelector('.input-range-accordion__max-price'); // const pipsSteps = document.querySelector('.input-range-accordion__steps');

    var inputs = [inputMinPrice, inputMaxPrice];
    var min = Number(inputMinPrice.dataset.value);
    var max = Number(inputMaxPrice.dataset.value); // const ten = max / 6;
    // const thirty = max / 6 * 2;
    // const fifty = max / 6 * 3;
    // const seventy = max / 6 * 4;
    // const ninety = max / 6 * 5;
    // console.log(parseFloat(sliderStep, 10));

    function filterPips(value) {
      // console.log(value)
      return value % 2 === 0 ? 1 : -1;
    }

    var uiSlider = noUiSlider.create(slider, {
      range: {
        'min': [min],
        'max': [max]
      },
      start: [min, max],
      step: parseFloat(sliderStep, 10) || 1,
      pips: {
        mode: 'steps',
        density: 10,
        filter: filterPips,
        stepped: true
      },
      connect: true
    });
    slider.noUiSlider.on('update', function (values, handle) {
      inputs[handle].value = values[handle].slice(0, -3);
      var markers = slider.querySelectorAll('.noUi-marker');
      var handleLower = slider.querySelector('.noUi-handle-lower');
      var handleUpper = slider.querySelector('.noUi-handle-upper');
      markers.forEach(function (marker) {
        marker.classList.add('noUi-marker--active');

        if (marker.getBoundingClientRect().left < handleLower.getBoundingClientRect().left) {
          marker.classList.remove('noUi-marker--active');
        }

        if (marker.getBoundingClientRect().right > handleUpper.getBoundingClientRect().right) {
          marker.classList.remove('noUi-marker--active');
        }
      });
    });
    inputs.forEach(function (input, handle) {
      input.addEventListener('change', function () {
        slider.noUiSlider.setHandle(handle, this.value);
      });
      input.addEventListener('keydown', function (e) {
        var values = slider.noUiSlider.get();
        var value = Number(values[handle]); // [[handle0_down, handle0_up], [handle1_down, handle1_up]]

        var steps = slider.noUiSlider.steps(); // [down, up]

        var step = steps[handle];
        var position; // 13 is enter,
        // 38 is key up,
        // 40 is key down.

        switch (e.which) {
          case 13:
            slider.noUiSlider.setHandle(handle, this.value);
            break;

          case 38:
            // Get step to go increase slider value (up)
            position = step[1]; // false = no step is set

            if (position === false) {
              position = 1;
            } // null = edge of slider


            if (position !== null) {
              slider.noUiSlider.setHandle(handle, value + position);
            }

            break;

          case 40:
            position = step[0];

            if (position === false) {
              position = 1;
            }

            if (position !== null) {
              slider.noUiSlider.setHandle(handle, value - position);
            }

            break;
        }
      });
    });
    var form = slider.closest('form');

    if (form) {
      var resetBtns = form.querySelectorAll('[type="reset"]');

      if (resetBtns.length) {
        resetBtns.forEach(function (resetBtn) {
          resetBtn.addEventListener('click', function () {
            uiSlider.reset();
          });
        });
      }
    }
  });
};



/***/ }),

/***/ "./js/modules/map/init-map.js":
/*!************************************!*\
  !*** ./js/modules/map/init-map.js ***!
  \************************************/
/*! exports provided: initMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initMap", function() { return initMap; });
/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map */ "./js/modules/map/map.js");


var initMap = function initMap() {
  var map = new _map__WEBPACK_IMPORTED_MODULE_0__["Map"]();
  setTimeout(function () {
    map.init();
  }, 1000);
};



/***/ }),

/***/ "./js/modules/map/map.js":
/*!*******************************!*\
  !*** ./js/modules/map/map.js ***!
  \*******************************/
/*! exports provided: Map */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Map", function() { return Map; });
/* harmony import */ var regenerator_runtime_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! regenerator-runtime/runtime */ "../node_modules/regenerator-runtime/runtime.js");
/* harmony import */ var regenerator_runtime_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime_runtime__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _pickup_point_template__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pickup-point-template */ "./js/modules/map/pickup-point-template.js");
/* harmony import */ var _utils_render__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/render */ "./js/utils/render.js");
/* harmony import */ var _sliders_init_fancy_slider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../sliders/init-fancy-slider */ "./js/modules/sliders/init-fancy-slider.js");
/* harmony import */ var _utils_requestHTTP__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/requestHTTP */ "./js/utils/requestHTTP.js");
/* harmony import */ var _modals_init_modals__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../modals/init-modals */ "./js/modules/modals/init-modals.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator.return && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, "constructor", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }







var Map = /*#__PURE__*/function () {
  function Map() {
    _classCallCheck(this, Map);

    this._pointsList = document.querySelector('[data-points-list]');
    this._pickupWrapper = document.querySelector('[data-pickup-wrapper]');
    this._mapContainer = document.querySelector('[data-pickup-map]');
    this._filterContainer = document.querySelector('[data-pickup-filter]');
    this._modalPointContainer = document.querySelector('[data-modal-point]');
    this._modalPoint = 'point-info';
    this._markerEmpty = './img/svg/marker-empty.svg';
    this._breakpoint = window.matchMedia('(max-width:767px)');
    this._centerMap = [55.76, 37.64];
    this._clusterNumbers = [100, 1000];
    this._maxCountRenderPoints = 30;
    this._zoomMap = 10;
    this._map = null;
    this._data = null;
    this._activePin = null;
    this._clusterer = null;
    this._geoObjects = [];
    this._currentGeoObjects = [];
    this._removingPoints = [];
    this._currentListPoints = [];
    this._filteredListPoints = [];
    this._onClickPin = this._onClickPin.bind(this);
    this._onFilterChange = this._onFilterChange.bind(this);
    this._breakpointChecker = this._breakpointChecker.bind(this);
  }

  _createClass(Map, [{
    key: "_getMarkersData",
    value: function () {
      var _getMarkersData2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var data;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return Object(_utils_requestHTTP__WEBPACK_IMPORTED_MODULE_4__["requestHTTP"])('data/map-markers.json', function (data) {
                  return data;
                });

              case 2:
                data = _context.sent;
                return _context.abrupt("return", data.markers);

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function _getMarkersData() {
        return _getMarkersData2.apply(this, arguments);
      }

      return _getMarkersData;
    }()
  }, {
    key: "_createPin",
    value: function _createPin(pinData) {
      // eslint-disable-next-line no-undef
      var myiconImageHref = pinData.icon;
      var MyIconContentLayout = ymaps.templateLayoutFactory.createClass('<div class="map__marker"></div>');

      if (pinData.category === 'main') {
        myiconImageHref = '';
        MyIconContentLayout = ymaps.templateLayoutFactory.createClass("<div class=\"map__main-marker\">\n          <svg width=".concat(pinData.iconWidth, " height=").concat(pinData.iconHeight, " aria-hidden=\"true\">\n            <use xlink:href=\"#").concat(pinData.iconId, "\"></use>\n          </svg>\n        </div>"));
      }

      var pin = new ymaps.Placemark(pinData.location, {
        category: pinData.category,
        icon: pinData.icon,
        iconWidth: pinData.iconWidth,
        iconHeight: pinData.iconHeight,
        imageUrl: pinData.imageUrl,
        imageAlt: pinData.imageAlt,
        data: pinData.data
      }, {
        // Опции.
        // Необходимо указать данный тип макета.
        iconLayout: 'default#imageWithContent',
        // Своё изображение иконки метки.
        iconImageHref: myiconImageHref,
        // Размеры метки.
        iconImageSize: [pinData.iconWidth, pinData.iconHeight],
        // Смещение левого верхнего угла иконки относительно
        // её "ножки" (точки привязки).
        iconImageOffset: pinData.offset,
        iconShape: {
          type: 'Rectangle',
          // Прямоугольник описывается в виде двух
          // точек - верхней левой и нижней правой.
          coordinates: pinData.coordsShape
        },
        iconContentLayout: MyIconContentLayout
      });
      return pin;
    }
  }, {
    key: "_createPins",
    value: function _createPins(data) {
      var _this = this;

      var index = 0;
      data.forEach(function (obj) {
        var placemark = _this._createPin(obj);

        if (obj.category !== 'main') {
          _this._geoObjects[index++] = placemark;
        }
      });

      if (!this._removingPoints.length) {
        this._currentGeoObjects = _toConsumableArray(this._geoObjects);
      } else {
        this._filterObjects();
      }
    }
  }, {
    key: "_createCluster",
    value: function _createCluster() {
      var MyIconContentLayout = ymaps.templateLayoutFactory.createClass('<div class="clusterIcon">{{ properties.geoObjects.length }}</div>');
      this._clusterer = new ymaps.Clusterer({
        clusterIcons: [{
          href: this._markerEmpty,
          size: [56, 56],
          offset: [-28, -28],
          shape: {
            type: 'Circle',
            coordinates: [0, 0],
            radius: 28
          }
        }, {
          href: this._markerEmpty,
          size: [80, 80],
          offset: [-40, -40],
          shape: {
            type: 'Circle',
            coordinates: [0, 0],
            radius: 40
          }
        }, {
          href: this._markerEmpty,
          size: [120, 120],
          offset: [-60, -60],
          shape: {
            type: 'Circle',
            coordinates: [0, 0],
            radius: 50
          }
        }],
        clusterNumbers: this._clusterNumbers,
        clusterIconContentLayout: MyIconContentLayout
      });
    }
  }, {
    key: "_createClusterer",
    value: function _createClusterer() {
      if (this._clusterer) {
        this._map.geoObjects.remove(this._clusterer);
      }

      this._createCluster();

      this._clusterer.add(this._currentGeoObjects);

      this._map.geoObjects.add(this._clusterer);

      this._clusterer.events.add('click', this._onClickPin);
    }
  }, {
    key: "_addMainPin",
    value: function _addMainPin() {
      var dataMainMarker = this._data.filter(function (item) {
        return item.category === 'main';
      });

      this._mainMarker = this._createPin(dataMainMarker[0]);

      this._map.geoObjects.add(this._mainMarker);

      this._mainMarker.events.add('click', this._onClickPin);
    }
  }, {
    key: "_showListPoints",
    value: function _showListPoints() {
      var _this2 = this;

      this._pickupWrapper.classList.add('is-active');

      setTimeout(function () {
        _this2._map.container.fitToViewport();
      }, 600);
    }
  }, {
    key: "_hideListPoints",
    value: function _hideListPoints() {
      var _this3 = this;

      this._pickupWrapper.classList.remove('is-active');

      setTimeout(function () {
        _this3._map.container.fitToViewport();
      }, 600);
    }
  }, {
    key: "_openModalInfo",
    value: function _openModalInfo() {
      var _this4 = this;

      if (this._currentListPoints.length === 1) {
        this._modalPointContainer.innerHTML = '';

        this._currentListPoints.map(function (point) {
          Object(_utils_render__WEBPACK_IMPORTED_MODULE_2__["renderElement"])(_this4._modalPointContainer, Object(_utils_render__WEBPACK_IMPORTED_MODULE_2__["createElement"])(Object(_pickup_point_template__WEBPACK_IMPORTED_MODULE_1__["pickupPointTemplate"])(point)));
        });

        Object(_sliders_init_fancy_slider__WEBPACK_IMPORTED_MODULE_3__["initGalleryFancybox"])();
        _modals_init_modals__WEBPACK_IMPORTED_MODULE_5__["modals"].open(null, this._modalPoint);
      }
    }
  }, {
    key: "_renderPointsItems",
    value: function _renderPointsItems() {
      var _this5 = this;

      if (this._currentListPoints > this._maxCountRenderPoints) {
        return;
      }

      if (!this._removingPoints.length) {
        this._filteredListPoints = _toConsumableArray(this._currentListPoints);
      } else {
        this._filterPoints();
      }

      this._pointsList.innerHTML = '';

      if (!this._pickupWrapper.classList.contains('is-active') && this._filteredListPoints.length) {
        this._showListPoints();
      } else if (!this._filteredListPoints.length) {
        this._hideListPoints();

        return;
      }

      this._filteredListPoints.map(function (point) {
        Object(_utils_render__WEBPACK_IMPORTED_MODULE_2__["renderElement"])(_this5._pointsList, Object(_utils_render__WEBPACK_IMPORTED_MODULE_2__["createElement"])(Object(_pickup_point_template__WEBPACK_IMPORTED_MODULE_1__["pickupPointTemplate"])(point)));
      });

      Object(_sliders_init_fancy_slider__WEBPACK_IMPORTED_MODULE_3__["initGalleryFancybox"])();
    }
  }, {
    key: "_setActiveMarker",
    value: function _setActiveMarker(placemark) {
      placemark.options.set({
        iconImageHref: './img/svg/marker-check.svg'
      });
      this._activePin = placemark;
    }
  }, {
    key: "_unsetActivePin",
    value: function _unsetActivePin() {
      if (this._activePin) {
        this._activePin.options.set({
          iconImageHref: './img/svg/marker.svg'
        });
      }
    }
  }, {
    key: "_changeActivePin",
    value: function _changeActivePin(placemark) {
      if (this._currentListPoints.length > this._maxCountRenderPoints) {
        this._unsetActivePin();
      } else if (this._currentListPoints[0].category === 'main') {
        this._unsetActivePin();
      } else {
        this._unsetActivePin();

        this._setActiveMarker(placemark);
      }
    }
  }, {
    key: "_showInfoPoints",
    value: function _showInfoPoints() {
      this._renderPointsItems();
    }
  }, {
    key: "_changeCurrentListPoints",
    value: function _changeCurrentListPoints(placemark) {
      var _this6 = this;

      this._currentListPoints = [];

      if (placemark.properties.get('geoObjects')) {
        var objects = placemark.properties.get('geoObjects');
        objects.map(function (obj) {
          _this6._currentListPoints.push(obj.properties._data);
        });
      } else {
        this._currentListPoints.push(placemark.properties._data);
      }
    }
  }, {
    key: "_onClickPin",
    value: function _onClickPin(e) {
      var activePlacemark = e.get('target');

      this._changeCurrentListPoints(activePlacemark);

      if (this._mobileDevice) {
        this._openModalInfo();
      } else {
        this._showInfoPoints();
      }

      this._changeActivePin(activePlacemark);

      this._map.panTo(activePlacemark.geometry._coordinates);
    }
  }, {
    key: "_getRemovingPoints",
    value: function _getRemovingPoints() {
      var newArr = [];

      var toggleInputs = this._filterContainer.querySelectorAll('input');

      toggleInputs.forEach(function (item) {
        if (!item.checked) {
          newArr.push(item.name);
        }
      });
      this._removingPoints = [].concat(newArr);
    }
  }, {
    key: "_filterObjects",
    value: function _filterObjects() {
      var _this7 = this;

      this._currentGeoObjects = this._geoObjects.filter(function (obj) {
        return !_this7._removingPoints.includes(obj.properties.get('category'));
      });
    }
  }, {
    key: "_filterPoints",
    value: function _filterPoints() {
      var _this8 = this;

      this._filteredListPoints = this._currentListPoints.filter(function (point) {
        return !_this8._removingPoints.includes(point.category);
      });
    }
  }, {
    key: "_onFilterChange",
    value: function _onFilterChange() {
      this._getRemovingPoints();

      this._filterObjects();

      this._createClusterer();

      this._renderPointsItems();
    }
  }, {
    key: "_createFilter",
    value: function _createFilter() {
      this._filterContainer.addEventListener('change', this._onFilterChange);
    }
  }, {
    key: "_createMap",
    value: function () {
      var _createMap2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
        var _this9 = this;

        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this._getMarkersData();

              case 2:
                this._data = _context2.sent;
                window.ymaps.ready(function () {
                  _this9._map = new window.ymaps.Map(_this9._mapContainer, {
                    center: _this9._centerMap,
                    zoom: _this9._zoomMap
                  });

                  _this9._createPins(_this9._data);

                  _this9._createClusterer();

                  _this9._addMainPin();
                });

              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function _createMap() {
        return _createMap2.apply(this, arguments);
      }

      return _createMap;
    }()
  }, {
    key: "_breakpointChecker",
    value: function _breakpointChecker() {
      if (this._breakpoint.matches) {
        this._mobileDevice = true;
      } else {
        this._mobileDevice = false;

        if (this._modalPointContainer.closest('.modal').classList.contains('is-active')) {
          _modals_init_modals__WEBPACK_IMPORTED_MODULE_5__["modals"].close(this._modalPoint);
        }

        this._renderPointsItems();
      }
    }
  }, {
    key: "init",
    value: function init() {
      if (!this._mapContainer) {
        return;
      }

      this._createMap();

      this._createFilter();

      this._breakpointChecker();

      this._breakpoint.addListener(this._breakpointChecker);
    }
  }]);

  return Map;
}();

/***/ }),

/***/ "./js/modules/map/pickup-point-template.js":
/*!*************************************************!*\
  !*** ./js/modules/map/pickup-point-template.js ***!
  \*************************************************/
/*! exports provided: pickupPointTemplate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pickupPointTemplate", function() { return pickupPointTemplate; });
var createItemsTempate = function createItemsTempate(data, template) {
  return data.map(function (item) {
    return template(item);
  }).join('');
};

var metroStations = function metroStations(metro) {
  var metroItem = function metroItem(data) {
    return "\n    <li class=\"delivery-point__metro-item\"><span class=\"delivery-point__metro-station delivery-point__metro-station--".concat(data.color, "\">").concat(data.name, "</span></li>");
  };

  var content = createItemsTempate(metro, metroItem);
  return "\n    <ul class=\"delivery-point__metro-list\">\n      ".concat(content, "\n    </ul>");
};

var createInfo = function createInfo(info) {
  var infoItem = function infoItem(data) {
    return "\n    <span>".concat(data, "</span>");
  };

  var content = createItemsTempate(info, infoItem);
  return "\n  <div class=\"delivery-point__info\">\n    ".concat(content, "\n  </div>");
};

var createSlider = function createSlider(images) {
  var sliderItem = function sliderItem(data) {
    return "\n      <div class=\"swiper-slide\" data-src=\"img/content/".concat(data, ".jpg\">\n        <picture>\n          <source type=\"image/webp\" srcset=\"img/content/").concat(data, ".webp, img/content/").concat(data, "@2x.webp 2x\"><img src=\"img/content/").concat(data, ".jpg\" srcset=\"img/content/").concat(data, "@2x.jpg 2x\" width=\"60\" height=\"60\" alt=\"").concat(data, "\">\n        </picture>\n      </div>");
  };

  var content = createItemsTempate(images, sliderItem);
  return "\n    <div class=\"delivery-point__slider swiper\">\n      <div class=\"swiper-wrapper\">\n        ".concat(content, "\n      </div>\n    </div>");
};

var createDescription = function createDescription(data) {
  return "\n  <p class=\"delivery-point__descr\">".concat(data, "</p>");
};

var pickupPointTemplate = function pickupPointTemplate(point) {
  var data = point.data;
  var metro = data.metro.length ? metroStations(data.metro) : '';
  var info = data.info.length ? createInfo(data.info) : '';
  var descr = data.description ? createDescription(data.description) : '';
  var slider = data.images ? createSlider(data.images) : '';
  return "<div class=\"delivery-point\" data-point-category=".concat(point.category, ">\n            <h3 class=\"delivery-point__title\">").concat(data.title, "</h3>\n            <address class=\"delivery-point__address\">").concat(data.address, "</address>\n            ").concat(metro, "\n            ").concat(info, "\n            ").concat(descr, "\n            ").concat(slider, "\n            <button class=\"btn\" type=\"button\">\u0414\u043E\u0441\u0442\u0430\u0432\u0438\u0442\u044C \u0441\u044E\u0434\u0430\n            </button>\n          </div>");
};



/***/ }),

/***/ "./js/modules/modals/init-modals.js":
/*!******************************************!*\
  !*** ./js/modules/modals/init-modals.js ***!
  \******************************************/
/*! exports provided: modals, initModals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modals", function() { return modals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initModals", function() { return initModals; });
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modals */ "./js/modules/modals/modals.js");
/* harmony import */ var _sliders_init_point_gallery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../sliders/init-point-gallery */ "./js/modules/sliders/init-point-gallery.js");
/* harmony import */ var _modal_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modal-map */ "./js/modules/modals/modal-map.js");



var modals; // Здесь реализован пример открытия модалки через колбэк закрытия
// const openModalInCloseCallback = (name, context = this) => {
//   context._enableScrolling = false;
//   context._setSettings('default');
//   modals.open(name);
// };
// closeCallback() {
//   openModalInCloseCallback('modal-5');
// },

var focusField = function focusField() {
  var input = document.querySelector("[data-modal].is-active input");
  setTimeout(function () {
    input.focus();
  }, 500);
};

var settings = {
  'default': {
    preventDefault: true,
    stopPlay: true,
    lockFocus: true,
    startFocus: true,
    focusBack: true,
    eventTimeout: 400,
    openCallback: false,
    closeCallback: false
  },
  'point-gallery': {
    openCallback: function openCallback(evt) {
      return Object(_sliders_init_point_gallery__WEBPACK_IMPORTED_MODULE_1__["onOpenPointGallery"])(evt);
    },
    closeCallback: _sliders_init_point_gallery__WEBPACK_IMPORTED_MODULE_1__["onClosePointGallery"]
  },
  'map': {
    openCallback: _modal_map__WEBPACK_IMPORTED_MODULE_2__["onOpenMapModal"],
    closeCallback: _modal_map__WEBPACK_IMPORTED_MODULE_2__["onCloseMapModal"]
  },
  'authorization': {
    openCallback: focusField
  },
  'modal-cheap': {
    openCallback: focusField
  }
};

var initModals = function initModals() {
  var modalElements = document.querySelectorAll('.modal');

  if (modalElements.length) {
    modalElements.forEach(function (el) {
      setTimeout(function () {
        el.classList.remove('modal--preload');
      }, 100);
    });
  }

  modals = new _modals__WEBPACK_IMPORTED_MODULE_0__["Modals"](settings); // Используйте в разработке экспортируемую переменную modals, window сделан для бэкэнда

  window.modals = modals;
};



/***/ }),

/***/ "./js/modules/modals/modal-map.js":
/*!****************************************!*\
  !*** ./js/modules/modals/modal-map.js ***!
  \****************************************/
/*! exports provided: onOpenMapModal, onCloseMapModal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onOpenMapModal", function() { return onOpenMapModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onCloseMapModal", function() { return onCloseMapModal; });
var modalName = 'map';
var breakpoint = window.matchMedia('(max-width:767px)');

var breakpointChecker = function breakpointChecker() {
  if (!breakpoint.matches) {
    window.modals.close(modalName);
  }
};

var onOpenMapModal = function onOpenMapModal() {
  breakpoint.addListener(breakpointChecker);
};

var onCloseMapModal = function onCloseMapModal() {
  breakpoint.removeListener(breakpointChecker);
};



/***/ }),

/***/ "./js/modules/modals/modals.js":
/*!*************************************!*\
  !*** ./js/modules/modals/modals.js ***!
  \*************************************/
/*! exports provided: Modals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Modals", function() { return Modals; });
/* harmony import */ var _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/scroll-lock */ "./js/utils/scroll-lock.js");
/* harmony import */ var _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/focus-lock */ "./js/utils/focus-lock.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }



var Modals = /*#__PURE__*/function () {
  function Modals() {
    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Modals);

    this._scrollLock = new _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__["ScrollLock"]();
    this._focusLock = new _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__["FocusLock"]();
    this._modalOpenElements = document.querySelectorAll('[data-open-modal]');
    this._openedModalElement = null;
    this._modalName = null;
    this._enableScrolling = true;
    this._settingKey = 'default';
    this._settings = settings;
    this._preventDefault = this._settings[this._settingKey].preventDefault;
    this._stopPlay = this._settings[this._settingKey].stopPlay;
    this._lockFocus = this._settings[this._settingKey].lockFocus;
    this._startFocus = this._settings[this._settingKey].startFocus;
    this._focusBack = this._settings[this._settingKey].focusBack;
    this._eventTimeout = this._settings[this._settingKey].eventTimeout;
    this._openCallback = this._settings[this._settingKey].openCallback;
    this._closeCallback = this._settings[this._settingKey].closeCallback;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._modalClickHandler = this._modalClickHandler.bind(this);

    this._init();
  }

  _createClass(Modals, [{
    key: "_init",
    value: function _init() {
      if (this._modalOpenElements.length) {
        document.addEventListener('click', this._documentClickHandler);
      }
    }
  }, {
    key: "_setSettings",
    value: function _setSettings() {
      var settingKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._settingKey;

      if (!this._settings[settingKey]) {
        return;
      }

      this._preventDefault = typeof this._settings[settingKey].preventDefault === 'boolean' ? this._settings[settingKey].preventDefault : this._settings[this._settingKey].preventDefault;
      this._stopPlay = typeof this._settings[settingKey].stopPlay === 'boolean' ? this._settings[settingKey].stopPlay : this._settings[this._settingKey].stopPlay;
      this._lockFocus = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].lockFocus : this._settings[this._settingKey].lockFocus;
      this._startFocus = typeof this._settings[settingKey].startFocus === 'boolean' ? this._settings[settingKey].startFocus : this._settings[this._settingKey].startFocus;
      this._focusBack = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].focusBack : this._settings[this._settingKey].focusBack;
      this._eventTimeout = typeof this._settings[settingKey].eventTimeout === 'number' ? this._settings[settingKey].eventTimeout : this._settings[this._settingKey].eventTimeout;
      this._openCallback = this._settings[settingKey].openCallback || this._settings[this._settingKey].openCallback;
      this._closeCallback = this._settings[settingKey].closeCallback || this._settings[this._settingKey].closeCallback;
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;

      if (!target.closest('[data-open-modal]')) {
        return;
      }

      evt.preventDefault();
      this._modalName = target.closest('[data-open-modal]').dataset.openModal;
      console.log(this._modalName);

      if (!this._modalName) {
        return;
      }

      this.open(evt);
    }
  }, {
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var isEscKey = evt.key === 'Escape' || evt.key === 'Esc';

      if (isEscKey) {
        evt.preventDefault();
        this.close(document.querySelector('.modal.is-active').dataset.modal);
      }
    }
  }, {
    key: "_modalClickHandler",
    value: function _modalClickHandler(evt) {
      var target = evt.target;

      if (!target.closest('[data-close-modal]')) {
        return;
      }

      this.close(target.closest('[data-modal]').dataset.modal);
    }
  }, {
    key: "_addListeners",
    value: function _addListeners(modal) {
      modal.addEventListener('click', this._modalClickHandler);
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_removeListeners",
    value: function _removeListeners(modal) {
      modal.removeEventListener('click', this._modalClickHandler);
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_stopInteractive",
    value: function _stopInteractive(modal) {
      if (this._stopPlay) {
        modal.querySelectorAll('video, audio').forEach(function (el) {
          return el.pause();
        });
        modal.querySelectorAll('[data-iframe]').forEach(function (el) {
          el.querySelector('iframe').contentWindow.postMessage('{"event": "command", "func": "pauseVideo", "args": ""}', '*');
        });
      }
    }
  }, {
    key: "_autoPlay",
    value: function _autoPlay(modal) {
      modal.querySelectorAll('[data-iframe]').forEach(function (el) {
        var autoPlay = el.closest('[data-auto-play]');

        if (autoPlay) {
          el.querySelector('iframe').contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
        }
      });
    }
  }, {
    key: "open",
    value: function open(evt) {
      var _this = this;

      var modalName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));

      if (!modal || modal.classList.contains('is-active')) {
        return;
      }

      document.removeEventListener('click', this._documentClickHandler);
      this._openedModalElement = document.querySelector('.modal.is-active');

      if (this._openedModalElement) {
        this._enableScrolling = false;
        this.close(this._openedModalElement.dataset.modal);
      }

      this._setSettings(modalName);

      modal.classList.add('is-active');

      if (!this._openedModalElement) {
        this._scrollLock.disableScrolling();
      }

      if (this._openCallback) {
        this._openCallback(evt);
      }

      if (this._lockFocus) {
        this._focusLock.lock('.modal.is-active', this._startFocus);
      }

      setTimeout(function () {
        _this._addListeners(modal);

        _this._autoPlay(modal);

        document.addEventListener('click', _this._documentClickHandler);
      }, this._eventTimeout);
    }
  }, {
    key: "close",
    value: function close() {
      var _this2 = this;

      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      document.removeEventListener('click', this._documentClickHandler);

      if (!modal || !modal.classList.contains('is-active')) {
        return;
      }

      if (this._lockFocus) {
        this._focusLock.unlock(this._focusBack);
      }

      modal.classList.remove('is-active');

      this._removeListeners(modal);

      this._stopInteractive(modal);

      if (this._closeCallback) {
        this._closeCallback();
      }

      if (this._enableScrolling) {
        setTimeout(function () {
          _this2._scrollLock.enableScrolling();
        }, this._eventTimeout);
      }

      setTimeout(function () {
        document.addEventListener('click', _this2._documentClickHandler);
      }, this._eventTimeout);

      this._setSettings('default');

      this._enableScrolling = true;
    }
  }]);

  return Modals;
}();

/***/ }),

/***/ "./js/modules/promo-code.js":
/*!**********************************!*\
  !*** ./js/modules/promo-code.js ***!
  \**********************************/
/*! exports provided: promoCode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "promoCode", function() { return promoCode; });
// в блоке Промо Кода, если клик был по полю инпут показывает кнопку иначе скрывает её
var promoCode = function promoCode() {
  var promoCodeSection = document.querySelector('[data-promo-code="parrent"]');

  if (!promoCodeSection) {
    return;
  }

  promoCodeSection.addEventListener('click', function (evt) {
    if (evt.target.closest('[data-promo-code="input"] input')) {
      promoCodeSection.classList.add('is-value');
    } else {
      promoCodeSection.classList.remove('is-value');
    }
  });
};



/***/ }),

/***/ "./js/modules/remove-border-filter.js":
/*!********************************************!*\
  !*** ./js/modules/remove-border-filter.js ***!
  \********************************************/
/*! exports provided: removeBorderFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeBorderFilter", function() { return removeBorderFilter; });
var filters = document.querySelector('.j-filters');
var breakpoint = window.matchMedia('(max-width:1023px)');

var breakpointChecker = function breakpointChecker() {
  var buttons = filters.querySelectorAll('[data-accordion="button"]');

  if (breakpoint.matches) {
    buttons.forEach(function (btn) {
      btn.addEventListener('click', function () {
        var parent = btn.closest('[data-accordion="parent"]');
        var element = btn.closest('[data-accordion="element"]');
        setTimeout(function () {
          if (element.classList.contains('is-active')) {
            parent.classList.add('is-active');
          } else {
            parent.classList.remove('is-active');
          }
        }, 100);
      });
    });
  } else {
    return;
  }
};

var removeBorderFilter = function removeBorderFilter() {
  if (!filters) {
    return;
  }

  breakpoint.addListener(breakpointChecker);
  breakpointChecker();
};



/***/ }),

/***/ "./js/modules/show-all-text.js":
/*!*************************************!*\
  !*** ./js/modules/show-all-text.js ***!
  \*************************************/
/*! exports provided: showAllText */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "showAllText", function() { return showAllText; });
var showAllText = function showAllText() {
  var textExcerptElements = document.querySelectorAll('[data-text-excerpt]');
  var textAllElements = document.querySelectorAll('[data-all-text]');

  if (!textExcerptElements || !textAllElements) {
    return;
  }

  var btnsShowText = document.querySelectorAll('[data-show-text-btn]');
  var btnsHideText = document.querySelectorAll('[data-hide-text-btn]');
  btnsShowText.forEach(function (btn, index) {
    btn.addEventListener('click', function () {
      textAllElements[index].classList.remove('is-hide');
      textExcerptElements[index].classList.add('is-hide');
      btnsShowText[index].classList.add('is-hide');
      btnsHideText[index].classList.remove('is-hide');
    });
  });
  btnsHideText.forEach(function (btn, index) {
    btn.addEventListener('click', function () {
      textAllElements[index].classList.add('is-hide');
      textExcerptElements[index].classList.remove('is-hide');
      btnsHideText[index].classList.add('is-hide');
      btnsShowText[index].classList.remove('is-hide');
    });
  });
};



/***/ }),

/***/ "./js/modules/show-input-on-checked.js":
/*!*********************************************!*\
  !*** ./js/modules/show-input-on-checked.js ***!
  \*********************************************/
/*! exports provided: showInputOnChecked */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "showInputOnChecked", function() { return showInputOnChecked; });
var checkboxes = document.querySelectorAll('[data-show-control]');

var showInputOnChecked = function showInputOnChecked() {
  if (!checkboxes.length) {
    return;
  }

  checkboxes.forEach(function (checkbox) {
    var dataValue = checkbox.dataset.showControl;
    var openedBlock = document.querySelector("[data-show-input=".concat(dataValue, "]"));
    var input = openedBlock.querySelector('input');

    if (!openedBlock) {
      return;
    }

    checkbox.addEventListener('input', function (evt) {
      if (evt.target.checked) {
        openedBlock.style.height = openedBlock.scrollHeight + 'px';
        setTimeout(function () {
          input.focus();
        }, 200);
      } else {
        openedBlock.style.height = null;
      }
    });
  });
};



/***/ }),

/***/ "./js/modules/sliders/delivery-point-slider.js":
/*!*****************************************************!*\
  !*** ./js/modules/sliders/delivery-point-slider.js ***!
  \*****************************************************/
/*! exports provided: deliveryPointSlider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deliveryPointSlider", function() { return deliveryPointSlider; });
var sliders = document.querySelectorAll('.delivery-point__slider');

var deliveryPointSlider = function deliveryPointSlider() {
  if (!sliders.length) {
    return;
  }

  sliders.forEach(function (slider) {
    var swiper = new Swiper(slider, {
      slidesPerView: 'auto',
      spaceBetween: 8
    });
  });
};



/***/ }),

/***/ "./js/modules/sliders/header-catalog-slider.js":
/*!*****************************************************!*\
  !*** ./js/modules/sliders/header-catalog-slider.js ***!
  \*****************************************************/
/*! exports provided: headerCatalogSlider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "headerCatalogSlider", function() { return headerCatalogSlider; });
var catalogSlider = document.querySelector('.header-slider');

var headerCatalogSlider = function headerCatalogSlider() {
  if (!catalogSlider) {
    return;
  }

  var swiperEl = catalogSlider.querySelector('.swiper');
  var prevSlideButton = catalogSlider.querySelector('.slider-controls__button-prev');
  var nextSlideButton = catalogSlider.querySelector('.slider-controls__button-next');
  var swiper = new Swiper(swiperEl, {
    slidesPerView: 'auto',
    allowTouchMove: false,
    spaceBetween: 0,
    speed: 500,
    slidesPerGroupAuto: true,
    breakpoints: {
      1024: {
        allowTouchMove: false
      },
      320: {
        allowTouchMove: true
      }
    },
    navigation: {
      nextEl: nextSlideButton,
      prevEl: prevSlideButton
    }
  });
};



/***/ }),

/***/ "./js/modules/sliders/init-fancy-slider.js":
/*!*************************************************!*\
  !*** ./js/modules/sliders/init-fancy-slider.js ***!
  \*************************************************/
/*! exports provided: initGalleryFancybox */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initGalleryFancybox", function() { return initGalleryFancybox; });
/* harmony import */ var _vendor_fancybox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../vendor/fancybox */ "./js/vendor/fancybox.js");

var selector;

var deliveryPointSlider = function deliveryPointSlider(sliders) {
  sliders.forEach(function (slider) {
    var swiper = new Swiper(slider, {
      slidesPerView: 'auto',
      spaceBetween: 8
    });
  });
};

var initFancybox = function initFancybox(gallery) {
  _vendor_fancybox__WEBPACK_IMPORTED_MODULE_0__["Fancybox"].bind(gallery, {
    animated: false,
    showClass: false,
    hideClass: false,
    closeButton: 'inside',
    dragToClose: false,
    startIndex: 0,
    groupAll: true,
    Image: {
      zoom: false,
      fit: 'cover'
    },
    Carousel: {
      on: {
        selectSlide: function selectSlide() {
          document.querySelector('.fancybox__carousel').classList.add('fancybox__carousel--gallery');
        }
      }
    },
    Thumbs: false,
    Toolbar: false,
    on: {
      done: function done() {
        window.disableBodyScroll();
      },
      destroy: function destroy() {
        window.enableBodyScroll();
      }
    }
  });
};

var initGalleryFancybox = function initGalleryFancybox() {
  var sliders = document.querySelectorAll('.delivery-point__slider');
  var slidersUserImg = document.querySelectorAll('.fancybox-img');

  if (!sliders || !slidersUserImg) {
    return;
  }

  deliveryPointSlider(sliders);
  deliveryPointSlider(slidersUserImg);
  sliders.forEach(function (slider, index) {
    selector = '.delivery-point__slider--' + (index + 1) + ' ' + '.swiper-slide';
    slider.classList.add('delivery-point__slider--' + (index + 1));
    initFancybox(selector);
  });
  slidersUserImg.forEach(function (slider, index) {
    selector = '.fancybox-img--' + (index + 1) + ' ' + '.swiper-slide';
    slider.classList.add('fancybox-img--' + (index + 1));
    initFancybox(selector);
  });
};



/***/ }),

/***/ "./js/modules/sliders/init-info-block-slider.js":
/*!******************************************************!*\
  !*** ./js/modules/sliders/init-info-block-slider.js ***!
  \******************************************************/
/*! exports provided: initInfoBlockSlider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initInfoBlockSlider", function() { return initInfoBlockSlider; });
var containerInfoSlider = document.querySelector('.info-block');
var breakpoint = window.matchMedia('(max-width: 1023px)');

var initInfoBlockSlider = function initInfoBlockSlider() {// if (!containerInfoSlider) {
  //   return;
  // }
  // const breakpointChecker = () => {
  //   if (breakpoint.matches) {
  //     // eslint-disable-next-line
  //     const slider = new Swiper(containerInfoSlider, {
  //       slidesPerView: 'auto',
  //       wrapperClass: 'info-block__list',
  //       slideClass: 'info-block__item',
  //     });
  //   }
  // };
  // breakpoint.addListener(breakpointChecker);
  // breakpointChecker();
};



/***/ }),

/***/ "./js/modules/sliders/init-point-gallery.js":
/*!**************************************************!*\
  !*** ./js/modules/sliders/init-point-gallery.js ***!
  \**************************************************/
/*! exports provided: initPointGallery, onOpenPointGallery, onClosePointGallery */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initPointGallery", function() { return initPointGallery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onOpenPointGallery", function() { return onOpenPointGallery; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onClosePointGallery", function() { return onClosePointGallery; });
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var modal = document.querySelector('.modal-point-gallery');
var slider = false;

var initPointGallery = function initPointGallery() {
  var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

  if (!modal) {
    return;
  }

  var modalSlider = modal.querySelector('.swiper');
  slider = new Swiper(modalSlider, {
    slidesPerView: 1,
    initialSlide: index,
    allowTouchMove: true,
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev'
    }
  });
};

var onOpenPointGallery = function onOpenPointGallery(evt) {
  if (!modal) {
    return;
  }

  var parent = evt.target.closest('.swiper-wrapper');
  var list = parent.querySelectorAll('.swiper-slide');
  var modalWrapper = modal.querySelector('.swiper-wrapper');
  var slideModal = modal.querySelector('.swiper-slide');

  var pictures = _toConsumableArray(list).map(function (item) {
    return item.querySelector('picture').cloneNode(true);
  });

  var index = _toConsumableArray(list).indexOf(evt.target.closest('.swiper-slide'));

  modalWrapper.innerHTML = '';
  pictures.forEach(function (picture) {
    var slideClone = slideModal.cloneNode();
    modalWrapper.appendChild(slideClone);
    slideClone.appendChild(picture);
  });
  initPointGallery(index);
};

var onClosePointGallery = function onClosePointGallery() {
  if (slider) {
    setTimeout(function () {
      slider.destroy();
    }, 300);
  }
};



/***/ }),

/***/ "./js/modules/sliders/init-sliders.js":
/*!********************************************!*\
  !*** ./js/modules/sliders/init-sliders.js ***!
  \********************************************/
/*! exports provided: initSliders */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initSliders", function() { return initSliders; });
/* harmony import */ var _slider_in_cards__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./slider-in-cards */ "./js/modules/sliders/slider-in-cards.js");
/* harmony import */ var _slider_cards__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./slider-cards */ "./js/modules/sliders/slider-cards.js");
/* harmony import */ var _header_catalog_slider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./header-catalog-slider */ "./js/modules/sliders/header-catalog-slider.js");
/* harmony import */ var _slider_tabs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./slider-tabs */ "./js/modules/sliders/slider-tabs.js");
/* harmony import */ var _slider_categories__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./slider-categories */ "./js/modules/sliders/slider-categories.js");
/* harmony import */ var _slider_intro__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./slider-intro */ "./js/modules/sliders/slider-intro.js");
/* harmony import */ var _slider_banners__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./slider-banners */ "./js/modules/sliders/slider-banners.js");
/* harmony import */ var _might_like_filters__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./might-like-filters */ "./js/modules/sliders/might-like-filters.js");
/* harmony import */ var _shopping_widget__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./shopping-widget */ "./js/modules/sliders/shopping-widget.js");
/* harmony import */ var _delivery_point_slider__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./delivery-point-slider */ "./js/modules/sliders/delivery-point-slider.js");
/* harmony import */ var _init_point_gallery__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./init-point-gallery */ "./js/modules/sliders/init-point-gallery.js");












var initSliders = function initSliders() {
  Object(_header_catalog_slider__WEBPACK_IMPORTED_MODULE_2__["headerCatalogSlider"])();
  Object(_slider_in_cards__WEBPACK_IMPORTED_MODULE_0__["sliderInCard"])();
  Object(_slider_cards__WEBPACK_IMPORTED_MODULE_1__["sliderCards"])();
  Object(_slider_tabs__WEBPACK_IMPORTED_MODULE_3__["sliderTabs"])();
  Object(_slider_categories__WEBPACK_IMPORTED_MODULE_4__["sliderCategories"])();
  Object(_slider_intro__WEBPACK_IMPORTED_MODULE_5__["sliderIntro"])();
  Object(_slider_banners__WEBPACK_IMPORTED_MODULE_6__["sliderBanners"])();
  Object(_might_like_filters__WEBPACK_IMPORTED_MODULE_7__["initMightLikeSliders"])();
  Object(_shopping_widget__WEBPACK_IMPORTED_MODULE_8__["shoppingWidget"])(); // deliveryPointSlider();
  // initPointGallery();
};



/***/ }),

/***/ "./js/modules/sliders/init-top-slider.js":
/*!***********************************************!*\
  !*** ./js/modules/sliders/init-top-slider.js ***!
  \***********************************************/
/*! exports provided: initTopSlider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initTopSlider", function() { return initTopSlider; });
var slider = document.querySelector('.top-slider__slider');

var initTopSlider = function initTopSlider() {
  if (!slider) {
    return;
  }

  var swiper = new Swiper(slider, {
    slidesPerView: 3.2,
    slidesPerGroup: 3.2,
    speed: 500,
    navigation: {
      nextEl: '.top-slider-next',
      prevEl: '.top-slider-prev'
    },
    breakpoints: {
      1600: {
        slidesPerView: 10,
        slidesPerGroup: 10,
        spaceBetween: 6
      },
      1280: {
        slidesPerView: 8,
        slidesPerGroup: 8
      },
      1024: {
        slidesPerGroup: 6.6,
        slidesPerView: 6.6,
        spaceBetween: 6
      },
      768: {
        slidesPerGroup: 1,
        slidesPerView: 5.3,
        spaceBetween: 6
      }
    }
  });
};



/***/ }),

/***/ "./js/modules/sliders/might-like-filters.js":
/*!**************************************************!*\
  !*** ./js/modules/sliders/might-like-filters.js ***!
  \**************************************************/
/*! exports provided: initMightLikeSliders */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initMightLikeSliders", function() { return initMightLikeSliders; });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var mightLikeFilters = function mightLikeFilters(item) {
  if (!item) {
    return;
  } else if (item.classList.contains('is-initialized')) {
    return;
  }

  item.classList.add('is-initialized'); // eslint-disable-next-line

  var swiper = new Swiper(item, {
    slidesPerView: 'auto',
    spaceBetween: 8,
    speed: 500
  });
};

var initMightLikeSliders = function initMightLikeSliders() {
  var mightLikeSliders = document.querySelectorAll('.might-like__filters-swiper');

  var _iterator = _createForOfIteratorHelper(mightLikeSliders),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var el = _step.value;
      mightLikeFilters(el);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}; // для бекенда


window.mightLikeFilters = mightLikeFilters;


/***/ }),

/***/ "./js/modules/sliders/shopping-widget.js":
/*!***********************************************!*\
  !*** ./js/modules/sliders/shopping-widget.js ***!
  \***********************************************/
/*! exports provided: shoppingWidget */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shoppingWidget", function() { return shoppingWidget; });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// слайдер карточек виджета
var shoppingWidget = function shoppingWidget() {
  var sliders = document.querySelectorAll('[data-slider-cards="small"]');

  if (!sliders.length) {
    return;
  }

  var _iterator = _createForOfIteratorHelper(sliders),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var el = _step.value;

      if (!el.classList.contains('is-initialized')) {
        el.classList.add('is-initialized');
        var swiper = el.querySelector('[data-swiper="slider-cards"]'); // eslint-disable-next-line

        new Swiper(swiper, {
          speed: 500,
          slidesPerView: 'auto',
          slidesPerGroupAuto: true,
          spaceBetween: 8,
          breakpoints: {
            768: {
              spaceBetween: 16
            }
          },
          navigation: {
            nextEl: '.slider-cards__swiper-button-next',
            prevEl: '.slider-cards__swiper-button-prev'
          }
        });
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}; // для бэкенда: инициализирует слайдер карточек


window.shoppingWidget = shoppingWidget;


/***/ }),

/***/ "./js/modules/sliders/slider-banners.js":
/*!**********************************************!*\
  !*** ./js/modules/sliders/slider-banners.js ***!
  \**********************************************/
/*! exports provided: sliderBanners */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sliderBanners", function() { return sliderBanners; });
var banners = document.querySelector('.banners');

var sliderBanners = function sliderBanners() {
  if (!banners) {
    return;
  }

  var swiper = banners.querySelector('.swiper');
  var slider = new Swiper(swiper, {
    slidesPerView: 'auto',
    spaceBetween: 8,
    watchOverflow: true,
    navigation: {
      nextEl: '.banners__swiper-button-next',
      prevEl: '.banners__swiper-button-prev'
    },
    breakpoints: {
      768: {
        spaceBetween: 16,
        slidesPerView: 'auto'
      },
      1024: {
        spaceBetween: 24,
        slidesPerView: 'auto'
      },
      1280: {
        slidesPerView: 2,
        spaceBetween: 24
      }
    }
  });
};



/***/ }),

/***/ "./js/modules/sliders/slider-cards.js":
/*!********************************************!*\
  !*** ./js/modules/sliders/slider-cards.js ***!
  \********************************************/
/*! exports provided: sliderCards */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sliderCards", function() { return sliderCards; });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// слайдер карточек
var sliderCards = function sliderCards() {
  var sliderCardsCatalog = document.querySelectorAll('[data-slider-cards="catalog"]');
  var sliderCardsSlider = document.querySelectorAll('[data-slider-cards="slider"]');
  var sliderCardsEl = [].concat(_toConsumableArray(sliderCardsSlider), _toConsumableArray(sliderCardsCatalog));
  var isAllowTouchMove = true;

  if (!sliderCardsEl.length) {
    return;
  }

  var _iterator = _createForOfIteratorHelper(sliderCardsEl),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var el = _step.value;
      var mobileSpaceBetween = void 0;
      var offset = void 0;
      var offsetMobile = void 0;

      if (el.closest('.reviews') || el.closest('.designers') || el.closest('.interiors')) {
        mobileSpaceBetween = 8;
      }

      if (el.closest('.reviews') || el.closest('.designers') || el.closest('.interiors')) {
        offset = 0;
        offsetMobile = 0;
      }

      if (el.closest('.popular-products') || el.closest('.sellout ') || el.closest('.you-watched') || el.closest('.might-like') || el.closest('.similar-goods') || el.closest('.series-goods') || el.closest('.accessory-parts')) {
        offset = 26;
        offsetMobile = 16;
        mobileSpaceBetween = 24;
      }

      if (el.closest('.popular-products') || el.closest('.sellout ') || el.closest('.you-watched') || el.closest('.might-like') || el.closest('.similar-goods') || el.closest('.series-goods') || el.closest('.accessory-parts')) {
        isAllowTouchMove = false;
      }

      if (!el.classList.contains('is-initialized')) {
        el.classList.add('is-initialized');
        var swiper = el.querySelector('[data-swiper="slider-cards"]'); // eslint-disable-next-line

        new Swiper(swiper, {
          speed: 500,
          slidesPerView: 'auto',
          slidesPerGroupAuto: true,
          breakpoints: {
            320: {
              spaceBetween: mobileSpaceBetween,
              slidesOffsetBefore: offsetMobile
            },
            768: {
              spaceBetween: 16,
              slidesOffsetBefore: offset,
              allowTouchMove: true
            },
            1024: {
              spaceBetween: 24,
              slidesOffsetBefore: 0,
              allowTouchMove: isAllowTouchMove
            }
          },
          navigation: {
            nextEl: '.slider-cards__swiper-button-next',
            prevEl: '.slider-cards__swiper-button-prev'
          }
        });
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}; // для бэкенда: инициализирует слайдер карточек


window.sliderCards = sliderCards;


/***/ }),

/***/ "./js/modules/sliders/slider-categories.js":
/*!*************************************************!*\
  !*** ./js/modules/sliders/slider-categories.js ***!
  \*************************************************/
/*! exports provided: sliderCategories */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sliderCategories", function() { return sliderCategories; });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// слайдер карточек
var sliderCategories = function sliderCategories() {
  var sliderCardsEl = document.querySelectorAll('[data-slider-cards="categories"]');

  if (!sliderCardsEl.length) {
    return;
  }

  var _iterator = _createForOfIteratorHelper(sliderCardsEl),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var el = _step.value;

      if (!el.classList.contains('is-initialized')) {
        el.classList.add('is-initialized');
        var swiper = el.querySelector('[data-swiper="slider-cards"]'); // eslint-disable-next-line

        new Swiper(swiper, {
          speed: 500,
          slidesPerView: 'auto',
          spaceBetween: 8,
          slidesOffsetBefore: 0,
          slidesPerGroupAuto: true,
          breakpoints: {
            1440: {
              spaceBetween: 24,
              slidesOffsetBefore: 0
            },
            1280: {
              spaceBetween: 24
            },
            1024: {
              spaceBetween: 16,
              slidesOffsetBefore: 0
            },
            768: {
              spaceBetween: 16,
              slidesOffsetBefore: 32
            },
            320: {
              spaceBetween: 8,
              slidesOffsetBefore: 16
            }
          },
          navigation: {
            nextEl: '.slider-cards__swiper-button-next',
            prevEl: '.slider-cards__swiper-button-prev'
          }
        });
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}; // для бэкенда: инициализирует слайдер карточек


window.sliderCategories = sliderCategories;


/***/ }),

/***/ "./js/modules/sliders/slider-in-cards.js":
/*!***********************************************!*\
  !*** ./js/modules/sliders/slider-in-cards.js ***!
  \***********************************************/
/*! exports provided: sliderInCard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sliderInCard", function() { return sliderInCard; });
/* harmony import */ var _utils_create_grid_hover__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/create-grid-hover */ "./js/utils/create-grid-hover.js");
/* harmony import */ var _utils_switch_slide_hover_mouse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/switch-slide-hover-mouse */ "./js/utils/switch-slide-hover-mouse.js");
// слайдер внутри карточки товара каталога и слайдера



var sliderInCard = function sliderInCard() {
  var swipers = document.querySelectorAll('[data-swiper="product-card"] .swiper');

  if (!swipers.length) {
    return;
  }

  var productCard = document.querySelectorAll('[data-swiper="product-card"]');
  swipers.forEach(function (swiper, index) {
    if (!swiper.classList.contains('is-initialized')) {
      swiper.classList.add('is-initialized'); // eslint-disable-next-line

      var swiperInstance = new Swiper(swiper, {
        speed: 500,
        grabCursor: true,
        slidesPerView: 'auto',
        pagination: {
          clickable: true,
          el: productCard[index].querySelector('.product-card__swiper-pagination')
        }
      });
      productCard[index].swiperInstance = swiperInstance;
    }
  }); // for (let swiper of swipers) {
  // }
  // создает сетку для переключения слайдов по ховеру

  Object(_utils_create_grid_hover__WEBPACK_IMPORTED_MODULE_0__["createGridHover"])(productCard); // переключает слайд, эмулирует клик по булету слайдера

  Object(_utils_switch_slide_hover_mouse__WEBPACK_IMPORTED_MODULE_1__["switchSlideHoverMouse"])(productCard);
}; // для бэкенда: инициализирует слайдер внутри карточки товара каталога и слайдера


window.sliderInCard = sliderInCard;


/***/ }),

/***/ "./js/modules/sliders/slider-intro.js":
/*!********************************************!*\
  !*** ./js/modules/sliders/slider-intro.js ***!
  \********************************************/
/*! exports provided: sliderIntro */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sliderIntro", function() { return sliderIntro; });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// слайдер карточек
var sliderIntro = function sliderIntro() {
  var sliderCardsEl = document.querySelectorAll('[data-slider-cards="intro"]');

  if (!sliderCardsEl.length) {
    return;
  }

  var _iterator = _createForOfIteratorHelper(sliderCardsEl),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var el = _step.value;

      if (!el.classList.contains('is-initialized')) {
        el.classList.add('is-initialized');
        var swiper = el.querySelector('[data-swiper="slider-cards"]'); // eslint-disable-next-line

        new Swiper(swiper, {
          speed: 500,
          slidesPerView: 'auto',
          grabCursor: true,
          spaceBetween: 8,
          autoHeight: true,
          pagination: {
            clickable: true,
            el: '.swiper-pagination',
            dynamicBullets: true,
            dynamicMainBullets: 3
          },
          breakpoints: {
            320: {
              slidesOffsetBefore: 16
            },
            768: {
              slidesOffsetBefore: 0
            }
          },
          navigation: {
            nextEl: '.slider-cards__swiper-button-next',
            prevEl: '.slider-cards__swiper-button-prev'
          }
        });
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}; // для бэкенда: инициализирует слайдер карточек


window.sliderIntro = sliderIntro;


/***/ }),

/***/ "./js/modules/sliders/slider-list.js":
/*!*******************************************!*\
  !*** ./js/modules/sliders/slider-list.js ***!
  \*******************************************/
/*! exports provided: sliderList */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sliderList", function() { return sliderList; });
var sliders = document.querySelectorAll('.slider-list__container');

var sliderList = function sliderList() {
  if (!sliders.length) {
    return;
  }

  sliders.forEach(function (slider) {
    var swiper = new Swiper(slider, {
      slidesPerView: 'auto',
      spaceBetween: 0
    });
  });
};



/***/ }),

/***/ "./js/modules/sliders/slider-product.js":
/*!**********************************************!*\
  !*** ./js/modules/sliders/slider-product.js ***!
  \**********************************************/
/*! exports provided: sliderProduct */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sliderProduct", function() { return sliderProduct; });
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// слайдер продукта
var productSlidersWrapper = document.querySelectorAll('.product-slider');

var sliderProduct = function sliderProduct() {
  if (!productSlidersWrapper.length) {
    return;
  }

  productSlidersWrapper.forEach(function (slider) {
    var _Swiper;

    var containerThumbs = slider.querySelector('.product-slider__thumbs');
    var prevSlideButton = slider.querySelector('.slider-controls__button-prev');
    var nextSlideButton = slider.querySelector('.slider-controls__button-next');
    var container = slider.querySelector('[data-slider-product="product-slider"]');
    var swiper = new Swiper(container, (_Swiper = {
      slidesPerView: 'auto',
      speed: 500,
      pagination: {
        clickable: true,
        el: container.querySelector('.product-slider__swiper-pagination')
      },
      thumbs: {
        swiper: {
          el: containerThumbs,
          slidesPerView: 'auto',
          direction: 'vertical'
        }
      },
      navigation: {
        nextEl: nextSlideButton,
        prevEl: prevSlideButton
      }
    }, _defineProperty(_Swiper, "pagination", {
      clickable: true,
      el: '.swiper-pagination',
      dynamicBullets: true,
      dynamicMainBullets: 5
    }), _defineProperty(_Swiper, "on", {
      // eslint-disable-next-line
      slideChange: function slideChange() {
        this.slides.forEach(function (slide) {
          var videoIframe = slide.querySelector('.video video');

          if (videoIframe) {
            videoIframe.pause();
          }
        });
      }
    }), _Swiper));
  });
};



/***/ }),

/***/ "./js/modules/sliders/slider-tabs.js":
/*!*******************************************!*\
  !*** ./js/modules/sliders/slider-tabs.js ***!
  \*******************************************/
/*! exports provided: sliderTabs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sliderTabs", function() { return sliderTabs; });
var swiper = document.querySelector('.tabs-lighting__container.swiper');

var sliderTabs = function sliderTabs() {
  if (!swiper) {
    return;
  }

  var slider = new Swiper(swiper, {
    slidesPerView: 'auto',
    spaceBetween: 0
  });
};



/***/ }),

/***/ "./js/modules/tabs.js":
/*!****************************!*\
  !*** ./js/modules/tabs.js ***!
  \****************************/
/*! exports provided: Tabs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tabs", function() { return Tabs; });
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var Tabs = /*#__PURE__*/function () {
  function Tabs() {
    _classCallCheck(this, Tabs);

    this._windowWidth = window.innerWidth;
    this._documentClickHandler = this._documentClickHandler.bind(this);

    this._init();
  }

  _createClass(Tabs, [{
    key: "_init",
    value: function _init() {
      this._initAllTabs();

      document.addEventListener('click', this._documentClickHandler);
    }
  }, {
    key: "_resizeObserver",
    value: function _resizeObserver() {
      var _this = this;

      return new ResizeObserver(function (entries) {
        var _iterator = _createForOfIteratorHelper(entries),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var entry = _step.value;

            if (entry.target.classList.contains('is-active')) {
              _this._updateTabHeight();
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      });
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;

      if (!target.closest('[data-tabs="control"]')) {
        return;
      }

      evt.preventDefault();
      var control = target.closest('[data-tabs="control"]');
      this.openTab(control);
    }
  }, {
    key: "_initAllTabs",
    value: function _initAllTabs() {
      var _this2 = this;

      var tabs = document.querySelectorAll('[data-tabs="parent"]');
      tabs.forEach(function (tab) {
        _this2._initTab(tab);
      });
    }
  }, {
    key: "_removeAllActiveClasses",
    value: function _removeAllActiveClasses(tabControlElements, tabElements) {
      tabElements.forEach(function (tab) {
        tab.classList.remove('is-active');
      });
      tabControlElements.forEach(function (element, index) {
        element.classList.remove('is-active');
        element.setAttribute('data-index', index);
      });
    }
  }, {
    key: "_setTabStartState",
    value: function _setTabStartState(tab, dataHeight, tabElements, tabContentElement, tabControlElements, dataDelay) {
      var activeIndex = this._returnActiveIndex(tabControlElements);

      var blockHeight = dataHeight === 'max' ? this._returnMaxHeight(tabElements) : tabElements[activeIndex].offsetHeight;

      this._removeAllActiveClasses(tabControlElements, tabElements);

      tab.classList.add('no-transition');
      tabControlElements[activeIndex].classList.add('is-active');
      tabElements[activeIndex].classList.add('is-active');
      tabContentElement.style.height = "".concat(blockHeight, "px");
      setTimeout(function () {
        if (dataDelay) {
          tab.classList.remove('no-transition');
        }
      }, dataDelay);
    }
  }, {
    key: "_returnActiveIndex",
    value: function _returnActiveIndex(tabControlElements) {
      var activeIndex = 0;
      var flag = true;
      tabControlElements.forEach(function (control, index) {
        if (control.classList.contains('is-active') && flag) {
          activeIndex = index;
          flag = false;
        }
      });
      return activeIndex;
    }
  }, {
    key: "_returnMaxHeight",
    value: function _returnMaxHeight(tabElements) {
      var height = [];
      tabElements.forEach(function (element) {
        height.push(element.offsetHeight);
      });
      height.sort(function (a, b) {
        return a - b;
      });
      return height[height.length - 1];
    }
  }, {
    key: "_returnScopeList",
    value: function _returnScopeList(nodeList, parent) {
      var array = [];
      nodeList.forEach(function (element) {
        var elementParent = element.closest('[data-tabs="parent"]');

        if (elementParent === parent) {
          array.push(element);
        }
      });
      return array;
    }
  }, {
    key: "_returnScopeChild",
    value: function _returnScopeChild(nodeList, parent) {
      var currentChild;
      nodeList.forEach(function (element) {
        var elementParent = element.closest('[data-tabs="parent"]');

        if (elementParent === parent) {
          currentChild = element;
        }
      });
      return currentChild;
    }
  }, {
    key: "_updateTabHeight",
    value: function _updateTabHeight() {
      var _this3 = this;

      var activeElements = document.querySelectorAll('[data-tabs="element"].is-active');
      activeElements.forEach(function (element) {
        var transition = false;
        var parent = element.closest('[data-tabs="parent"]');

        if (parent.closest('[data-tabs="element"]')) {
          transition = true;
        }

        _this3._setTabElementHeight(element, transition);
      });
    }
  }, {
    key: "_setTabElementHeight",
    value: function _setTabElementHeight(element, transition) {
      var parentElement = element.closest('[data-tabs="parent"]');
      var dataHeight = parentElement.dataset.height;

      var contentElement = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="content"]'), parentElement);

      var tabElements = this._returnScopeList(parentElement.querySelectorAll('[data-tabs="element"]'), parentElement);

      if (!transition) {
        parentElement.classList.add('no-transition');
      }

      if (dataHeight === 'max') {
        contentElement.style.height = "".concat(this._returnMaxHeight(tabElements), "px");
      } else {
        contentElement.style.height = "".concat(this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="element"].is-active'), parentElement).offsetHeight, "px");
      }

      setTimeout(function () {
        return parentElement.classList.remove('no-transition');
      });
    }
  }, {
    key: "_initTab",
    value: function _initTab(tab) {
      var _this4 = this;

      var dataHeight = tab.dataset.height;
      var dataDelay = tab.dataset.delay ? tab.dataset.delay : 0;
      var tabContentElement = tab.querySelector('[data-tabs="content"]');

      var tabControlElements = this._returnScopeList(tab.querySelectorAll('[data-tabs="control"]'), tab);

      var tabElements = this._returnScopeList(tab.querySelectorAll('[data-tabs="element"]'), tab);

      this._setTabStartState(tab, dataHeight, tabElements, tabContentElement, tabControlElements, dataDelay);

      tabElements.forEach(function (element) {
        _this4._resizeObserver().observe(element);
      });
      setTimeout(function () {
        tab.classList.remove('no-transition-global');
      });
    }
  }, {
    key: "reInit",
    value: function reInit() {
      this._initAllTabs();
    }
  }, {
    key: "openTab",
    value: function openTab(control) {
      var currentIndex = control.dataset.index;
      var parentElement = control.closest('[data-tabs="parent"]');

      if (control.classList.contains('is-active') || parentElement.classList.contains('no-action')) {
        return;
      }

      var dataDelay = parentElement.dataset.delay ? parentElement.dataset.delay : 0;
      var dataHeight = parentElement.dataset.height;
      var contentElement = parentElement.querySelector('[data-tabs="content"]');

      var tabElements = this._returnScopeList(parentElement.querySelectorAll('[data-tabs="element"]'), parentElement);

      var activeControl = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="control"].is-active'), parentElement);

      var activeElement = this._returnScopeChild(parentElement.querySelectorAll('[data-tabs="element"].is-active'), parentElement);

      var currentHeight = contentElement.offsetHeight;
      var newHeight = tabElements[currentIndex].offsetHeight;
      parentElement.classList.add('no-action');
      document.activeElement.blur();

      if (activeControl) {
        activeControl.classList.remove('is-active');
      }

      if (activeElement) {
        activeElement.classList.remove('is-active');
      }

      if (currentHeight > newHeight) {
        setTimeout(function () {
          if (dataHeight !== 'max') {
            contentElement.style.height = newHeight + 'px';
          }

          control.classList.add('is-active');
          tabElements[currentIndex].classList.add('is-active');
          tabElements[currentIndex].scrollTo(0, 0);
          parentElement.classList.remove('no-action');
        }, dataDelay);
      } else {
        if (dataHeight !== 'max') {
          contentElement.style.height = newHeight + 'px';
        }

        setTimeout(function () {
          control.classList.add('is-active');
          tabElements[currentIndex].classList.add('is-active');
          tabElements[currentIndex].scrollTo(0, 0);
          parentElement.classList.remove('no-action');
        }, dataDelay);
      }
    }
  }]);

  return Tabs;
}();

/***/ }),

/***/ "./js/modules/toggle-button.js":
/*!*************************************!*\
  !*** ./js/modules/toggle-button.js ***!
  \*************************************/
/*! exports provided: toggleButton */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "toggleButton", function() { return toggleButton; });
// добавляет / убирает класс is-active c кнопки по клику
var parrent = document.querySelector('[toggle-button]');

var toggleButton = function toggleButton() {
  if (!parrent) {
    return;
  }

  document.addEventListener('click', function (evt) {
    var toggle = evt.target.closest('[toggle-button]');
    var sectionHeadingToggle = document.querySelector('.section-heading__button-more');

    if (toggle) {
      toggle.classList.toggle('is-active');
    }

    if (!sectionHeadingToggle) {
      return;
    } else if (sectionHeadingToggle.classList.contains('is-active') && !evt.target.classList.contains('section-heading__button-more')) {
      sectionHeadingToggle.classList.remove('is-active');
    }
  });
};



/***/ }),

/***/ "./js/modules/tooltip-badge.js":
/*!*************************************!*\
  !*** ./js/modules/tooltip-badge.js ***!
  \*************************************/
/*! exports provided: tooltipCatalogBadge, tooltipBusketQuestionBadge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tooltipCatalogBadge", function() { return tooltipCatalogBadge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tooltipBusketQuestionBadge", function() { return tooltipBusketQuestionBadge; });
var tooltipsCatalog = document.querySelectorAll('[data-tooltip="sale-item"]');
var tooltipBusketQuestion = document.querySelector('[data-tooltip="question"');

var tooltipCatalogBadge = function tooltipCatalogBadge() {
  if (!tooltipsCatalog.length) {
    return;
  }

  var texts = document.querySelectorAll('[data-tooltip="sale-item-content"]');
  tooltipsCatalog.forEach(function (el, index) {
    texts[index].classList.remove('visually-hidden'); // eslint-disable-next-line

    tippy(el, {
      trigger: 'click',
      content: texts[index],
      theme: 'custom-light',
      placement: 'bottom-start'
    });
  });
};

var tooltipBusketQuestionBadge = function tooltipBusketQuestionBadge() {
  if (!tooltipBusketQuestion) {
    return;
  }

  var text = document.querySelector('[data-tooltip="question-content"]');
  text.classList.remove('visually-hidden'); // eslint-disable-next-line

  tippy(tooltipBusketQuestion, {
    trigger: 'mouseenter',
    content: text,
    theme: 'custom-light',
    placement: 'bottom-start',
    maxWidth: 200
  });
};



/***/ }),

/***/ "./js/utils/create-grid-hover.js":
/*!***************************************!*\
  !*** ./js/utils/create-grid-hover.js ***!
  \***************************************/
/*! exports provided: createGridHover */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createGridHover", function() { return createGridHover; });
// создает сетку для переключения слайдов по ховеру
var createGridHover = function createGridHover(parrents) {
  var grids = document.querySelectorAll('[data-grid-hover="parrent"]');

  if (!grids.length) {
    return;
  }

  parrents.forEach(function (parrent) {
    var grid = parrent.querySelector('[data-grid-hover="parrent"]');
    var gridItem = grid.querySelector('[data-grid-hover="item"]');
    var buletsCount = parrent.querySelectorAll('.swiper-pagination-bullet').length;
    Array(buletsCount - 1).fill('').forEach(function () {
      grid.appendChild(gridItem.cloneNode());
    });
  });
};



/***/ }),

/***/ "./js/utils/focus-lock.js":
/*!********************************!*\
  !*** ./js/utils/focus-lock.js ***!
  \********************************/
/*! exports provided: FocusLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusLock", function() { return FocusLock; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var SELECTORS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^="-"])'];
var FocusLock = /*#__PURE__*/function () {
  function FocusLock() {
    _classCallCheck(this, FocusLock);

    this._lockedSelector = null;
    this._focusableElements = null;
    this._endElement = null;
    this._selectors = SELECTORS;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
  }

  _createClass(FocusLock, [{
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var activeElement = document.activeElement;

      if (evt.key === 'Tab') {
        if (!this._focusableElements.length) {
          evt.preventDefault();
          activeElement.blur();
          return;
        }

        if (this._focusableElements.length === 1) {
          evt.preventDefault();

          this._focusableElements[0].focus();

          return;
        }

        if (this._focusableElements.length > 1 && !activeElement.closest(this._lockedSelector)) {
          evt.preventDefault();

          this._focusableElements[0].focus();

          return;
        }
      }

      if (evt.key === 'Tab' && !evt.shiftKey && activeElement === this._focusableElements[this._focusableElements.length - 1]) {
        evt.preventDefault();

        this._focusableElements[0].focus();
      }

      if (evt.key === 'Tab' && evt.shiftKey && activeElement === this._focusableElements[0]) {
        evt.preventDefault();

        this._focusableElements[this._focusableElements.length - 1].focus();
      }
    }
  }, {
    key: "lock",
    value: function lock(lockedSelector) {
      var startFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      this.unlock();
      this._lockedSelector = lockedSelector;
      var lockedElement = document.querySelector(this._lockedSelector);

      if (!lockedElement) {
        return;
      }

      this._focusableElements = lockedElement.querySelectorAll(this._selectors);
      this._endElement = document.activeElement;

      var startElement = lockedElement.querySelector('[data-focus]') || this._focusableElements[0];

      if (this._endElement) {
        this._endElement.blur();
      }

      if (startElement && startFocus) {
        startElement.focus();
      }

      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "unlock",
    value: function unlock() {
      var returnFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      if (this._endElement && returnFocus) {
        this._endElement.focus();
      }

      this._lockedSelector = null;
      this._focusableElements = null;
      this._endElement = null;
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }]);

  return FocusLock;
}();
window.focusLock = new FocusLock();

/***/ }),

/***/ "./js/utils/ios-checker.js":
/*!*********************************!*\
  !*** ./js/utils/ios-checker.js ***!
  \*********************************/
/*! exports provided: iosChecker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosChecker", function() { return iosChecker; });
var iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform) // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

/***/ }),

/***/ "./js/utils/ios-vh-fix.js":
/*!********************************!*\
  !*** ./js/utils/ios-vh-fix.js ***!
  \********************************/
/*! exports provided: iosVhFix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosVhFix", function() { return iosVhFix; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");


var iosVhFix = function iosVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if (Object(_ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"])()) {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      });
    }
  }
};



/***/ }),

/***/ "./js/utils/render.js":
/*!****************************!*\
  !*** ./js/utils/render.js ***!
  \****************************/
/*! exports provided: createElement, renderElement, removeChildrenElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createElement", function() { return createElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "renderElement", function() { return renderElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeChildrenElement", function() { return removeChildrenElement; });
var createElement = function createElement(template) {
  var newElement = document.createElement('div');
  newElement.innerHTML = template;
  return newElement.firstChild;
};
var renderElement = function renderElement(container, component) {
  var place = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'beforeend';

  switch (place) {
    case 'prepend':
      container.prepend(component);
      break;

    case 'afterend':
      container.after(component);
      break;

    case 'beforeend':
      container.append(component);
      break;
  }
};
var removeChildrenElement = function removeChildrenElement(el) {
  while (el.firstChild) {
    el.removeChild(el.firstChild);
  }
};

/***/ }),

/***/ "./js/utils/requestHTTP.js":
/*!*********************************!*\
  !*** ./js/utils/requestHTTP.js ***!
  \*********************************/
/*! exports provided: requestHTTP */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "requestHTTP", function() { return requestHTTP; });
var requestHTTP = function requestHTTP(url, onSuccess, onError) {
  return fetch(url).then(function (res) {
    if (!res.ok) {
      throw new Error(res.status);
    }

    return res.json();
  }).then(function (data) {
    if (onSuccess) {
      onSuccess(data);
    }

    return data;
  }).catch(function (err) {
    if (onError) {
      onError(err);
    } else {
      console.error(err); // eslint-disable-line no-console
    }
  });
};

/***/ }),

/***/ "./js/utils/scroll-lock.js":
/*!*********************************!*\
  !*** ./js/utils/scroll-lock.js ***!
  \*********************************/
/*! exports provided: ScrollLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollLock", function() { return ScrollLock; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }


var ScrollLock = /*#__PURE__*/function () {
  function ScrollLock() {
    _classCallCheck(this, ScrollLock);

    this._iosChecker = _ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"];
    this._lockClass = this._iosChecker() ? 'scroll-lock-ios' : 'scroll-lock';
    this._scrollTop = null;
    this._fixedBlockElements = document.querySelectorAll('[data-fix-block]');
  }

  _createClass(ScrollLock, [{
    key: "_getScrollbarWidth",
    value: function _getScrollbarWidth() {
      return window.innerWidth - document.documentElement.clientWidth;
    }
  }, {
    key: "_getBodyScrollTop",
    value: function _getBodyScrollTop() {
      return self.pageYOffset || document.documentElement && document.documentElement.ScrollTop || document.body && document.body.scrollTop;
    }
  }, {
    key: "disableScrolling",
    value: function disableScrolling() {
      var _this = this;

      this._scrollTop = document.body.dataset.scroll = document.body.dataset.scroll ? document.body.dataset.scroll : this._getBodyScrollTop();

      if (this._getScrollbarWidth()) {
        document.body.style.paddingRight = "".concat(this._getScrollbarWidth(), "px");

        this._fixedBlockElements.forEach(function (block) {
          block.style.paddingRight = "".concat(_this._getScrollbarWidth(), "px");
        });
      }

      document.body.style.top = "-".concat(this._scrollTop, "px");
      document.body.classList.add(this._lockClass);
    }
  }, {
    key: "enableScrolling",
    value: function enableScrolling() {
      document.body.classList.remove(this._lockClass);
      window.scrollTo(0, +document.body.dataset.scroll);
      document.body.style.paddingRight = null;
      document.body.style.top = null;

      this._fixedBlockElements.forEach(function (block) {
        block.style.paddingRight = null;
      });

      document.body.removeAttribute('data-scroll');
      this._scrollTop = null;
    }
  }]);

  return ScrollLock;
}();
window.scrollLock = new ScrollLock();

/***/ }),

/***/ "./js/utils/switch-slide-hover-mouse.js":
/*!**********************************************!*\
  !*** ./js/utils/switch-slide-hover-mouse.js ***!
  \**********************************************/
/*! exports provided: switchSlideHoverMouse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "switchSlideHoverMouse", function() { return switchSlideHoverMouse; });
// переключает слайд, эмулирует клик по булету слайдера
var switchSlideHoverMouse = function switchSlideHoverMouse(swipers) {
  var grids = document.querySelectorAll('[data-grid-hover="parrent"]');

  if (!grids.length) {
    return;
  }

  swipers.forEach(function (swiper) {
    var gridItem = swiper.querySelectorAll('[data-grid-hover="item"]');
    var interval;
    gridItem.forEach(function (el, i) {
      el.addEventListener('mouseover', function () {
        clearInterval(interval); // eslint-disable-next-line max-nested-callbacks

        interval = setInterval(function () {
          swiper.swiperInstance.slideTo(i);
        }, 100);
      });
    }); // в создании swaiper нужно записать: pagination: {clickable: true, el: '.swiper-pagination'}
  });
};



/***/ }),

/***/ "./js/vendor/fancybox.js":
/*!*******************************!*\
  !*** ./js/vendor/fancybox.js ***!
  \*******************************/
/*! exports provided: Carousel, Fancybox, Panzoom */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Carousel", function() { return y; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Fancybox", function() { return F; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Panzoom", function() { return d; });
function _get() { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e36) { throw _e36; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e37) { didErr = true; err = _e37; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

// @fancyapps/ui/Fancybox v4.0.26
var t = function t(_t) {
  return "object" == _typeof(_t) && null !== _t && _t.constructor === Object && "[object Object]" === Object.prototype.toString.call(_t);
},
    e = function e() {
  var s = !1;

  for (var _len = arguments.length, i = new Array(_len), _key = 0; _key < _len; _key++) {
    i[_key] = arguments[_key];
  }

  "boolean" == typeof i[0] && (s = i.shift());
  var o = i[0];
  if (!o || "object" != _typeof(o)) throw new Error("extendee must be an object");
  var n = i.slice(1),
      a = n.length;

  for (var _i = 0; _i < a; _i++) {
    var _a = n[_i];

    for (var _i2 in _a) {
      if (_a.hasOwnProperty(_i2)) {
        var _n = _a[_i2];

        if (s && (Array.isArray(_n) || t(_n))) {
          var _t2 = Array.isArray(_n) ? [] : {};

          o[_i2] = e(!0, o.hasOwnProperty(_i2) ? o[_i2] : _t2, _n);
        } else o[_i2] = _n;
      }
    }
  }

  return o;
},
    i = function i(t) {
  var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1e4;
  return t = parseFloat(t) || 0, Math.round((t + Number.EPSILON) * e) / e;
},
    s = function s(t) {
  return !!(t && "object" == _typeof(t) && t instanceof Element && t !== document.body) && !t.__Panzoom && (function (t) {
    var e = getComputedStyle(t)["overflow-y"],
        i = getComputedStyle(t)["overflow-x"],
        s = ("scroll" === e || "auto" === e) && Math.abs(t.scrollHeight - t.clientHeight) > 1,
        o = ("scroll" === i || "auto" === i) && Math.abs(t.scrollWidth - t.clientWidth) > 1;
    return s || o;
  }(t) ? t : s(t.parentNode));
},
    o = "undefined" != typeof window && window.ResizeObserver || /*#__PURE__*/function () {
  function _class(t) {
    _classCallCheck(this, _class);

    this.observables = [], this.boundCheck = this.check.bind(this), this.boundCheck(), this.callback = t;
  }

  _createClass(_class, [{
    key: "observe",
    value: function observe(t) {
      if (this.observables.some(function (e) {
        return e.el === t;
      })) return;
      var e = {
        el: t,
        size: {
          height: t.clientHeight,
          width: t.clientWidth
        }
      };
      this.observables.push(e);
    }
  }, {
    key: "unobserve",
    value: function unobserve(t) {
      this.observables = this.observables.filter(function (e) {
        return e.el !== t;
      });
    }
  }, {
    key: "disconnect",
    value: function disconnect() {
      this.observables = [];
    }
  }, {
    key: "check",
    value: function check() {
      var t = this.observables.filter(function (t) {
        var e = t.el.clientHeight,
            i = t.el.clientWidth;
        if (t.size.height !== e || t.size.width !== i) return t.size.height = e, t.size.width = i, !0;
      }).map(function (t) {
        return t.el;
      });
      t.length > 0 && this.callback(t), window.requestAnimationFrame(this.boundCheck);
    }
  }]);

  return _class;
}();

var n = /*#__PURE__*/_createClass(function n(t) {
  _classCallCheck(this, n);

  this.id = self.Touch && t instanceof Touch ? t.identifier : -1, this.pageX = t.pageX, this.pageY = t.pageY, this.clientX = t.clientX, this.clientY = t.clientY;
});

var a = function a(t, e) {
  return e ? Math.sqrt(Math.pow(e.clientX - t.clientX, 2) + Math.pow(e.clientY - t.clientY, 2)) : 0;
},
    r = function r(t, e) {
  return e ? {
    clientX: (t.clientX + e.clientX) / 2,
    clientY: (t.clientY + e.clientY) / 2
  } : t;
};

var h = /*#__PURE__*/function () {
  function h(t) {
    var _this = this;

    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref$start = _ref.start,
        e = _ref$start === void 0 ? function () {
      return !0;
    } : _ref$start,
        _ref$move = _ref.move,
        i = _ref$move === void 0 ? function () {} : _ref$move,
        _ref$end = _ref.end,
        s = _ref$end === void 0 ? function () {} : _ref$end;

    _classCallCheck(this, h);

    this._element = t, this.startPointers = [], this.currentPointers = [], this._pointerStart = function (t) {
      if (t.buttons > 0 && 0 !== t.button) return;
      var e = new n(t);
      _this.currentPointers.some(function (t) {
        return t.id === e.id;
      }) || _this._triggerPointerStart(e, t) && (window.addEventListener("mousemove", _this._move), window.addEventListener("mouseup", _this._pointerEnd));
    }, this._touchStart = function (t) {
      for (var _i3 = 0, _Array$from = Array.from(t.changedTouches || []); _i3 < _Array$from.length; _i3++) {
        var _e = _Array$from[_i3];

        _this._triggerPointerStart(new n(_e), t);
      }
    }, this._move = function (t) {
      var e = _this.currentPointers.slice(),
          i = function (t) {
        return "changedTouches" in t;
      }(t) ? Array.from(t.changedTouches).map(function (t) {
        return new n(t);
      }) : [new n(t)];

      var _iterator = _createForOfIteratorHelper(i),
          _step;

      try {
        var _loop = function _loop() {
          var t = _step.value;

          var e = _this.currentPointers.findIndex(function (e) {
            return e.id === t.id;
          });

          e < 0 || (_this.currentPointers[e] = t);
        };

        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          _loop();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      _this._moveCallback(e, _this.currentPointers.slice(), t);
    }, this._triggerPointerEnd = function (t, e) {
      var i = _this.currentPointers.findIndex(function (e) {
        return e.id === t.id;
      });

      return !(i < 0) && (_this.currentPointers.splice(i, 1), _this.startPointers.splice(i, 1), _this._endCallback(t, e), !0);
    }, this._pointerEnd = function (t) {
      t.buttons > 0 && 0 !== t.button || _this._triggerPointerEnd(new n(t), t) && (window.removeEventListener("mousemove", _this._move, {
        passive: !1
      }), window.removeEventListener("mouseup", _this._pointerEnd, {
        passive: !1
      }));
    }, this._touchEnd = function (t) {
      for (var _i4 = 0, _Array$from2 = Array.from(t.changedTouches || []); _i4 < _Array$from2.length; _i4++) {
        var _e2 = _Array$from2[_i4];

        _this._triggerPointerEnd(new n(_e2), t);
      }
    }, this._startCallback = e, this._moveCallback = i, this._endCallback = s, this._element.addEventListener("mousedown", this._pointerStart, {
      passive: !1
    }), this._element.addEventListener("touchstart", this._touchStart, {
      passive: !1
    }), this._element.addEventListener("touchmove", this._move, {
      passive: !1
    }), this._element.addEventListener("touchend", this._touchEnd), this._element.addEventListener("touchcancel", this._touchEnd);
  }

  _createClass(h, [{
    key: "stop",
    value: function stop() {
      this._element.removeEventListener("mousedown", this._pointerStart, {
        passive: !1
      }), this._element.removeEventListener("touchstart", this._touchStart, {
        passive: !1
      }), this._element.removeEventListener("touchmove", this._move, {
        passive: !1
      }), this._element.removeEventListener("touchend", this._touchEnd), this._element.removeEventListener("touchcancel", this._touchEnd), window.removeEventListener("mousemove", this._move), window.removeEventListener("mouseup", this._pointerEnd);
    }
  }, {
    key: "_triggerPointerStart",
    value: function _triggerPointerStart(t, e) {
      return !!this._startCallback(t, e) && (this.currentPointers.push(t), this.startPointers.push(t), !0);
    }
  }]);

  return h;
}();

var l = /*#__PURE__*/function () {
  function l() {
    var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, l);

    this.options = e(!0, {}, t), this.plugins = [], this.events = {};

    for (var _i5 = 0, _arr = ["on", "once"]; _i5 < _arr.length; _i5++) {
      var _t3 = _arr[_i5];

      for (var _i6 = 0, _Object$entries = Object.entries(this.options[_t3] || {}); _i6 < _Object$entries.length; _i6++) {
        var _e3 = _Object$entries[_i6];

        this[_t3].apply(this, _toConsumableArray(_e3));
      }
    }
  }

  _createClass(l, [{
    key: "option",
    value: function option(t, e) {
      var _s;

      t = String(t);
      var s = (o = t, n = this.options, o.split(".").reduce(function (t, e) {
        return t && t[e];
      }, n));
      var o, n;

      for (var _len2 = arguments.length, i = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        i[_key2 - 2] = arguments[_key2];
      }

      return "function" == typeof s && (s = (_s = s).call.apply(_s, [this, this].concat(i))), void 0 === s ? e : s;
    }
  }, {
    key: "localize",
    value: function localize(t) {
      var _this2 = this;

      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
      return t = (t = String(t).replace(/\{\{(\w+).?(\w+)?\}\}/g, function (t, i, s) {
        var o = "";
        s ? o = _this2.option("".concat(i[0] + i.toLowerCase().substring(1), ".l10n.").concat(s)) : i && (o = _this2.option("l10n.".concat(i))), o || (o = t);

        for (var _t4 = 0; _t4 < e.length; _t4++) {
          o = o.split(e[_t4][0]).join(e[_t4][1]);
        }

        return o;
      })).replace(/\{\{(.*)\}\}/, function (t, e) {
        return e;
      });
    }
  }, {
    key: "on",
    value: function on(e, i) {
      var _this3 = this;

      if (t(e)) {
        for (var _i7 = 0, _Object$entries2 = Object.entries(e); _i7 < _Object$entries2.length; _i7++) {
          var _t5 = _Object$entries2[_i7];
          this.on.apply(this, _toConsumableArray(_t5));
        }

        return this;
      }

      return String(e).split(" ").forEach(function (t) {
        var e = _this3.events[t] = _this3.events[t] || [];
        -1 == e.indexOf(i) && e.push(i);
      }), this;
    }
  }, {
    key: "once",
    value: function once(e, i) {
      var _this4 = this;

      if (t(e)) {
        for (var _i8 = 0, _Object$entries3 = Object.entries(e); _i8 < _Object$entries3.length; _i8++) {
          var _t6 = _Object$entries3[_i8];
          this.once.apply(this, _toConsumableArray(_t6));
        }

        return this;
      }

      return String(e).split(" ").forEach(function (t) {
        var e = function e() {
          for (var _len3 = arguments.length, s = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            s[_key3] = arguments[_key3];
          }

          _this4.off(t, e), i.call.apply(i, [_this4, _this4].concat(s));
        };

        e._ = i, _this4.on(t, e);
      }), this;
    }
  }, {
    key: "off",
    value: function off(e, i) {
      var _this5 = this;

      if (!t(e)) return e.split(" ").forEach(function (t) {
        var e = _this5.events[t];
        if (!e || !e.length) return _this5;
        var s = -1;

        for (var _t7 = 0, _o = e.length; _t7 < _o; _t7++) {
          var _o2 = e[_t7];

          if (_o2 && (_o2 === i || _o2._ === i)) {
            s = _t7;
            break;
          }
        }

        -1 != s && e.splice(s, 1);
      }), this;

      for (var _i9 = 0, _Object$entries4 = Object.entries(e); _i9 < _Object$entries4.length; _i9++) {
        var _t8 = _Object$entries4[_i9];
        this.off.apply(this, _toConsumableArray(_t8));
      }
    }
  }, {
    key: "trigger",
    value: function trigger(t) {
      for (var _len4 = arguments.length, e = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
        e[_key4 - 1] = arguments[_key4];
      }

      var _iterator2 = _createForOfIteratorHelper(_toConsumableArray(this.events[t] || []).slice()),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var _i10 = _step2.value;
          if (_i10 && !1 === _i10.call.apply(_i10, [this, this].concat(e))) return !1;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }

      var _iterator3 = _createForOfIteratorHelper(_toConsumableArray(this.events["*"] || []).slice()),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var _i11 = _step3.value;
          if (_i11 && !1 === _i11.call.apply(_i11, [this, t, this].concat(e))) return !1;
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }

      return !0;
    }
  }, {
    key: "attachPlugins",
    value: function attachPlugins(t) {
      var i = {};

      for (var _i12 = 0, _Object$entries5 = Object.entries(t || {}); _i12 < _Object$entries5.length; _i12++) {
        var _Object$entries5$_i = _slicedToArray(_Object$entries5[_i12], 2),
            _s2 = _Object$entries5$_i[0],
            _o3 = _Object$entries5$_i[1];

        !1 === this.options[_s2] || this.plugins[_s2] || (this.options[_s2] = e({}, _o3.defaults || {}, this.options[_s2]), i[_s2] = new _o3(this));
      }

      for (var _i13 = 0, _Object$entries6 = Object.entries(i); _i13 < _Object$entries6.length; _i13++) {
        var _Object$entries6$_i = _slicedToArray(_Object$entries6[_i13], 2),
            _t9 = _Object$entries6$_i[0],
            _e4 = _Object$entries6$_i[1];

        _e4.attach(this);
      }

      return this.plugins = Object.assign({}, this.plugins, i), this;
    }
  }, {
    key: "detachPlugins",
    value: function detachPlugins() {
      for (var _t10 in this.plugins) {
        var _e5 = void 0;

        (_e5 = this.plugins[_t10]) && "function" == typeof _e5.detach && _e5.detach(this);
      }

      return this.plugins = {}, this;
    }
  }]);

  return l;
}();

var c = {
  touch: !0,
  zoom: !0,
  pinchToZoom: !0,
  panOnlyZoomed: !1,
  lockAxis: !1,
  friction: 0.64,
  decelFriction: 0.88,
  zoomFriction: 0.74,
  bounceForce: 0.2,
  baseScale: 1,
  minScale: 1,
  maxScale: 2,
  step: 0.5,
  textSelection: !1,
  click: "toggleZoom",
  wheel: "zoom",
  wheelFactor: 42,
  wheelLimit: 5,
  draggableClass: "is-draggable",
  draggingClass: "is-dragging",
  ratio: 1
};

var d = /*#__PURE__*/function (_l) {
  _inherits(d, _l);

  var _super = _createSuper(d);

  function d(t) {
    var _this6;

    var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, d);

    _this6 = _super.call(this, e(!0, {}, c, i)), _this6.state = "init", _this6.$container = t;

    for (var _i14 = 0, _arr2 = ["onLoad", "onWheel", "onClick"]; _i14 < _arr2.length; _i14++) {
      var _t11 = _arr2[_i14];
      _this6[_t11] = _this6[_t11].bind(_assertThisInitialized(_this6));
    }

    _this6.initLayout(), _this6.resetValues(), _this6.attachPlugins(d.Plugins), _this6.trigger("init"), _this6.updateMetrics(), _this6.attachEvents(), _this6.trigger("ready"), !1 === _this6.option("centerOnStart") ? _this6.state = "ready" : _this6.panTo({
      friction: 0
    }), t.__Panzoom = _assertThisInitialized(_this6);
    return _this6;
  }

  _createClass(d, [{
    key: "initLayout",
    value: function initLayout() {
      var _i15;

      var t = this.$container;
      if (!(t instanceof HTMLElement)) throw new Error("Panzoom: Container not found");
      var e = this.option("content") || t.querySelector(".panzoom__content");
      if (!e) throw new Error("Panzoom: Content not found");
      this.$content = e;
      var i = this.option("viewport") || t.querySelector(".panzoom__viewport");
      i || !1 === this.option("wrapInner") || (i = document.createElement("div"), i.classList.add("panzoom__viewport"), (_i15 = i).append.apply(_i15, _toConsumableArray(t.childNodes)), t.appendChild(i)), this.$viewport = i || e.parentNode;
    }
  }, {
    key: "resetValues",
    value: function resetValues() {
      this.updateRate = this.option("updateRate", /iPhone|iPad|iPod|Android/i.test(navigator.userAgent) ? 250 : 24), this.container = {
        width: 0,
        height: 0
      }, this.viewport = {
        width: 0,
        height: 0
      }, this.content = {
        origWidth: 0,
        origHeight: 0,
        width: 0,
        height: 0,
        x: this.option("x", 0),
        y: this.option("y", 0),
        scale: this.option("baseScale")
      }, this.transform = {
        x: 0,
        y: 0,
        scale: 1
      }, this.resetDragPosition();
    }
  }, {
    key: "onLoad",
    value: function onLoad(t) {
      this.updateMetrics(), this.panTo({
        scale: this.option("baseScale"),
        friction: 0
      }), this.trigger("load", t);
    }
  }, {
    key: "onClick",
    value: function onClick(t) {
      if (t.defaultPrevented) return;
      if (this.option("textSelection") && window.getSelection().toString().length) return void t.stopPropagation();
      var e = this.$content.getClientRects()[0];
      if ("ready" !== this.state && (this.dragPosition.midPoint || Math.abs(e.top - this.dragStart.rect.top) > 1 || Math.abs(e.left - this.dragStart.rect.left) > 1)) return t.preventDefault(), void t.stopPropagation();
      !1 !== this.trigger("click", t) && this.option("zoom") && "toggleZoom" === this.option("click") && (t.preventDefault(), t.stopPropagation(), this.zoomWithClick(t));
    }
  }, {
    key: "onWheel",
    value: function onWheel(t) {
      !1 !== this.trigger("wheel", t) && this.option("zoom") && this.option("wheel") && this.zoomWithWheel(t);
    }
  }, {
    key: "zoomWithWheel",
    value: function zoomWithWheel(t) {
      void 0 === this.changedDelta && (this.changedDelta = 0);
      var e = Math.max(-1, Math.min(1, -t.deltaY || -t.deltaX || t.wheelDelta || -t.detail)),
          i = this.content.scale;
      var s = i * (100 + e * this.option("wheelFactor")) / 100;
      if (e < 0 && Math.abs(i - this.option("minScale")) < 0.01 || e > 0 && Math.abs(i - this.option("maxScale")) < 0.01 ? (this.changedDelta += Math.abs(e), s = i) : (this.changedDelta = 0, s = Math.max(Math.min(s, this.option("maxScale")), this.option("minScale"))), this.changedDelta > this.option("wheelLimit")) return;
      if (t.preventDefault(), s === i) return;
      var o = this.$content.getBoundingClientRect(),
          n = t.clientX - o.left,
          a = t.clientY - o.top;
      this.zoomTo(s, {
        x: n,
        y: a
      });
    }
  }, {
    key: "zoomWithClick",
    value: function zoomWithClick(t) {
      var e = this.$content.getClientRects()[0],
          i = t.clientX - e.left,
          s = t.clientY - e.top;
      this.toggleZoom({
        x: i,
        y: s
      });
    }
  }, {
    key: "attachEvents",
    value: function attachEvents() {
      var _this7 = this;

      this.$content.addEventListener("load", this.onLoad), this.$container.addEventListener("wheel", this.onWheel, {
        passive: !1
      }), this.$container.addEventListener("click", this.onClick, {
        passive: !1
      }), this.initObserver();
      var t = new h(this.$container, {
        start: function start(e, i) {
          if (!_this7.option("touch")) return !1;
          if (_this7.velocity.scale < 0) return !1;
          var o = i.composedPath()[0];

          if (!t.currentPointers.length) {
            if (-1 !== ["BUTTON", "TEXTAREA", "OPTION", "INPUT", "SELECT", "VIDEO"].indexOf(o.nodeName)) return !1;
            if (_this7.option("textSelection") && function (t, e, i) {
              var s = t.childNodes,
                  o = document.createRange();

              for (var _t12 = 0; _t12 < s.length; _t12++) {
                var _n2 = s[_t12];
                if (_n2.nodeType !== Node.TEXT_NODE) continue;
                o.selectNodeContents(_n2);

                var _a2 = o.getBoundingClientRect();

                if (e >= _a2.left && i >= _a2.top && e <= _a2.right && i <= _a2.bottom) return _n2;
              }

              return !1;
            }(o, e.clientX, e.clientY)) return !1;
          }

          return !s(o) && !1 !== _this7.trigger("touchStart", i) && ("mousedown" === i.type && i.preventDefault(), _this7.state = "pointerdown", _this7.resetDragPosition(), _this7.dragPosition.midPoint = null, _this7.dragPosition.time = Date.now(), !0);
        },
        move: function move(e, i, s) {
          if ("pointerdown" !== _this7.state) return;
          if (!1 === _this7.trigger("touchMove", s)) return void s.preventDefault();
          if (i.length < 2 && !0 === _this7.option("panOnlyZoomed") && _this7.content.width <= _this7.viewport.width && _this7.content.height <= _this7.viewport.height && _this7.transform.scale <= _this7.option("baseScale")) return;
          if (i.length > 1 && (!_this7.option("zoom") || !1 === _this7.option("pinchToZoom"))) return;

          var o = r(e[0], e[1]),
              n = r(i[0], i[1]),
              h = n.clientX - o.clientX,
              l = n.clientY - o.clientY,
              c = a(e[0], e[1]),
              _d2 = a(i[0], i[1]),
              u = c && _d2 ? _d2 / c : 1;

          _this7.dragOffset.x += h, _this7.dragOffset.y += l, _this7.dragOffset.scale *= u, _this7.dragOffset.time = Date.now() - _this7.dragPosition.time;

          var f = 1 === _this7.dragStart.scale && _this7.option("lockAxis");

          if (f && !_this7.lockAxis) {
            if (Math.abs(_this7.dragOffset.x) < 6 && Math.abs(_this7.dragOffset.y) < 6) return void s.preventDefault();

            var _t13 = Math.abs(180 * Math.atan2(_this7.dragOffset.y, _this7.dragOffset.x) / Math.PI);

            _this7.lockAxis = _t13 > 45 && _t13 < 135 ? "y" : "x";
          }

          if ("xy" === f || "y" !== _this7.lockAxis) {
            if (s.preventDefault(), s.stopPropagation(), s.stopImmediatePropagation(), _this7.lockAxis && (_this7.dragOffset["x" === _this7.lockAxis ? "y" : "x"] = 0), _this7.$container.classList.add(_this7.option("draggingClass")), _this7.transform.scale === _this7.option("baseScale") && "y" === _this7.lockAxis || (_this7.dragPosition.x = _this7.dragStart.x + _this7.dragOffset.x), _this7.transform.scale === _this7.option("baseScale") && "x" === _this7.lockAxis || (_this7.dragPosition.y = _this7.dragStart.y + _this7.dragOffset.y), _this7.dragPosition.scale = _this7.dragStart.scale * _this7.dragOffset.scale, i.length > 1) {
              var _e6 = r(t.startPointers[0], t.startPointers[1]),
                  _i16 = _e6.clientX - _this7.dragStart.rect.x,
                  _s3 = _e6.clientY - _this7.dragStart.rect.y,
                  _this7$getZoomDelta = _this7.getZoomDelta(_this7.content.scale * _this7.dragOffset.scale, _i16, _s3),
                  _o4 = _this7$getZoomDelta.deltaX,
                  _a3 = _this7$getZoomDelta.deltaY;

              _this7.dragPosition.x -= _o4, _this7.dragPosition.y -= _a3, _this7.dragPosition.midPoint = n;
            } else _this7.setDragResistance();

            _this7.transform = {
              x: _this7.dragPosition.x,
              y: _this7.dragPosition.y,
              scale: _this7.dragPosition.scale
            }, _this7.startAnimation();
          }
        },
        end: function end(e, i) {
          if ("pointerdown" !== _this7.state) return;
          if (_this7._dragOffset = _objectSpread({}, _this7.dragOffset), t.currentPointers.length) return void _this7.resetDragPosition();
          if (_this7.state = "decel", _this7.friction = _this7.option("decelFriction"), _this7.recalculateTransform(), _this7.$container.classList.remove(_this7.option("draggingClass")), !1 === _this7.trigger("touchEnd", i)) return;
          if ("decel" !== _this7.state) return;

          var s = _this7.option("minScale");

          if (_this7.transform.scale < s) return void _this7.zoomTo(s, {
            friction: 0.64
          });

          var o = _this7.option("maxScale");

          if (_this7.transform.scale - o > 0.01) {
            var _t14 = _this7.dragPosition.midPoint || e,
                _i17 = _this7.$content.getClientRects()[0];

            _this7.zoomTo(o, {
              friction: 0.64,
              x: _t14.clientX - _i17.left,
              y: _t14.clientY - _i17.top
            });
          } else ;
        }
      });
      this.pointerTracker = t;
    }
  }, {
    key: "initObserver",
    value: function initObserver() {
      var _this8 = this;

      this.resizeObserver || (this.resizeObserver = new o(function () {
        _this8.updateTimer || (_this8.updateTimer = setTimeout(function () {
          var t = _this8.$container.getBoundingClientRect();

          t.width && t.height ? ((Math.abs(t.width - _this8.container.width) > 1 || Math.abs(t.height - _this8.container.height) > 1) && (_this8.isAnimating() && _this8.endAnimation(!0), _this8.updateMetrics(), _this8.panTo({
            x: _this8.content.x,
            y: _this8.content.y,
            scale: _this8.option("baseScale"),
            friction: 0
          })), _this8.updateTimer = null) : _this8.updateTimer = null;
        }, _this8.updateRate));
      }), this.resizeObserver.observe(this.$container));
    }
  }, {
    key: "resetDragPosition",
    value: function resetDragPosition() {
      this.lockAxis = null, this.friction = this.option("friction"), this.velocity = {
        x: 0,
        y: 0,
        scale: 0
      };
      var _this$content = this.content,
          t = _this$content.x,
          e = _this$content.y,
          i = _this$content.scale;
      this.dragStart = {
        rect: this.$content.getBoundingClientRect(),
        x: t,
        y: e,
        scale: i
      }, this.dragPosition = _objectSpread(_objectSpread({}, this.dragPosition), {}, {
        x: t,
        y: e,
        scale: i
      }), this.dragOffset = {
        x: 0,
        y: 0,
        scale: 1,
        time: 0
      };
    }
  }, {
    key: "updateMetrics",
    value: function updateMetrics(t) {
      !0 !== t && this.trigger("beforeUpdate");
      var e = this.$container,
          s = this.$content,
          o = this.$viewport,
          n = s instanceof HTMLImageElement,
          a = this.option("zoom"),
          r = this.option("resizeParent", a);
      var h = this.option("width"),
          l = this.option("height"),
          c = h || (_d3 = s, Math.max(parseFloat(_d3.naturalWidth || 0), parseFloat(_d3.width && _d3.width.baseVal && _d3.width.baseVal.value || 0), parseFloat(_d3.offsetWidth || 0), parseFloat(_d3.scrollWidth || 0)));

      var _d3;

      var u = l || function (t) {
        return Math.max(parseFloat(t.naturalHeight || 0), parseFloat(t.height && t.height.baseVal && t.height.baseVal.value || 0), parseFloat(t.offsetHeight || 0), parseFloat(t.scrollHeight || 0));
      }(s);

      Object.assign(s.style, {
        width: h ? "".concat(h, "px") : "",
        height: l ? "".concat(l, "px") : "",
        maxWidth: "",
        maxHeight: ""
      }), r && Object.assign(o.style, {
        width: "",
        height: ""
      });
      var f = this.option("ratio");
      c = i(c * f), u = i(u * f), h = c, l = u;
      var g = s.getBoundingClientRect(),
          p = o.getBoundingClientRect(),
          m = o == e ? p : e.getBoundingClientRect();
      var y = Math.max(o.offsetWidth, i(p.width)),
          v = Math.max(o.offsetHeight, i(p.height)),
          b = window.getComputedStyle(o);

      if (y -= parseFloat(b.paddingLeft) + parseFloat(b.paddingRight), v -= parseFloat(b.paddingTop) + parseFloat(b.paddingBottom), this.viewport.width = y, this.viewport.height = v, a) {
        if (Math.abs(c - g.width) > 0.1 || Math.abs(u - g.height) > 0.1) {
          var _t15 = function (t, e, i, s) {
            var o = Math.min(i / t || 0, s / e);
            return {
              width: t * o || 0,
              height: e * o || 0
            };
          }(c, u, Math.min(c, g.width), Math.min(u, g.height));

          h = i(_t15.width), l = i(_t15.height);
        }

        Object.assign(s.style, {
          width: "".concat(h, "px"),
          height: "".concat(l, "px"),
          transform: ""
        });
      }

      if (r && (Object.assign(o.style, {
        width: "".concat(h, "px"),
        height: "".concat(l, "px")
      }), this.viewport = _objectSpread(_objectSpread({}, this.viewport), {}, {
        width: h,
        height: l
      })), n && a && "function" != typeof this.options.maxScale) {
        var _t16 = this.option("maxScale");

        this.options.maxScale = function () {
          return this.content.origWidth > 0 && this.content.fitWidth > 0 ? this.content.origWidth / this.content.fitWidth : _t16;
        };
      }

      this.content = _objectSpread(_objectSpread({}, this.content), {}, {
        origWidth: c,
        origHeight: u,
        fitWidth: h,
        fitHeight: l,
        width: h,
        height: l,
        scale: 1,
        isZoomable: a
      }), this.container = {
        width: m.width,
        height: m.height
      }, !0 !== t && this.trigger("afterUpdate");
    }
  }, {
    key: "zoomIn",
    value: function zoomIn(t) {
      this.zoomTo(this.content.scale + (t || this.option("step")));
    }
  }, {
    key: "zoomOut",
    value: function zoomOut(t) {
      this.zoomTo(this.content.scale - (t || this.option("step")));
    }
  }, {
    key: "toggleZoom",
    value: function toggleZoom() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var e = this.option("maxScale"),
          i = this.option("baseScale"),
          s = this.content.scale > i + 0.5 * (e - i) ? i : e;
      this.zoomTo(s, t);
    }
  }, {
    key: "zoomTo",
    value: function zoomTo() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.option("baseScale");

      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref2$x = _ref2.x,
          e = _ref2$x === void 0 ? null : _ref2$x,
          _ref2$y = _ref2.y,
          s = _ref2$y === void 0 ? null : _ref2$y;

      t = Math.max(Math.min(t, this.option("maxScale")), this.option("minScale"));
      var o = i(this.content.scale / (this.content.width / this.content.fitWidth), 1e7);
      null === e && (e = this.content.width * o * 0.5), null === s && (s = this.content.height * o * 0.5);

      var _this$getZoomDelta = this.getZoomDelta(t, e, s),
          n = _this$getZoomDelta.deltaX,
          a = _this$getZoomDelta.deltaY;

      e = this.content.x - n, s = this.content.y - a, this.panTo({
        x: e,
        y: s,
        scale: t,
        friction: this.option("zoomFriction")
      });
    }
  }, {
    key: "getZoomDelta",
    value: function getZoomDelta(t) {
      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      var s = this.content.fitWidth * this.content.scale,
          o = this.content.fitHeight * this.content.scale,
          n = e > 0 && s ? e / s : 0,
          a = i > 0 && o ? i / o : 0;
      return {
        deltaX: (this.content.fitWidth * t - s) * n,
        deltaY: (this.content.fitHeight * t - o) * a
      };
    }
  }, {
    key: "panTo",
    value: function panTo() {
      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref3$x = _ref3.x,
          t = _ref3$x === void 0 ? this.content.x : _ref3$x,
          _ref3$y = _ref3.y,
          e = _ref3$y === void 0 ? this.content.y : _ref3$y,
          i = _ref3.scale,
          _ref3$friction = _ref3.friction,
          s = _ref3$friction === void 0 ? this.option("friction") : _ref3$friction,
          _ref3$ignoreBounds = _ref3.ignoreBounds,
          o = _ref3$ignoreBounds === void 0 ? !1 : _ref3$ignoreBounds;

      if (i = i || this.content.scale || 1, !o) {
        var _this$getBounds = this.getBounds(i),
            _s4 = _this$getBounds.boundX,
            _o5 = _this$getBounds.boundY;

        _s4 && (t = Math.max(Math.min(t, _s4.to), _s4.from)), _o5 && (e = Math.max(Math.min(e, _o5.to), _o5.from));
      }

      this.friction = s, this.transform = _objectSpread(_objectSpread({}, this.transform), {}, {
        x: t,
        y: e,
        scale: i
      }), s ? (this.state = "panning", this.velocity = {
        x: (1 / this.friction - 1) * (t - this.content.x),
        y: (1 / this.friction - 1) * (e - this.content.y),
        scale: (1 / this.friction - 1) * (i - this.content.scale)
      }, this.startAnimation()) : this.endAnimation();
    }
  }, {
    key: "startAnimation",
    value: function startAnimation() {
      var _this9 = this;

      this.rAF ? cancelAnimationFrame(this.rAF) : this.trigger("startAnimation"), this.rAF = requestAnimationFrame(function () {
        return _this9.animate();
      });
    }
  }, {
    key: "animate",
    value: function animate() {
      var _this10 = this;

      if (this.setEdgeForce(), this.setDragForce(), this.velocity.x *= this.friction, this.velocity.y *= this.friction, this.velocity.scale *= this.friction, this.content.x += this.velocity.x, this.content.y += this.velocity.y, this.content.scale += this.velocity.scale, this.isAnimating()) this.setTransform();else if ("pointerdown" !== this.state) return void this.endAnimation();
      this.rAF = requestAnimationFrame(function () {
        return _this10.animate();
      });
    }
  }, {
    key: "getBounds",
    value: function getBounds(t) {
      var e = this.boundX,
          s = this.boundY;
      if (void 0 !== e && void 0 !== s) return {
        boundX: e,
        boundY: s
      };
      e = {
        from: 0,
        to: 0
      }, s = {
        from: 0,
        to: 0
      }, t = t || this.transform.scale;
      var o = this.content.fitWidth * t,
          n = this.content.fitHeight * t,
          a = this.viewport.width,
          r = this.viewport.height;

      if (o < a) {
        var _t17 = i(0.5 * (a - o));

        e.from = _t17, e.to = _t17;
      } else e.from = i(a - o);

      if (n < r) {
        var _t18 = 0.5 * (r - n);

        s.from = _t18, s.to = _t18;
      } else s.from = i(r - n);

      return {
        boundX: e,
        boundY: s
      };
    }
  }, {
    key: "setEdgeForce",
    value: function setEdgeForce() {
      if ("decel" !== this.state) return;

      var t = this.option("bounceForce"),
          _this$getBounds2 = this.getBounds(Math.max(this.transform.scale, this.content.scale)),
          e = _this$getBounds2.boundX,
          i = _this$getBounds2.boundY;

      var s, o, n, a;

      if (e && (s = this.content.x < e.from, o = this.content.x > e.to), i && (n = this.content.y < i.from, a = this.content.y > i.to), s || o) {
        var _i18 = ((s ? e.from : e.to) - this.content.x) * t;

        var _o6 = this.content.x + (this.velocity.x + _i18) / this.friction;

        _o6 >= e.from && _o6 <= e.to && (_i18 += this.velocity.x), this.velocity.x = _i18, this.recalculateTransform();
      }

      if (n || a) {
        var _e7 = ((n ? i.from : i.to) - this.content.y) * t;

        var _s5 = this.content.y + (_e7 + this.velocity.y) / this.friction;

        _s5 >= i.from && _s5 <= i.to && (_e7 += this.velocity.y), this.velocity.y = _e7, this.recalculateTransform();
      }
    }
  }, {
    key: "setDragResistance",
    value: function setDragResistance() {
      if ("pointerdown" !== this.state) return;

      var _this$getBounds3 = this.getBounds(this.dragPosition.scale),
          t = _this$getBounds3.boundX,
          e = _this$getBounds3.boundY;

      var i, s, o, n;

      if (t && (i = this.dragPosition.x < t.from, s = this.dragPosition.x > t.to), e && (o = this.dragPosition.y < e.from, n = this.dragPosition.y > e.to), (i || s) && (!i || !s)) {
        var _e8 = i ? t.from : t.to,
            _s6 = _e8 - this.dragPosition.x;

        this.dragPosition.x = _e8 - 0.3 * _s6;
      }

      if ((o || n) && (!o || !n)) {
        var _t19 = o ? e.from : e.to,
            _i19 = _t19 - this.dragPosition.y;

        this.dragPosition.y = _t19 - 0.3 * _i19;
      }
    }
  }, {
    key: "setDragForce",
    value: function setDragForce() {
      "pointerdown" === this.state && (this.velocity.x = this.dragPosition.x - this.content.x, this.velocity.y = this.dragPosition.y - this.content.y, this.velocity.scale = this.dragPosition.scale - this.content.scale);
    }
  }, {
    key: "recalculateTransform",
    value: function recalculateTransform() {
      this.transform.x = this.content.x + this.velocity.x / (1 / this.friction - 1), this.transform.y = this.content.y + this.velocity.y / (1 / this.friction - 1), this.transform.scale = this.content.scale + this.velocity.scale / (1 / this.friction - 1);
    }
  }, {
    key: "isAnimating",
    value: function isAnimating() {
      return !(!this.friction || !(Math.abs(this.velocity.x) > 0.05 || Math.abs(this.velocity.y) > 0.05 || Math.abs(this.velocity.scale) > 0.05));
    }
  }, {
    key: "setTransform",
    value: function setTransform(t) {
      var e, s, o;

      if (t ? (e = i(this.transform.x), s = i(this.transform.y), o = this.transform.scale, this.content = _objectSpread(_objectSpread({}, this.content), {}, {
        x: e,
        y: s,
        scale: o
      })) : (e = i(this.content.x), s = i(this.content.y), o = this.content.scale / (this.content.width / this.content.fitWidth), this.content = _objectSpread(_objectSpread({}, this.content), {}, {
        x: e,
        y: s
      })), this.trigger("beforeTransform"), e = i(this.content.x), s = i(this.content.y), t && this.option("zoom")) {
        var _t20, _n3;

        _t20 = i(this.content.fitWidth * o), _n3 = i(this.content.fitHeight * o), this.content.width = _t20, this.content.height = _n3, this.transform = _objectSpread(_objectSpread({}, this.transform), {}, {
          width: _t20,
          height: _n3,
          scale: o
        }), Object.assign(this.$content.style, {
          width: "".concat(_t20, "px"),
          height: "".concat(_n3, "px"),
          maxWidth: "none",
          maxHeight: "none",
          transform: "translate3d(".concat(e, "px, ").concat(s, "px, 0) scale(1)")
        });
      } else this.$content.style.transform = "translate3d(".concat(e, "px, ").concat(s, "px, 0) scale(").concat(o, ")");

      this.trigger("afterTransform");
    }
  }, {
    key: "endAnimation",
    value: function endAnimation(t) {
      cancelAnimationFrame(this.rAF), this.rAF = null, this.velocity = {
        x: 0,
        y: 0,
        scale: 0
      }, this.setTransform(!0), this.state = "ready", this.handleCursor(), !0 !== t && this.trigger("endAnimation");
    }
  }, {
    key: "handleCursor",
    value: function handleCursor() {
      var t = this.option("draggableClass");
      t && this.option("touch") && (1 == this.option("panOnlyZoomed") && this.content.width <= this.viewport.width && this.content.height <= this.viewport.height && this.transform.scale <= this.option("baseScale") ? this.$container.classList.remove(t) : this.$container.classList.add(t));
    }
  }, {
    key: "detachEvents",
    value: function detachEvents() {
      this.$content.removeEventListener("load", this.onLoad), this.$container.removeEventListener("wheel", this.onWheel, {
        passive: !1
      }), this.$container.removeEventListener("click", this.onClick, {
        passive: !1
      }), this.pointerTracker && (this.pointerTracker.stop(), this.pointerTracker = null), this.resizeObserver && (this.resizeObserver.disconnect(), this.resizeObserver = null);
    }
  }, {
    key: "destroy",
    value: function destroy() {
      "destroy" !== this.state && (this.state = "destroy", clearTimeout(this.updateTimer), this.updateTimer = null, cancelAnimationFrame(this.rAF), this.rAF = null, this.detachEvents(), this.detachPlugins(), this.resetDragPosition());
    }
  }]);

  return d;
}(l);

d.version = "4.0.26", d.Plugins = {};

var u = function u(t, e) {
  var i = 0;
  return function () {
    var o = new Date().getTime();
    if (!(o - i < e)) return i = o, t.apply(void 0, arguments);
  };
};

var f = /*#__PURE__*/function () {
  function f(t) {
    _classCallCheck(this, f);

    this.$container = null, this.$prev = null, this.$next = null, this.carousel = t, this.onRefresh = this.onRefresh.bind(this);
  }

  _createClass(f, [{
    key: "option",
    value: function option(t) {
      return this.carousel.option("Navigation.".concat(t));
    }
  }, {
    key: "createButton",
    value: function createButton(t) {
      var _e$classList,
          _this11 = this;

      var e = document.createElement("button");
      e.setAttribute("title", this.carousel.localize("{{".concat(t.toUpperCase(), "}}")));
      var i = this.option("classNames.button") + " " + this.option("classNames.".concat(t));
      return (_e$classList = e.classList).add.apply(_e$classList, _toConsumableArray(i.split(" "))), e.setAttribute("tabindex", "0"), e.innerHTML = this.carousel.localize(this.option("".concat(t, "Tpl"))), e.addEventListener("click", function (e) {
        e.preventDefault(), e.stopPropagation(), _this11.carousel["slide" + ("next" === t ? "Next" : "Prev")]();
      }), e;
    }
  }, {
    key: "build",
    value: function build() {
      var _this$$container$clas;

      this.$container || (this.$container = document.createElement("div"), (_this$$container$clas = this.$container.classList).add.apply(_this$$container$clas, _toConsumableArray(this.option("classNames.main").split(" "))), this.carousel.$container.appendChild(this.$container)), this.$next || (this.$next = this.createButton("next"), this.$container.appendChild(this.$next)), this.$prev || (this.$prev = this.createButton("prev"), this.$container.appendChild(this.$prev));
    }
  }, {
    key: "onRefresh",
    value: function onRefresh() {
      var t = this.carousel.pages.length;
      t <= 1 || t > 1 && this.carousel.elemDimWidth < this.carousel.wrapDimWidth && !Number.isInteger(this.carousel.option("slidesPerPage")) ? this.cleanup() : (this.build(), this.$prev.removeAttribute("disabled"), this.$next.removeAttribute("disabled"), this.carousel.option("infiniteX", this.carousel.option("infinite")) || (this.carousel.page <= 0 && this.$prev.setAttribute("disabled", ""), this.carousel.page >= t - 1 && this.$next.setAttribute("disabled", "")));
    }
  }, {
    key: "cleanup",
    value: function cleanup() {
      this.$prev && this.$prev.remove(), this.$prev = null, this.$next && this.$next.remove(), this.$next = null, this.$container && this.$container.remove(), this.$container = null;
    }
  }, {
    key: "attach",
    value: function attach() {
      this.carousel.on("refresh change", this.onRefresh);
    }
  }, {
    key: "detach",
    value: function detach() {
      this.carousel.off("refresh change", this.onRefresh), this.cleanup();
    }
  }]);

  return f;
}();

f.defaults = {
  prevTpl: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" tabindex="-1"><path d="M15 3l-9 9 9 9"/></svg>',
  nextTpl: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" tabindex="-1"><path d="M9 3l9 9-9 9"/></svg>',
  classNames: {
    main: "carousel__nav",
    button: "carousel__button",
    next: "is-next",
    prev: "is-prev"
  }
};

var g = /*#__PURE__*/function () {
  function g(t) {
    _classCallCheck(this, g);

    this.carousel = t, this.selectedIndex = null, this.friction = 0, this.onNavReady = this.onNavReady.bind(this), this.onNavClick = this.onNavClick.bind(this), this.onNavCreateSlide = this.onNavCreateSlide.bind(this), this.onTargetChange = this.onTargetChange.bind(this);
  }

  _createClass(g, [{
    key: "addAsTargetFor",
    value: function addAsTargetFor(t) {
      this.target = this.carousel, this.nav = t, this.attachEvents();
    }
  }, {
    key: "addAsNavFor",
    value: function addAsNavFor(t) {
      this.target = t, this.nav = this.carousel, this.attachEvents();
    }
  }, {
    key: "attachEvents",
    value: function attachEvents() {
      this.nav.options.initialSlide = this.target.options.initialPage, this.nav.on("ready", this.onNavReady), this.nav.on("createSlide", this.onNavCreateSlide), this.nav.on("Panzoom.click", this.onNavClick), this.target.on("change", this.onTargetChange), this.target.on("Panzoom.afterUpdate", this.onTargetChange);
    }
  }, {
    key: "onNavReady",
    value: function onNavReady() {
      this.onTargetChange(!0);
    }
  }, {
    key: "onNavClick",
    value: function onNavClick(t, e, i) {
      var s = i.target.closest(".carousel__slide");
      if (!s) return;
      i.stopPropagation();
      var o = parseInt(s.dataset.index, 10),
          n = this.target.findPageForSlide(o);
      this.target.page !== n && this.target.slideTo(n, {
        friction: this.friction
      }), this.markSelectedSlide(o);
    }
  }, {
    key: "onNavCreateSlide",
    value: function onNavCreateSlide(t, e) {
      e.index === this.selectedIndex && this.markSelectedSlide(e.index);
    }
  }, {
    key: "onTargetChange",
    value: function onTargetChange() {
      var t = this.target.pages[this.target.page].indexes[0],
          e = this.nav.findPageForSlide(t);
      this.nav.slideTo(e), this.markSelectedSlide(t);
    }
  }, {
    key: "markSelectedSlide",
    value: function markSelectedSlide(t) {
      this.selectedIndex = t, _toConsumableArray(this.nav.slides).filter(function (t) {
        return t.$el && t.$el.classList.remove("is-nav-selected");
      });
      var e = this.nav.slides[t];
      e && e.$el && e.$el.classList.add("is-nav-selected");
    }
  }, {
    key: "attach",
    value: function attach(t) {
      var e = t.options.Sync;
      (e.target || e.nav) && (e.target ? this.addAsNavFor(e.target) : e.nav && this.addAsTargetFor(e.nav), this.friction = e.friction);
    }
  }, {
    key: "detach",
    value: function detach() {
      this.nav && (this.nav.off("ready", this.onNavReady), this.nav.off("Panzoom.click", this.onNavClick), this.nav.off("createSlide", this.onNavCreateSlide)), this.target && (this.target.off("Panzoom.afterUpdate", this.onTargetChange), this.target.off("change", this.onTargetChange));
    }
  }]);

  return g;
}();

g.defaults = {
  friction: 0.92
};
var p = {
  Navigation: f,
  Dots: /*#__PURE__*/function () {
    function Dots(t) {
      _classCallCheck(this, Dots);

      this.carousel = t, this.$list = null, this.events = {
        change: this.onChange.bind(this),
        refresh: this.onRefresh.bind(this)
      };
    }

    _createClass(Dots, [{
      key: "buildList",
      value: function buildList() {
        var _this12 = this;

        if (this.carousel.pages.length < this.carousel.option("Dots.minSlideCount")) return;
        var t = document.createElement("ol");
        return t.classList.add("carousel__dots"), t.addEventListener("click", function (t) {
          if (!("page" in t.target.dataset)) return;
          t.preventDefault(), t.stopPropagation();
          var e = parseInt(t.target.dataset.page, 10),
              i = _this12.carousel;
          e !== i.page && (i.pages.length < 3 && i.option("infinite") ? i[0 == e ? "slidePrev" : "slideNext"]() : i.slideTo(e));
        }), this.$list = t, this.carousel.$container.appendChild(t), this.carousel.$container.classList.add("has-dots"), t;
      }
    }, {
      key: "removeList",
      value: function removeList() {
        this.$list && (this.$list.parentNode.removeChild(this.$list), this.$list = null), this.carousel.$container.classList.remove("has-dots");
      }
    }, {
      key: "rebuildDots",
      value: function rebuildDots() {
        var _this13 = this;

        var t = this.$list;
        var e = !!t,
            i = this.carousel.pages.length;
        if (i < 2) return void (e && this.removeList());
        e || (t = this.buildList());
        var s = this.$list.children.length;
        if (s > i) for (var _t21 = i; _t21 < s; _t21++) {
          this.$list.removeChild(this.$list.lastChild);
        } else {
          var _loop2 = function _loop2(_t22) {
            var e = document.createElement("li");
            e.classList.add("carousel__dot"), e.dataset.page = _t22, e.setAttribute("role", "button"), e.setAttribute("tabindex", "0"), e.setAttribute("title", _this13.carousel.localize("{{GOTO}}", [["%d", _t22 + 1]])), e.addEventListener("keydown", function (t) {
              var i = t.code;
              var s;
              "Enter" === i || "NumpadEnter" === i ? s = e : "ArrowRight" === i ? s = e.nextSibling : "ArrowLeft" === i && (s = e.previousSibling), s && s.click();
            }), _this13.$list.appendChild(e);
          };

          for (var _t22 = s; _t22 < i; _t22++) {
            _loop2(_t22);
          }

          this.setActiveDot();
        }
      }
    }, {
      key: "setActiveDot",
      value: function setActiveDot() {
        if (!this.$list) return;
        this.$list.childNodes.forEach(function (t) {
          t.classList.remove("is-selected");
        });
        var t = this.$list.childNodes[this.carousel.page];
        t && t.classList.add("is-selected");
      }
    }, {
      key: "onChange",
      value: function onChange() {
        this.setActiveDot();
      }
    }, {
      key: "onRefresh",
      value: function onRefresh() {
        this.rebuildDots();
      }
    }, {
      key: "attach",
      value: function attach() {
        this.carousel.on(this.events);
      }
    }, {
      key: "detach",
      value: function detach() {
        this.removeList(), this.carousel.off(this.events), this.carousel = null;
      }
    }]);

    return Dots;
  }(),
  Sync: g
};
var m = {
  slides: [],
  preload: 0,
  slidesPerPage: "auto",
  initialPage: null,
  initialSlide: null,
  friction: 0.92,
  center: !0,
  infinite: !0,
  fill: !0,
  dragFree: !1,
  prefix: "",
  classNames: {
    viewport: "carousel__viewport",
    track: "carousel__track",
    slide: "carousel__slide",
    slideSelected: "is-selected"
  },
  l10n: {
    NEXT: "Next slide",
    PREV: "Previous slide",
    GOTO: "Go to slide #%d"
  }
};

var y = /*#__PURE__*/function (_l2) {
  _inherits(y, _l2);

  var _super2 = _createSuper(y);

  function y(t) {
    var _this14;

    var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, y);

    if (_this14 = _super2.call(this, i = e(!0, {}, m, i)), _this14.state = "init", _this14.$container = t, !(_this14.$container instanceof HTMLElement)) throw new Error("No root element provided");
    _this14.slideNext = u(_this14.slideNext.bind(_assertThisInitialized(_this14)), 250), _this14.slidePrev = u(_this14.slidePrev.bind(_assertThisInitialized(_this14)), 250), _this14.init(), t.__Carousel = _assertThisInitialized(_this14);
    return _possibleConstructorReturn(_this14);
  }

  _createClass(y, [{
    key: "init",
    value: function init() {
      this.pages = [], this.page = this.pageIndex = null, this.prevPage = this.prevPageIndex = null, this.attachPlugins(y.Plugins), this.trigger("init"), this.initLayout(), this.initSlides(), this.updateMetrics(), this.$track && this.pages.length && (this.$track.style.transform = "translate3d(".concat(-1 * this.pages[this.page].left, "px, 0px, 0) scale(1)")), this.manageSlideVisiblity(), this.initPanzoom(), this.state = "ready", this.trigger("ready");
    }
  }, {
    key: "initLayout",
    value: function initLayout() {
      var _this$$viewport$class, _this$$viewport, _this$$track$classLis, _this$$track;

      var t = this.option("prefix"),
          e = this.option("classNames");
      this.$viewport = this.option("viewport") || this.$container.querySelector(".".concat(t).concat(e.viewport)), this.$viewport || (this.$viewport = document.createElement("div"), (_this$$viewport$class = this.$viewport.classList).add.apply(_this$$viewport$class, _toConsumableArray((t + e.viewport).split(" "))), (_this$$viewport = this.$viewport).append.apply(_this$$viewport, _toConsumableArray(this.$container.childNodes)), this.$container.appendChild(this.$viewport)), this.$track = this.option("track") || this.$container.querySelector(".".concat(t).concat(e.track)), this.$track || (this.$track = document.createElement("div"), (_this$$track$classLis = this.$track.classList).add.apply(_this$$track$classLis, _toConsumableArray((t + e.track).split(" "))), (_this$$track = this.$track).append.apply(_this$$track, _toConsumableArray(this.$viewport.childNodes)), this.$viewport.appendChild(this.$track));
    }
  }, {
    key: "initSlides",
    value: function initSlides() {
      var _this15 = this;

      this.slides = [];
      this.$viewport.querySelectorAll(".".concat(this.option("prefix")).concat(this.option("classNames.slide"))).forEach(function (t) {
        var e = {
          $el: t,
          isDom: !0
        };
        _this15.slides.push(e), _this15.trigger("createSlide", e, _this15.slides.length);
      }), Array.isArray(this.options.slides) && (this.slides = e(!0, _toConsumableArray(this.slides), this.options.slides));
    }
  }, {
    key: "updateMetrics",
    value: function updateMetrics() {
      var _this16 = this;

      var t,
          e = 0,
          s = [];
      this.slides.forEach(function (i, o) {
        var n = i.$el,
            a = i.isDom || !t ? _this16.getSlideMetrics(n) : t;
        i.index = o, i.width = a, i.left = e, t = a, e += a, s.push(o);
      });
      var o = Math.max(this.$track.offsetWidth, i(this.$track.getBoundingClientRect().width)),
          n = getComputedStyle(this.$track);
      o -= parseFloat(n.paddingLeft) + parseFloat(n.paddingRight), this.contentWidth = e, this.viewportWidth = o;
      var a = [],
          r = this.option("slidesPerPage");
      if (Number.isInteger(r) && e > o) for (var _t23 = 0; _t23 < this.slides.length; _t23 += r) {
        a.push({
          indexes: s.slice(_t23, _t23 + r),
          slides: this.slides.slice(_t23, _t23 + r)
        });
      } else {
        var _t24 = 0,
            _e9 = 0;

        for (var _i20 = 0; _i20 < this.slides.length; _i20 += 1) {
          var _s7 = this.slides[_i20];
          (!a.length || _e9 + _s7.width > o) && (a.push({
            indexes: [],
            slides: []
          }), _t24 = a.length - 1, _e9 = 0), _e9 += _s7.width, a[_t24].indexes.push(_i20), a[_t24].slides.push(_s7);
        }
      }
      var h = this.option("center"),
          l = this.option("fill");
      a.forEach(function (t, i) {
        t.index = i, t.width = t.slides.reduce(function (t, e) {
          return t + e.width;
        }, 0), t.left = t.slides[0].left, h && (t.left += 0.5 * (o - t.width) * -1), l && !_this16.option("infiniteX", _this16.option("infinite")) && e > o && (t.left = Math.max(t.left, 0), t.left = Math.min(t.left, e - o));
      });
      var c = [];
      var d;
      a.forEach(function (t) {
        var e = _objectSpread({}, t);

        d && e.left === d.left ? (d.width += e.width, d.slides = [].concat(_toConsumableArray(d.slides), _toConsumableArray(e.slides)), d.indexes = [].concat(_toConsumableArray(d.indexes), _toConsumableArray(e.indexes))) : (e.index = c.length, d = e, c.push(e));
      }), this.pages = c;
      var u = this.page;

      if (null === u) {
        var _t25 = this.option("initialSlide");

        u = null !== _t25 ? this.findPageForSlide(_t25) : parseInt(this.option("initialPage", 0), 10) || 0, c[u] || (u = c.length && u > c.length ? c[c.length - 1].index : 0), this.page = u, this.pageIndex = u;
      }

      this.updatePanzoom(), this.trigger("refresh");
    }
  }, {
    key: "getSlideMetrics",
    value: function getSlideMetrics(t) {
      if (!t) {
        var _t$classList, _t$classList2;

        var _e10 = this.slides[0];
        (t = document.createElement("div")).dataset.isTestEl = 1, t.style.visibility = "hidden", (_t$classList = t.classList).add.apply(_t$classList, _toConsumableArray((this.option("prefix") + this.option("classNames.slide")).split(" "))), _e10.customClass && (_t$classList2 = t.classList).add.apply(_t$classList2, _toConsumableArray(_e10.customClass.split(" "))), this.$track.prepend(t);
      }

      var e = Math.max(t.offsetWidth, i(t.getBoundingClientRect().width));
      var s = t.currentStyle || window.getComputedStyle(t);
      return e = e + (parseFloat(s.marginLeft) || 0) + (parseFloat(s.marginRight) || 0), t.dataset.isTestEl && t.remove(), e;
    }
  }, {
    key: "findPageForSlide",
    value: function findPageForSlide(t) {
      t = parseInt(t, 10) || 0;
      var e = this.pages.find(function (e) {
        return e.indexes.indexOf(t) > -1;
      });
      return e ? e.index : null;
    }
  }, {
    key: "slideNext",
    value: function slideNext() {
      this.slideTo(this.pageIndex + 1);
    }
  }, {
    key: "slidePrev",
    value: function slidePrev() {
      this.slideTo(this.pageIndex - 1);
    }
  }, {
    key: "slideTo",
    value: function slideTo(t) {
      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var _e$x = e.x,
          i = _e$x === void 0 ? -1 * this.setPage(t, !0) : _e$x,
          _e$y = e.y,
          s = _e$y === void 0 ? 0 : _e$y,
          _e$friction = e.friction,
          o = _e$friction === void 0 ? this.option("friction") : _e$friction;
      this.Panzoom.content.x === i && !this.Panzoom.velocity.x && o || (this.Panzoom.panTo({
        x: i,
        y: s,
        friction: o,
        ignoreBounds: !0
      }), "ready" === this.state && "ready" === this.Panzoom.state && this.trigger("settle"));
    }
  }, {
    key: "initPanzoom",
    value: function initPanzoom() {
      var _this17 = this;

      this.Panzoom && this.Panzoom.destroy();
      var t = e(!0, {}, {
        content: this.$track,
        wrapInner: !1,
        resizeParent: !1,
        zoom: !1,
        click: !1,
        lockAxis: "x",
        x: this.pages.length ? -1 * this.pages[this.page].left : 0,
        centerOnStart: !1,
        textSelection: function textSelection() {
          return _this17.option("textSelection", !1);
        },
        panOnlyZoomed: function panOnlyZoomed() {
          return this.content.width <= this.viewport.width;
        }
      }, this.option("Panzoom"));
      this.Panzoom = new d(this.$container, t), this.Panzoom.on({
        "*": function _(t) {
          for (var _len5 = arguments.length, e = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
            e[_key5 - 1] = arguments[_key5];
          }

          return _this17.trigger.apply(_this17, ["Panzoom.".concat(t)].concat(e));
        },
        afterUpdate: function afterUpdate() {
          _this17.updatePage();
        },
        beforeTransform: this.onBeforeTransform.bind(this),
        touchEnd: this.onTouchEnd.bind(this),
        endAnimation: function endAnimation() {
          _this17.trigger("settle");
        }
      }), this.updateMetrics(), this.manageSlideVisiblity();
    }
  }, {
    key: "updatePanzoom",
    value: function updatePanzoom() {
      this.Panzoom && (this.Panzoom.content = _objectSpread(_objectSpread({}, this.Panzoom.content), {}, {
        fitWidth: this.contentWidth,
        origWidth: this.contentWidth,
        width: this.contentWidth
      }), this.pages.length > 1 && this.option("infiniteX", this.option("infinite")) ? this.Panzoom.boundX = null : this.pages.length && (this.Panzoom.boundX = {
        from: -1 * this.pages[this.pages.length - 1].left,
        to: -1 * this.pages[0].left
      }), this.option("infiniteY", this.option("infinite")) ? this.Panzoom.boundY = null : this.Panzoom.boundY = {
        from: 0,
        to: 0
      }, this.Panzoom.handleCursor());
    }
  }, {
    key: "manageSlideVisiblity",
    value: function manageSlideVisiblity() {
      var _this18 = this;

      var t = this.contentWidth,
          e = this.viewportWidth;
      var i = this.Panzoom ? -1 * this.Panzoom.content.x : this.pages.length ? this.pages[this.page].left : 0;
      var s = this.option("preload"),
          o = this.option("infiniteX", this.option("infinite")),
          n = parseFloat(getComputedStyle(this.$viewport, null).getPropertyValue("padding-left")),
          a = parseFloat(getComputedStyle(this.$viewport, null).getPropertyValue("padding-right"));
      this.slides.forEach(function (r) {
        var h,
            l,
            c = 0;
        h = i - n, l = i + e + a, h -= s * (e + n + a), l += s * (e + n + a);
        var d = r.left + r.width > h && r.left < l;
        h = i + t - n, l = i + t + e + a, h -= s * (e + n + a);
        var u = o && r.left + r.width > h && r.left < l;
        h = i - t - n, l = i - t + e + a, h -= s * (e + n + a);
        var f = o && r.left + r.width > h && r.left < l;
        u || d || f ? (_this18.createSlideEl(r), d && (c = 0), u && (c = -1), f && (c = 1), r.left + r.width > i && r.left <= i + e + a && (c = 0)) : _this18.removeSlideEl(r), r.hasDiff = c;
      });
      var r = 0,
          h = 0;
      this.slides.forEach(function (e, i) {
        var s = 0;
        e.$el ? (i !== r || e.hasDiff ? s = h + e.hasDiff * t : h = 0, e.$el.style.left = Math.abs(s) > 0.1 ? "".concat(h + e.hasDiff * t, "px") : "", r++) : h += e.width;
      }), this.markSelectedSlides();
    }
  }, {
    key: "createSlideEl",
    value: function createSlideEl(t) {
      var _e$classList2, _e$classList3;

      if (!t) return;

      if (t.$el) {
        var _e11 = t.$el.dataset.index;

        if (!_e11 || parseInt(_e11, 10) !== t.index) {
          var _e12;

          t.$el.dataset.index = t.index, t.$el.querySelectorAll("[data-lazy-srcset]").forEach(function (t) {
            t.srcset = t.dataset.lazySrcset;
          }), t.$el.querySelectorAll("[data-lazy-src]").forEach(function (t) {
            var e = t.dataset.lazySrc;
            t instanceof HTMLImageElement ? t.src = e : t.style.backgroundImage = "url('".concat(e, "')");
          }), (_e12 = t.$el.dataset.lazySrc) && (t.$el.style.backgroundImage = "url('".concat(_e12, "')")), t.state = "ready";
        }

        return;
      }

      var e = document.createElement("div");
      e.dataset.index = t.index, (_e$classList2 = e.classList).add.apply(_e$classList2, _toConsumableArray((this.option("prefix") + this.option("classNames.slide")).split(" "))), t.customClass && (_e$classList3 = e.classList).add.apply(_e$classList3, _toConsumableArray(t.customClass.split(" "))), t.html && (e.innerHTML = t.html);
      var i = [];
      this.slides.forEach(function (t, e) {
        t.$el && i.push(e);
      });
      var s = t.index;
      var o = null;

      if (i.length) {
        var _t26 = i.reduce(function (t, e) {
          return Math.abs(e - s) < Math.abs(t - s) ? e : t;
        });

        o = this.slides[_t26];
      }

      return this.$track.insertBefore(e, o && o.$el ? o.index < t.index ? o.$el.nextSibling : o.$el : null), t.$el = e, this.trigger("createSlide", t, s), t;
    }
  }, {
    key: "removeSlideEl",
    value: function removeSlideEl(t) {
      t.$el && !t.isDom && (this.trigger("removeSlide", t), t.$el.remove(), t.$el = null);
    }
  }, {
    key: "markSelectedSlides",
    value: function markSelectedSlides() {
      var _this19 = this;

      var t = this.option("classNames.slideSelected"),
          e = "aria-hidden";
      this.slides.forEach(function (i, s) {
        var o = i.$el;
        if (!o) return;
        var n = _this19.pages[_this19.page];
        n && n.indexes && n.indexes.indexOf(s) > -1 ? (t && !o.classList.contains(t) && (o.classList.add(t), _this19.trigger("selectSlide", i)), o.removeAttribute(e)) : (t && o.classList.contains(t) && (o.classList.remove(t), _this19.trigger("unselectSlide", i)), o.setAttribute(e, !0));
      });
    }
  }, {
    key: "updatePage",
    value: function updatePage() {
      this.updateMetrics(), this.slideTo(this.page, {
        friction: 0
      });
    }
  }, {
    key: "onBeforeTransform",
    value: function onBeforeTransform() {
      this.option("infiniteX", this.option("infinite")) && this.manageInfiniteTrack(), this.manageSlideVisiblity();
    }
  }, {
    key: "manageInfiniteTrack",
    value: function manageInfiniteTrack() {
      var t = this.contentWidth,
          e = this.viewportWidth;
      if (!this.option("infiniteX", this.option("infinite")) || this.pages.length < 2 || t < e) return;
      var i = this.Panzoom;
      var s = !1;
      return i.content.x < -1 * (t - e) && (i.content.x += t, this.pageIndex = this.pageIndex - this.pages.length, s = !0), i.content.x > e && (i.content.x -= t, this.pageIndex = this.pageIndex + this.pages.length, s = !0), s && "pointerdown" === i.state && i.resetDragPosition(), s;
    }
  }, {
    key: "onTouchEnd",
    value: function onTouchEnd(t, e) {
      var i = this.option("dragFree");
      if (!i && this.pages.length > 1 && t.dragOffset.time < 350 && Math.abs(t.dragOffset.y) < 1 && Math.abs(t.dragOffset.x) > 5) this[t.dragOffset.x < 0 ? "slideNext" : "slidePrev"]();else if (i) {
        var _this$getPageFromPosi = this.getPageFromPosition(-1 * t.transform.x),
            _this$getPageFromPosi2 = _slicedToArray(_this$getPageFromPosi, 2),
            _e13 = _this$getPageFromPosi2[1];

        this.setPage(_e13);
      } else this.slideToClosest();
    }
  }, {
    key: "slideToClosest",
    value: function slideToClosest() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var _this$getPageFromPosi3 = this.getPageFromPosition(-1 * this.Panzoom.content.x),
          _this$getPageFromPosi4 = _slicedToArray(_this$getPageFromPosi3, 2),
          e = _this$getPageFromPosi4[1];

      this.slideTo(e, t);
    }
  }, {
    key: "getPageFromPosition",
    value: function getPageFromPosition(t) {
      var e = this.pages.length;
      this.option("center") && (t += 0.5 * this.viewportWidth);
      var i = Math.floor(t / this.contentWidth);
      t -= i * this.contentWidth;
      var s = this.slides.find(function (e) {
        return e.left <= t && e.left + e.width > t;
      });

      if (s) {
        var _t27 = this.findPageForSlide(s.index);

        return [_t27, _t27 + i * e];
      }

      return [0, 0];
    }
  }, {
    key: "setPage",
    value: function setPage(t, e) {
      var i = 0,
          s = parseInt(t, 10) || 0;
      var o = this.page,
          n = this.pageIndex,
          a = this.pages.length,
          r = this.contentWidth,
          h = this.viewportWidth;

      if (t = (s % a + a) % a, this.option("infiniteX", this.option("infinite")) && r > h) {
        var _o7 = Math.floor(s / a) || 0,
            _n4 = r;

        if (i = this.pages[t].left + _o7 * _n4, !0 === e && a > 2) {
          var _t28 = -1 * this.Panzoom.content.x;

          var _e14 = i - _n4,
              _o8 = i + _n4,
              _r = Math.abs(_t28 - i),
              _h = Math.abs(_t28 - _e14),
              _l3 = Math.abs(_t28 - _o8);

          _l3 < _r && _l3 <= _h ? (i = _o8, s += a) : _h < _r && _h < _l3 && (i = _e14, s -= a);
        }
      } else t = s = Math.max(0, Math.min(s, a - 1)), i = this.pages.length ? this.pages[t].left : 0;

      return this.page = t, this.pageIndex = s, null !== o && t !== o && (this.prevPage = o, this.prevPageIndex = n, this.trigger("change", t, o)), i;
    }
  }, {
    key: "destroy",
    value: function destroy() {
      var _this20 = this;

      this.state = "destroy", this.slides.forEach(function (t) {
        _this20.removeSlideEl(t);
      }), this.slides = [], this.Panzoom.destroy(), this.detachPlugins();
    }
  }]);

  return y;
}(l);

y.version = "4.0.26", y.Plugins = p;
var v = !("undefined" == typeof window || !window.document || !window.document.createElement);
var b = null;

var x = ["a[href]", "area[href]", 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', "select:not([disabled]):not([aria-hidden])", "textarea:not([disabled]):not([aria-hidden])", "button:not([disabled]):not([aria-hidden])", "iframe", "object", "embed", "video", "audio", "[contenteditable]", '[tabindex]:not([tabindex^="-"]):not([disabled]):not([aria-hidden])'],
    w = function w(t) {
  if (t && v) {
    null === b && document.createElement("div").focus({
      get preventScroll() {
        return b = !0, !1;
      }

    });

    try {
      if (t.setActive) t.setActive();else if (b) t.focus({
        preventScroll: !0
      });else {
        var _e15 = window.pageXOffset || document.body.scrollTop,
            _i21 = window.pageYOffset || document.body.scrollLeft;

        t.focus(), document.body.scrollTo({
          top: _e15,
          left: _i21,
          behavior: "auto"
        });
      }
    } catch (t) {}
  }
};

var $ = /*#__PURE__*/function () {
  function $(t) {
    _classCallCheck(this, $);

    this.fancybox = t, this.$container = null, this.state = "init";

    for (var _i22 = 0, _arr3 = ["onPrepare", "onClosing", "onKeydown"]; _i22 < _arr3.length; _i22++) {
      var _t29 = _arr3[_i22];
      this[_t29] = this[_t29].bind(this);
    }

    this.events = {
      prepare: this.onPrepare,
      closing: this.onClosing,
      keydown: this.onKeydown
    };
  }

  _createClass($, [{
    key: "onPrepare",
    value: function onPrepare() {
      this.getSlides().length < this.fancybox.option("Thumbs.minSlideCount") ? this.state = "disabled" : !0 === this.fancybox.option("Thumbs.autoStart") && this.fancybox.Carousel.Panzoom.content.height >= this.fancybox.option("Thumbs.minScreenHeight") && this.build();
    }
  }, {
    key: "onClosing",
    value: function onClosing() {
      this.Carousel && this.Carousel.Panzoom.detachEvents();
    }
  }, {
    key: "onKeydown",
    value: function onKeydown(t, e) {
      e === t.option("Thumbs.key") && this.toggle();
    }
  }, {
    key: "build",
    value: function build() {
      var _this21 = this;

      if (this.$container) return;
      var t = document.createElement("div");
      t.classList.add("fancybox__thumbs"), this.fancybox.$carousel.parentNode.insertBefore(t, this.fancybox.$carousel.nextSibling), this.Carousel = new y(t, e(!0, {
        Dots: !1,
        Navigation: !1,
        Sync: {
          friction: 0
        },
        infinite: !1,
        center: !0,
        fill: !0,
        dragFree: !0,
        slidesPerPage: 1,
        preload: 1
      }, this.fancybox.option("Thumbs.Carousel"), {
        Sync: {
          target: this.fancybox.Carousel
        },
        slides: this.getSlides()
      })), this.Carousel.Panzoom.on("wheel", function (t, e) {
        e.preventDefault(), _this21.fancybox[e.deltaY < 0 ? "prev" : "next"]();
      }), this.$container = t, this.state = "visible";
    }
  }, {
    key: "getSlides",
    value: function getSlides() {
      var t = [];

      var _iterator4 = _createForOfIteratorHelper(this.fancybox.items),
          _step4;

      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var _e16 = _step4.value;
          var _i23 = _e16.thumb;
          _i23 && t.push({
            html: "<div class=\"fancybox__thumb\" style=\"background-image:url('".concat(_i23, "')\"></div>"),
            customClass: "has-thumb has-".concat(_e16.type || "image")
          });
        }
      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }

      return t;
    }
  }, {
    key: "toggle",
    value: function toggle() {
      "visible" === this.state ? this.hide() : "hidden" === this.state ? this.show() : this.build();
    }
  }, {
    key: "show",
    value: function show() {
      "hidden" === this.state && (this.$container.style.display = "", this.Carousel.Panzoom.attachEvents(), this.state = "visible");
    }
  }, {
    key: "hide",
    value: function hide() {
      "visible" === this.state && (this.Carousel.Panzoom.detachEvents(), this.$container.style.display = "none", this.state = "hidden");
    }
  }, {
    key: "cleanup",
    value: function cleanup() {
      this.Carousel && (this.Carousel.destroy(), this.Carousel = null), this.$container && (this.$container.remove(), this.$container = null), this.state = "init";
    }
  }, {
    key: "attach",
    value: function attach() {
      this.fancybox.on(this.events);
    }
  }, {
    key: "detach",
    value: function detach() {
      this.fancybox.off(this.events), this.cleanup();
    }
  }]);

  return $;
}();

$.defaults = {
  minSlideCount: 2,
  minScreenHeight: 500,
  autoStart: !0,
  key: "t",
  Carousel: {}
};

var C = function C(t, e) {
  var i = new URL(t),
      s = new URLSearchParams(i.search);
  var o = new URLSearchParams();

  for (var _i24 = 0, _arr4 = [].concat(_toConsumableArray(s), _toConsumableArray(Object.entries(e))); _i24 < _arr4.length; _i24++) {
    var _arr4$_i = _slicedToArray(_arr4[_i24], 2),
        _t30 = _arr4$_i[0],
        _i25 = _arr4$_i[1];

    "t" === _t30 ? o.set("start", parseInt(_i25)) : o.set(_t30, _i25);
  }

  o = o.toString();
  var n = t.match(/#t=((.*)?\d+s)/);
  return n && (o += "#t=".concat(n[1])), o;
},
    S = {
  video: {
    autoplay: !0,
    ratio: 16 / 9
  },
  youtube: {
    autohide: 1,
    fs: 1,
    rel: 0,
    hd: 1,
    wmode: "transparent",
    enablejsapi: 1,
    html5: 1
  },
  vimeo: {
    hd: 1,
    show_title: 1,
    show_byline: 1,
    show_portrait: 0,
    fullscreen: 1
  },
  html5video: {
    tpl: '<video class="fancybox__html5video" playsinline controls controlsList="nodownload" poster="{{poster}}">\n  <source src="{{src}}" type="{{format}}" />Sorry, your browser doesn\'t support embedded videos.</video>',
    format: ""
  }
};

var E = /*#__PURE__*/function () {
  function E(t) {
    _classCallCheck(this, E);

    this.fancybox = t;

    for (var _i26 = 0, _arr5 = ["onInit", "onReady", "onCreateSlide", "onRemoveSlide", "onSelectSlide", "onUnselectSlide", "onRefresh", "onMessage"]; _i26 < _arr5.length; _i26++) {
      var _t31 = _arr5[_i26];
      this[_t31] = this[_t31].bind(this);
    }

    this.events = {
      init: this.onInit,
      ready: this.onReady,
      "Carousel.createSlide": this.onCreateSlide,
      "Carousel.removeSlide": this.onRemoveSlide,
      "Carousel.selectSlide": this.onSelectSlide,
      "Carousel.unselectSlide": this.onUnselectSlide,
      "Carousel.refresh": this.onRefresh
    };
  }

  _createClass(E, [{
    key: "onInit",
    value: function onInit() {
      var _iterator5 = _createForOfIteratorHelper(this.fancybox.items),
          _step5;

      try {
        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
          var _t32 = _step5.value;
          this.processType(_t32);
        }
      } catch (err) {
        _iterator5.e(err);
      } finally {
        _iterator5.f();
      }
    }
  }, {
    key: "processType",
    value: function processType(t) {
      if (t.html) return t.src = t.html, t.type = "html", void delete t.html;
      var i = t.src || "";
      var s = t.type || this.fancybox.options.type,
          o = null;

      if (!i || "string" == typeof i) {
        if (o = i.match(/(?:youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(?:watch\?(?:.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(?:.*)|[\w-]{11}|\?listType=(?:.*)&list=(?:.*))(?:.*)/i)) {
          var _e17 = C(i, this.fancybox.option("Html.youtube")),
              _n5 = encodeURIComponent(o[1]);

          t.videoId = _n5, t.src = "https://www.youtube-nocookie.com/embed/".concat(_n5, "?").concat(_e17), t.thumb = t.thumb || "https://i.ytimg.com/vi/".concat(_n5, "/mqdefault.jpg"), t.vendor = "youtube", s = "video";
        } else if (o = i.match(/^.+vimeo.com\/(?:\/)?([\d]+)(.*)?/)) {
          var _e18 = C(i, this.fancybox.option("Html.vimeo")),
              _n6 = encodeURIComponent(o[1]);

          t.videoId = _n6, t.src = "https://player.vimeo.com/video/".concat(_n6, "?").concat(_e18), t.vendor = "vimeo", s = "video";
        } else (o = i.match(/(?:maps\.)?google\.([a-z]{2,3}(?:\.[a-z]{2})?)\/(?:(?:(?:maps\/(?:place\/(?:.*)\/)?\@(.*),(\d+.?\d+?)z))|(?:\?ll=))(.*)?/i)) ? (t.src = "//maps.google.".concat(o[1], "/?ll=").concat((o[2] ? o[2] + "&z=" + Math.floor(o[3]) + (o[4] ? o[4].replace(/^\//, "&") : "") : o[4] + "").replace(/\?/, "&"), "&output=").concat(o[4] && o[4].indexOf("layer=c") > 0 ? "svembed" : "embed"), s = "map") : (o = i.match(/(?:maps\.)?google\.([a-z]{2,3}(?:\.[a-z]{2})?)\/(?:maps\/search\/)(.*)/i)) && (t.src = "//maps.google.".concat(o[1], "/maps?q=").concat(o[2].replace("query=", "q=").replace("api=1", ""), "&output=embed"), s = "map");

        s || ("#" === i.charAt(0) ? s = "inline" : (o = i.match(/\.(mp4|mov|ogv|webm)((\?|#).*)?$/i)) ? (s = "html5video", t.format = t.format || "video/" + ("ogv" === o[1] ? "ogg" : o[1])) : i.match(/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i) ? s = "image" : i.match(/\.(pdf)((\?|#).*)?$/i) && (s = "pdf")), t.type = s || this.fancybox.option("defaultType", "image"), "html5video" !== s && "video" !== s || (t.video = e({}, this.fancybox.option("Html.video"), t.video), t._width && t._height ? t.ratio = parseFloat(t._width) / parseFloat(t._height) : t.ratio = t.ratio || t.video.ratio || S.video.ratio);
      }
    }
  }, {
    key: "onReady",
    value: function onReady() {
      var _this22 = this;

      this.fancybox.Carousel.slides.forEach(function (t) {
        t.$el && (_this22.setContent(t), t.index === _this22.fancybox.getSlide().index && _this22.playVideo(t));
      });
    }
  }, {
    key: "onCreateSlide",
    value: function onCreateSlide(t, e, i) {
      "ready" === this.fancybox.state && this.setContent(i);
    }
  }, {
    key: "loadInlineContent",
    value: function loadInlineContent(t) {
      var e;
      if (t.src instanceof HTMLElement) e = t.src;else if ("string" == typeof t.src) {
        var _i27 = t.src.split("#", 2),
            _s8 = 2 === _i27.length && "" === _i27[0] ? _i27[1] : _i27[0];

        e = document.getElementById(_s8);
      }

      if (e) {
        if ("clone" === t.type || e.$placeHolder) {
          e = e.cloneNode(!0);

          var _i28 = e.getAttribute("id");

          _i28 = _i28 ? "".concat(_i28, "--clone") : "clone-".concat(this.fancybox.id, "-").concat(t.index), e.setAttribute("id", _i28);
        } else {
          var _t33 = document.createElement("div");

          _t33.classList.add("fancybox-placeholder"), e.parentNode.insertBefore(_t33, e), e.$placeHolder = _t33;
        }

        this.fancybox.setContent(t, e);
      } else this.fancybox.setError(t, "{{ELEMENT_NOT_FOUND}}");
    }
  }, {
    key: "loadAjaxContent",
    value: function loadAjaxContent(t) {
      var e = this.fancybox,
          i = new XMLHttpRequest();
      e.showLoading(t), i.onreadystatechange = function () {
        i.readyState === XMLHttpRequest.DONE && "ready" === e.state && (e.hideLoading(t), 200 === i.status ? e.setContent(t, i.responseText) : e.setError(t, 404 === i.status ? "{{AJAX_NOT_FOUND}}" : "{{AJAX_FORBIDDEN}}"));
      }, i.open("GET", t.src), i.setRequestHeader("X-Requested-With", "XMLHttpRequest"), i.send(t.ajax || null), t.xhr = i;
    }
  }, {
    key: "loadIframeContent",
    value: function loadIframeContent(t) {
      var _this23 = this;

      var e = this.fancybox,
          i = document.createElement("iframe");
      if (i.className = "fancybox__iframe", i.setAttribute("id", "fancybox__iframe_".concat(e.id, "_").concat(t.index)), i.setAttribute("allow", "autoplay; fullscreen"), i.setAttribute("scrolling", "auto"), t.$iframe = i, "iframe" !== t.type || !1 === t.preload) return i.setAttribute("src", t.src), this.fancybox.setContent(t, i), void this.resizeIframe(t);
      e.showLoading(t);
      var s = document.createElement("div");
      s.style.visibility = "hidden", this.fancybox.setContent(t, s), s.appendChild(i), i.onerror = function () {
        e.setError(t, "{{IFRAME_ERROR}}");
      }, i.onload = function () {
        e.hideLoading(t);
        var s = !1;
        i.isReady || (i.isReady = !0, s = !0), i.src.length && (i.parentNode.style.visibility = "", _this23.resizeIframe(t), s && e.revealContent(t));
      }, i.setAttribute("src", t.src);
    }
  }, {
    key: "setAspectRatio",
    value: function setAspectRatio(t) {
      var e = t.$content,
          i = t.ratio;
      if (!e) return;
      var s = t._width,
          o = t._height;

      if (i || s && o) {
        Object.assign(e.style, {
          width: s && o ? "100%" : "",
          height: s && o ? "100%" : "",
          maxWidth: "",
          maxHeight: ""
        });
        var _t34 = e.offsetWidth,
            _n7 = e.offsetHeight;

        if (s = s || _t34, o = o || _n7, s > _t34 || o > _n7) {
          var _e19 = Math.min(_t34 / s, _n7 / o);

          s *= _e19, o *= _e19;
        }

        Math.abs(s / o - i) > 0.01 && (i < s / o ? s = o * i : o = s / i), Object.assign(e.style, {
          width: "".concat(s, "px"),
          height: "".concat(o, "px")
        });
      }
    }
  }, {
    key: "resizeIframe",
    value: function resizeIframe(t) {
      var e = t.$iframe;
      if (!e) return;
      var i = t._width || 0,
          s = t._height || 0;
      i && s && (t.autoSize = !1);
      var o = e.parentNode,
          n = o && o.style;
      if (!1 !== t.preload && !1 !== t.autoSize && n) try {
        var _t35 = window.getComputedStyle(o),
            _a4 = parseFloat(_t35.paddingLeft) + parseFloat(_t35.paddingRight),
            _r2 = parseFloat(_t35.paddingTop) + parseFloat(_t35.paddingBottom),
            _h2 = e.contentWindow.document,
            _l4 = _h2.getElementsByTagName("html")[0],
            _c = _h2.body;

        n.width = "", _c.style.overflow = "hidden", i = i || _l4.scrollWidth + _a4, n.width = "".concat(i, "px"), _c.style.overflow = "", n.flex = "0 0 auto", n.height = "".concat(_c.scrollHeight, "px"), s = _l4.scrollHeight + _r2;
      } catch (t) {}

      if (i || s) {
        var _t36 = {
          flex: "0 1 auto"
        };
        i && (_t36.width = "".concat(i, "px")), s && (_t36.height = "".concat(s, "px")), Object.assign(n, _t36);
      }
    }
  }, {
    key: "onRefresh",
    value: function onRefresh(t, e) {
      var _this24 = this;

      e.slides.forEach(function (t) {
        t.$el && (t.$iframe && _this24.resizeIframe(t), t.ratio && _this24.setAspectRatio(t));
      });
    }
  }, {
    key: "setContent",
    value: function setContent(t) {
      if (t && !t.isDom) {
        switch (t.type) {
          case "html":
            this.fancybox.setContent(t, t.src);
            break;

          case "html5video":
            this.fancybox.setContent(t, this.fancybox.option("Html.html5video.tpl").replace(/\{\{src\}\}/gi, t.src).replace("{{format}}", t.format || t.html5video && t.html5video.format || "").replace("{{poster}}", t.poster || t.thumb || ""));
            break;

          case "inline":
          case "clone":
            this.loadInlineContent(t);
            break;

          case "ajax":
            this.loadAjaxContent(t);
            break;

          case "pdf":
          case "video":
          case "map":
            t.preload = !1;

          case "iframe":
            this.loadIframeContent(t);
        }

        t.ratio && this.setAspectRatio(t);
      }
    }
  }, {
    key: "onSelectSlide",
    value: function onSelectSlide(t, e, i) {
      "ready" === t.state && this.playVideo(i);
    }
  }, {
    key: "playVideo",
    value: function playVideo(t) {
      if ("html5video" === t.type && t.video.autoplay) try {
        var _e20 = t.$el.querySelector("video");

        if (_e20) {
          var _t37 = _e20.play();

          void 0 !== _t37 && _t37.then(function () {}).catch(function (t) {
            _e20.muted = !0, _e20.play();
          });
        }
      } catch (t) {}
      if ("video" !== t.type || !t.$iframe || !t.$iframe.contentWindow) return;

      var e = function e() {
        if ("done" === t.state && t.$iframe && t.$iframe.contentWindow) {
          var _e21;

          if (t.$iframe.isReady) return t.video && t.video.autoplay && (_e21 = "youtube" == t.vendor ? {
            event: "command",
            func: "playVideo"
          } : {
            method: "play",
            value: "true"
          }), void (_e21 && t.$iframe.contentWindow.postMessage(JSON.stringify(_e21), "*"));
          "youtube" === t.vendor && (_e21 = {
            event: "listening",
            id: t.$iframe.getAttribute("id")
          }, t.$iframe.contentWindow.postMessage(JSON.stringify(_e21), "*"));
        }

        t.poller = setTimeout(e, 250);
      };

      e();
    }
  }, {
    key: "onUnselectSlide",
    value: function onUnselectSlide(t, e, i) {
      if ("html5video" === i.type) {
        try {
          i.$el.querySelector("video").pause();
        } catch (t) {}

        return;
      }

      var s = !1;
      "vimeo" == i.vendor ? s = {
        method: "pause",
        value: "true"
      } : "youtube" === i.vendor && (s = {
        event: "command",
        func: "pauseVideo"
      }), s && i.$iframe && i.$iframe.contentWindow && i.$iframe.contentWindow.postMessage(JSON.stringify(s), "*"), clearTimeout(i.poller);
    }
  }, {
    key: "onRemoveSlide",
    value: function onRemoveSlide(t, e, i) {
      i.xhr && (i.xhr.abort(), i.xhr = null), i.$iframe && (i.$iframe.onload = i.$iframe.onerror = null, i.$iframe.src = "//about:blank", i.$iframe = null);
      var s = i.$content;
      "inline" === i.type && s && (s.classList.remove("fancybox__content"), "none" !== s.style.display && (s.style.display = "none")), i.$closeButton && (i.$closeButton.remove(), i.$closeButton = null);
      var o = s && s.$placeHolder;
      o && (o.parentNode.insertBefore(s, o), o.remove(), s.$placeHolder = null);
    }
  }, {
    key: "onMessage",
    value: function onMessage(t) {
      try {
        var _e22 = JSON.parse(t.data);

        if ("https://player.vimeo.com" === t.origin) {
          if ("ready" === _e22.event) {
            var _iterator6 = _createForOfIteratorHelper(document.getElementsByClassName("fancybox__iframe")),
                _step6;

            try {
              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
                var _e23 = _step6.value;
                _e23.contentWindow === t.source && (_e23.isReady = 1);
              }
            } catch (err) {
              _iterator6.e(err);
            } finally {
              _iterator6.f();
            }
          }
        } else "https://www.youtube-nocookie.com" === t.origin && "onReady" === _e22.event && (document.getElementById(_e22.id).isReady = 1);
      } catch (t) {}
    }
  }, {
    key: "attach",
    value: function attach() {
      this.fancybox.on(this.events), window.addEventListener("message", this.onMessage, !1);
    }
  }, {
    key: "detach",
    value: function detach() {
      this.fancybox.off(this.events), window.removeEventListener("message", this.onMessage, !1);
    }
  }]);

  return E;
}();

E.defaults = S;

var P = /*#__PURE__*/function () {
  function P(t) {
    _classCallCheck(this, P);

    this.fancybox = t;

    for (var _i29 = 0, _arr6 = ["onReady", "onClosing", "onDone", "onPageChange", "onCreateSlide", "onRemoveSlide", "onImageStatusChange"]; _i29 < _arr6.length; _i29++) {
      var _t38 = _arr6[_i29];
      this[_t38] = this[_t38].bind(this);
    }

    this.events = {
      ready: this.onReady,
      closing: this.onClosing,
      done: this.onDone,
      "Carousel.change": this.onPageChange,
      "Carousel.createSlide": this.onCreateSlide,
      "Carousel.removeSlide": this.onRemoveSlide
    };
  }

  _createClass(P, [{
    key: "onReady",
    value: function onReady() {
      var _this25 = this;

      this.fancybox.Carousel.slides.forEach(function (t) {
        t.$el && _this25.setContent(t);
      });
    }
  }, {
    key: "onDone",
    value: function onDone(t, e) {
      this.handleCursor(e);
    }
  }, {
    key: "onClosing",
    value: function onClosing(t) {
      clearTimeout(this.clickTimer), this.clickTimer = null, t.Carousel.slides.forEach(function (t) {
        t.$image && (t.state = "destroy"), t.Panzoom && t.Panzoom.detachEvents();
      }), "closing" === this.fancybox.state && this.canZoom(t.getSlide()) && this.zoomOut();
    }
  }, {
    key: "onCreateSlide",
    value: function onCreateSlide(t, e, i) {
      "ready" === this.fancybox.state && this.setContent(i);
    }
  }, {
    key: "onRemoveSlide",
    value: function onRemoveSlide(t, e, i) {
      i.$image && (i.$el.classList.remove(t.option("Image.canZoomInClass")), i.$image.remove(), i.$image = null), i.Panzoom && (i.Panzoom.destroy(), i.Panzoom = null), i.$el && i.$el.dataset && delete i.$el.dataset.imageFit;
    }
  }, {
    key: "setContent",
    value: function setContent(t) {
      var _this26 = this;

      if (t.isDom || t.html || t.type && "image" !== t.type) return;
      if (t.$image) return;
      t.type = "image", t.state = "loading";
      var e = document.createElement("div");
      e.style.visibility = "hidden";
      var i = document.createElement("img");
      i.addEventListener("load", function (e) {
        e.stopImmediatePropagation(), _this26.onImageStatusChange(t);
      }), i.addEventListener("error", function () {
        _this26.onImageStatusChange(t);
      }), i.src = t.src, i.alt = "", i.draggable = !1, i.classList.add("fancybox__image"), t.srcset && i.setAttribute("srcset", t.srcset), t.sizes && i.setAttribute("sizes", t.sizes), t.$image = i;
      var s = this.fancybox.option("Image.wrap");

      if (s) {
        var _o9 = document.createElement("div");

        _o9.classList.add("string" == typeof s ? s : "fancybox__image-wrap"), _o9.appendChild(i), e.appendChild(_o9), t.$wrap = _o9;
      } else e.appendChild(i);

      t.$el.dataset.imageFit = this.fancybox.option("Image.fit"), this.fancybox.setContent(t, e), i.complete || i.error ? this.onImageStatusChange(t) : this.fancybox.showLoading(t);
    }
  }, {
    key: "onImageStatusChange",
    value: function onImageStatusChange(t) {
      var _this27 = this;

      var e = t.$image;
      e && "loading" === t.state && (e.complete && e.naturalWidth && e.naturalHeight ? (this.fancybox.hideLoading(t), "contain" === this.fancybox.option("Image.fit") && this.initSlidePanzoom(t), t.$el.addEventListener("wheel", function (e) {
        return _this27.onWheel(t, e);
      }, {
        passive: !1
      }), t.$content.addEventListener("click", function (e) {
        return _this27.onClick(t, e);
      }, {
        passive: !1
      }), this.revealContent(t)) : this.fancybox.setError(t, "{{IMAGE_ERROR}}"));
    }
  }, {
    key: "initSlidePanzoom",
    value: function initSlidePanzoom(t) {
      var _this28 = this;

      t.Panzoom || (t.Panzoom = new d(t.$el, e(!0, this.fancybox.option("Image.Panzoom", {}), {
        viewport: t.$wrap,
        content: t.$image,
        width: t._width,
        height: t._height,
        wrapInner: !1,
        textSelection: !0,
        touch: this.fancybox.option("Image.touch"),
        panOnlyZoomed: !0,
        click: !1,
        wheel: !1
      })), t.Panzoom.on("startAnimation", function () {
        _this28.fancybox.trigger("Image.startAnimation", t);
      }), t.Panzoom.on("endAnimation", function () {
        "zoomIn" === t.state && _this28.fancybox.done(t), _this28.handleCursor(t), _this28.fancybox.trigger("Image.endAnimation", t);
      }), t.Panzoom.on("afterUpdate", function () {
        _this28.handleCursor(t), _this28.fancybox.trigger("Image.afterUpdate", t);
      }));
    }
  }, {
    key: "revealContent",
    value: function revealContent(t) {
      null === this.fancybox.Carousel.prevPage && t.index === this.fancybox.options.startIndex && this.canZoom(t) ? this.zoomIn() : this.fancybox.revealContent(t);
    }
  }, {
    key: "getZoomInfo",
    value: function getZoomInfo(t) {
      var e = t.$thumb.getBoundingClientRect(),
          i = e.width,
          s = e.height,
          o = t.$content.getBoundingClientRect(),
          n = o.width,
          a = o.height,
          r = o.top - e.top,
          h = o.left - e.left;
      var l = this.fancybox.option("Image.zoomOpacity");
      return "auto" === l && (l = Math.abs(i / s - n / a) > 0.1), {
        top: r,
        left: h,
        scale: n && i ? i / n : 1,
        opacity: l
      };
    }
  }, {
    key: "canZoom",
    value: function canZoom(t) {
      var e = this.fancybox,
          i = e.$container;
      if (window.visualViewport && 1 !== window.visualViewport.scale) return !1;
      if (t.Panzoom && !t.Panzoom.content.width) return !1;
      if (!e.option("Image.zoom") || "contain" !== e.option("Image.fit")) return !1;
      var s = t.$thumb;
      if (!s || "loading" === t.state) return !1;
      i.classList.add("fancybox__no-click");
      var o = s.getBoundingClientRect();
      var n;

      if (this.fancybox.option("Image.ignoreCoveredThumbnail")) {
        var _t39 = document.elementFromPoint(o.left + 1, o.top + 1) === s,
            _e24 = document.elementFromPoint(o.right - 1, o.bottom - 1) === s;

        n = _t39 && _e24;
      } else n = document.elementFromPoint(o.left + 0.5 * o.width, o.top + 0.5 * o.height) === s;

      return i.classList.remove("fancybox__no-click"), n;
    }
  }, {
    key: "zoomIn",
    value: function zoomIn() {
      var t = this.fancybox,
          e = t.getSlide(),
          i = e.Panzoom,
          _this$getZoomInfo = this.getZoomInfo(e),
          s = _this$getZoomInfo.top,
          o = _this$getZoomInfo.left,
          n = _this$getZoomInfo.scale,
          a = _this$getZoomInfo.opacity;

      t.trigger("reveal", e), i.panTo({
        x: -1 * o,
        y: -1 * s,
        scale: n,
        friction: 0,
        ignoreBounds: !0
      }), e.$content.style.visibility = "", e.state = "zoomIn", !0 === a && i.on("afterTransform", function (t) {
        "zoomIn" !== e.state && "zoomOut" !== e.state || (t.$content.style.opacity = Math.min(1, 1 - (1 - t.content.scale) / (1 - n)));
      }), i.panTo({
        x: 0,
        y: 0,
        scale: 1,
        friction: this.fancybox.option("Image.zoomFriction")
      });
    }
  }, {
    key: "zoomOut",
    value: function zoomOut() {
      var _this29 = this;

      var t = this.fancybox,
          e = t.getSlide(),
          i = e.Panzoom;
      if (!i) return;
      e.state = "zoomOut", t.state = "customClosing", e.$caption && (e.$caption.style.visibility = "hidden");
      var s = this.fancybox.option("Image.zoomFriction");

      var o = function o(t) {
        var _this29$getZoomInfo = _this29.getZoomInfo(e),
            o = _this29$getZoomInfo.top,
            n = _this29$getZoomInfo.left,
            a = _this29$getZoomInfo.scale,
            r = _this29$getZoomInfo.opacity;

        t || r || (s *= 0.82), i.panTo({
          x: -1 * n,
          y: -1 * o,
          scale: a,
          friction: s,
          ignoreBounds: !0
        }), s *= 0.98;
      };

      window.addEventListener("scroll", o), i.once("endAnimation", function () {
        window.removeEventListener("scroll", o), t.destroy();
      }), o();
    }
  }, {
    key: "handleCursor",
    value: function handleCursor(t) {
      if ("image" !== t.type || !t.$el) return;
      var e = t.Panzoom,
          i = this.fancybox.option("Image.click", !1, t),
          s = this.fancybox.option("Image.touch"),
          o = t.$el.classList,
          n = this.fancybox.option("Image.canZoomInClass"),
          a = this.fancybox.option("Image.canZoomOutClass");

      if (o.remove(a), o.remove(n), e && "toggleZoom" === i) {
        e && 1 === e.content.scale && e.option("maxScale") - e.content.scale > 0.01 ? o.add(n) : e.content.scale > 1 && !s && o.add(a);
      } else "close" === i && o.add(a);
    }
  }, {
    key: "onWheel",
    value: function onWheel(t, e) {
      if ("ready" === this.fancybox.state && !1 !== this.fancybox.trigger("Image.wheel", e)) switch (this.fancybox.option("Image.wheel")) {
        case "zoom":
          "done" === t.state && t.Panzoom && t.Panzoom.zoomWithWheel(e);
          break;

        case "close":
          this.fancybox.close();
          break;

        case "slide":
          this.fancybox[e.deltaY < 0 ? "prev" : "next"]();
      }
    }
  }, {
    key: "onClick",
    value: function onClick(t, e) {
      var _this30 = this;

      if ("ready" !== this.fancybox.state) return;
      var i = t.Panzoom;
      if (i && (i.dragPosition.midPoint || 0 !== i.dragOffset.x || 0 !== i.dragOffset.y || 1 !== i.dragOffset.scale)) return;
      if (this.fancybox.Carousel.Panzoom.lockAxis) return !1;

      var s = function s(i) {
        switch (i) {
          case "toggleZoom":
            e.stopPropagation(), t.Panzoom && t.Panzoom.zoomWithClick(e);
            break;

          case "close":
            _this30.fancybox.close();

            break;

          case "next":
            e.stopPropagation(), _this30.fancybox.next();
        }
      },
          o = this.fancybox.option("Image.click"),
          n = this.fancybox.option("Image.doubleClick");

      n ? this.clickTimer ? (clearTimeout(this.clickTimer), this.clickTimer = null, s(n)) : this.clickTimer = setTimeout(function () {
        _this30.clickTimer = null, s(o);
      }, 300) : s(o);
    }
  }, {
    key: "onPageChange",
    value: function onPageChange(t, e) {
      var i = t.getSlide();
      e.slides.forEach(function (t) {
        t.Panzoom && "done" === t.state && t.index !== i.index && t.Panzoom.panTo({
          x: 0,
          y: 0,
          scale: 1,
          friction: 0.8
        });
      });
    }
  }, {
    key: "attach",
    value: function attach() {
      this.fancybox.on(this.events);
    }
  }, {
    key: "detach",
    value: function detach() {
      this.fancybox.off(this.events);
    }
  }]);

  return P;
}();

P.defaults = {
  canZoomInClass: "can-zoom_in",
  canZoomOutClass: "can-zoom_out",
  zoom: !0,
  zoomOpacity: "auto",
  zoomFriction: 0.82,
  ignoreCoveredThumbnail: !1,
  touch: !0,
  click: "toggleZoom",
  doubleClick: null,
  wheel: "zoom",
  fit: "contain",
  wrap: !1,
  Panzoom: {
    ratio: 1
  }
};

var L = /*#__PURE__*/function () {
  function L(t) {
    _classCallCheck(this, L);

    this.fancybox = t;

    for (var _i30 = 0, _arr7 = ["onChange", "onClosing"]; _i30 < _arr7.length; _i30++) {
      var _t40 = _arr7[_i30];
      this[_t40] = this[_t40].bind(this);
    }

    this.events = {
      initCarousel: this.onChange,
      "Carousel.change": this.onChange,
      closing: this.onClosing
    }, this.hasCreatedHistory = !1, this.origHash = "", this.timer = null;
  }

  _createClass(L, [{
    key: "onChange",
    value: function onChange(t) {
      var _this31 = this;

      var e = t.Carousel;
      this.timer && clearTimeout(this.timer);
      var i = null === e.prevPage,
          s = t.getSlide(),
          o = new URL(document.URL).hash;
      var n = !1;
      if (s.slug) n = "#" + s.slug;else {
        var _i31 = s.$trigger && s.$trigger.dataset,
            _o10 = t.option("slug") || _i31 && _i31.fancybox;

        _o10 && _o10.length && "true" !== _o10 && (n = "#" + _o10 + (e.slides.length > 1 ? "-" + (s.index + 1) : ""));
      }
      i && (this.origHash = o !== n ? o : ""), n && o !== n && (this.timer = setTimeout(function () {
        try {
          window.history[i ? "pushState" : "replaceState"]({}, document.title, window.location.pathname + window.location.search + n), i && (_this31.hasCreatedHistory = !0);
        } catch (t) {}
      }, 300));
    }
  }, {
    key: "onClosing",
    value: function onClosing() {
      if (this.timer && clearTimeout(this.timer), !0 !== this.hasSilentClose) try {
        return void window.history.replaceState({}, document.title, window.location.pathname + window.location.search + (this.origHash || ""));
      } catch (t) {}
    }
  }, {
    key: "attach",
    value: function attach(t) {
      t.on(this.events);
    }
  }, {
    key: "detach",
    value: function detach(t) {
      t.off(this.events);
    }
  }], [{
    key: "startFromUrl",
    value: function startFromUrl() {
      var t = L.Fancybox;
      if (!t || t.getInstance() || !1 === t.defaults.Hash) return;

      var _L$getParsedURL = L.getParsedURL(),
          e = _L$getParsedURL.hash,
          i = _L$getParsedURL.slug,
          s = _L$getParsedURL.index;

      if (!i) return;
      var o = document.querySelector("[data-slug=\"".concat(e, "\"]"));
      if (o && o.dispatchEvent(new CustomEvent("click", {
        bubbles: !0,
        cancelable: !0
      })), t.getInstance()) return;
      var n = document.querySelectorAll("[data-fancybox=\"".concat(i, "\"]"));
      n.length && (null === s && 1 === n.length ? o = n[0] : s && (o = n[s - 1]), o && o.dispatchEvent(new CustomEvent("click", {
        bubbles: !0,
        cancelable: !0
      })));
    }
  }, {
    key: "onHashChange",
    value: function onHashChange() {
      var _L$getParsedURL2 = L.getParsedURL(),
          t = _L$getParsedURL2.slug,
          e = _L$getParsedURL2.index,
          i = L.Fancybox,
          s = i && i.getInstance();

      if (s && s.plugins.Hash) {
        if (t) {
          var _i32 = s.Carousel;
          if (t === s.option("slug")) return _i32.slideTo(e - 1);

          var _iterator7 = _createForOfIteratorHelper(_i32.slides),
              _step7;

          try {
            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
              var _e25 = _step7.value;
              if (_e25.slug && _e25.slug === t) return _i32.slideTo(_e25.index);
            }
          } catch (err) {
            _iterator7.e(err);
          } finally {
            _iterator7.f();
          }

          var _o11 = s.getSlide(),
              _n8 = _o11.$trigger && _o11.$trigger.dataset;

          if (_n8 && _n8.fancybox === t) return _i32.slideTo(e - 1);
        }

        s.plugins.Hash.hasSilentClose = !0, s.close();
      }

      L.startFromUrl();
    }
  }, {
    key: "create",
    value: function create(t) {
      function e() {
        window.addEventListener("hashchange", L.onHashChange, !1), L.startFromUrl();
      }

      L.Fancybox = t, v && window.requestAnimationFrame(function () {
        /complete|interactive|loaded/.test(document.readyState) ? e() : document.addEventListener("DOMContentLoaded", e);
      });
    }
  }, {
    key: "destroy",
    value: function destroy() {
      window.removeEventListener("hashchange", L.onHashChange, !1);
    }
  }, {
    key: "getParsedURL",
    value: function getParsedURL() {
      var t = window.location.hash.substr(1),
          e = t.split("-"),
          i = e.length > 1 && /^\+?\d+$/.test(e[e.length - 1]) && parseInt(e.pop(-1), 10) || null;
      return {
        hash: t,
        slug: e.join("-"),
        index: i
      };
    }
  }]);

  return L;
}();

var T = {
  pageXOffset: 0,
  pageYOffset: 0,
  element: function element() {
    return document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;
  },
  activate: function activate(t) {
    T.pageXOffset = window.pageXOffset, T.pageYOffset = window.pageYOffset, t.requestFullscreen ? t.requestFullscreen() : t.mozRequestFullScreen ? t.mozRequestFullScreen() : t.webkitRequestFullscreen ? t.webkitRequestFullscreen() : t.msRequestFullscreen && t.msRequestFullscreen();
  },
  deactivate: function deactivate() {
    document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen();
  }
};

var _ = /*#__PURE__*/function () {
  function _(t) {
    _classCallCheck(this, _);

    this.fancybox = t, this.active = !1, this.handleVisibilityChange = this.handleVisibilityChange.bind(this);
  }

  _createClass(_, [{
    key: "isActive",
    value: function isActive() {
      return this.active;
    }
  }, {
    key: "setTimer",
    value: function setTimer() {
      var _this32 = this;

      if (!this.active || this.timer) return;
      var t = this.fancybox.option("slideshow.delay", 3e3);
      this.timer = setTimeout(function () {
        _this32.timer = null, _this32.fancybox.option("infinite") || _this32.fancybox.getSlide().index !== _this32.fancybox.Carousel.slides.length - 1 ? _this32.fancybox.next() : _this32.fancybox.jumpTo(0, {
          friction: 0
        });
      }, t);
      var e = this.$progress;
      e || (e = document.createElement("div"), e.classList.add("fancybox__progress"), this.fancybox.$carousel.parentNode.insertBefore(e, this.fancybox.$carousel), this.$progress = e, e.offsetHeight), e.style.transitionDuration = "".concat(t, "ms"), e.style.transform = "scaleX(1)";
    }
  }, {
    key: "clearTimer",
    value: function clearTimer() {
      clearTimeout(this.timer), this.timer = null, this.$progress && (this.$progress.style.transitionDuration = "", this.$progress.style.transform = "", this.$progress.offsetHeight);
    }
  }, {
    key: "activate",
    value: function activate() {
      this.active || (this.active = !0, this.fancybox.$container.classList.add("has-slideshow"), "done" === this.fancybox.getSlide().state && this.setTimer(), document.addEventListener("visibilitychange", this.handleVisibilityChange, !1));
    }
  }, {
    key: "handleVisibilityChange",
    value: function handleVisibilityChange() {
      this.deactivate();
    }
  }, {
    key: "deactivate",
    value: function deactivate() {
      this.active = !1, this.clearTimer(), this.fancybox.$container.classList.remove("has-slideshow"), document.removeEventListener("visibilitychange", this.handleVisibilityChange, !1);
    }
  }, {
    key: "toggle",
    value: function toggle() {
      this.active ? this.deactivate() : this.fancybox.Carousel.slides.length > 1 && this.activate();
    }
  }]);

  return _;
}();

var A = {
  display: ["counter", "zoom", "slideshow", "fullscreen", "thumbs", "close"],
  autoEnable: !0,
  items: {
    counter: {
      position: "left",
      type: "div",
      class: "fancybox__counter",
      html: '<span data-fancybox-index=""></span>&nbsp;/&nbsp;<span data-fancybox-count=""></span>',
      attr: {
        tabindex: -1
      }
    },
    prev: {
      type: "button",
      class: "fancybox__button--prev",
      label: "PREV",
      html: '<svg viewBox="0 0 24 24"><path d="M15 4l-8 8 8 8"/></svg>',
      attr: {
        "data-fancybox-prev": ""
      }
    },
    next: {
      type: "button",
      class: "fancybox__button--next",
      label: "NEXT",
      html: '<svg viewBox="0 0 24 24"><path d="M8 4l8 8-8 8"/></svg>',
      attr: {
        "data-fancybox-next": ""
      }
    },
    fullscreen: {
      type: "button",
      class: "fancybox__button--fullscreen",
      label: "TOGGLE_FULLSCREEN",
      html: '<svg viewBox="0 0 24 24">\n                <g><path d="M3 8 V3h5"></path><path d="M21 8V3h-5"></path><path d="M8 21H3v-5"></path><path d="M16 21h5v-5"></path></g>\n                <g><path d="M7 2v5H2M17 2v5h5M2 17h5v5M22 17h-5v5"/></g>\n            </svg>',
      click: function click(t) {
        t.preventDefault(), T.element() ? T.deactivate() : T.activate(this.fancybox.$container);
      }
    },
    slideshow: {
      type: "button",
      class: "fancybox__button--slideshow",
      label: "TOGGLE_SLIDESHOW",
      html: '<svg viewBox="0 0 24 24">\n                <g><path d="M6 4v16"/><path d="M20 12L6 20"/><path d="M20 12L6 4"/></g>\n                <g><path d="M7 4v15M17 4v15"/></g>\n            </svg>',
      click: function click(t) {
        t.preventDefault(), this.Slideshow.toggle();
      }
    },
    zoom: {
      type: "button",
      class: "fancybox__button--zoom",
      label: "TOGGLE_ZOOM",
      html: '<svg viewBox="0 0 24 24"><circle cx="10" cy="10" r="7"></circle><path d="M16 16 L21 21"></svg>',
      click: function click(t) {
        t.preventDefault();
        var e = this.fancybox.getSlide().Panzoom;
        e && e.toggleZoom();
      }
    },
    download: {
      type: "link",
      label: "DOWNLOAD",
      class: "fancybox__button--download",
      html: '<svg viewBox="0 0 24 24"><path d="M12 15V3m0 12l-4-4m4 4l4-4M2 17l.62 2.48A2 2 0 004.56 21h14.88a2 2 0 001.94-1.51L22 17"/></svg>',
      click: function click(t) {
        t.stopPropagation();
      }
    },
    thumbs: {
      type: "button",
      label: "TOGGLE_THUMBS",
      class: "fancybox__button--thumbs",
      html: '<svg viewBox="0 0 24 24"><circle cx="4" cy="4" r="1" /><circle cx="12" cy="4" r="1" transform="rotate(90 12 4)"/><circle cx="20" cy="4" r="1" transform="rotate(90 20 4)"/><circle cx="4" cy="12" r="1" transform="rotate(90 4 12)"/><circle cx="12" cy="12" r="1" transform="rotate(90 12 12)"/><circle cx="20" cy="12" r="1" transform="rotate(90 20 12)"/><circle cx="4" cy="20" r="1" transform="rotate(90 4 20)"/><circle cx="12" cy="20" r="1" transform="rotate(90 12 20)"/><circle cx="20" cy="20" r="1" transform="rotate(90 20 20)"/></svg>',
      click: function click(t) {
        t.stopPropagation();
        var e = this.fancybox.plugins.Thumbs;
        e && e.toggle();
      }
    },
    close: {
      type: "button",
      label: "CLOSE",
      class: "fancybox__button--close",
      html: '<svg viewBox="0 0 24 24"><path d="M20 20L4 4m16 0L4 20"></path></svg>',
      attr: {
        "data-fancybox-close": "",
        tabindex: 0
      }
    }
  }
};

var z = /*#__PURE__*/function () {
  function z(t) {
    var _this33 = this;

    _classCallCheck(this, z);

    this.fancybox = t, this.$container = null, this.state = "init";

    for (var _i33 = 0, _arr8 = ["onInit", "onPrepare", "onDone", "onKeydown", "onClosing", "onChange", "onSettle", "onRefresh"]; _i33 < _arr8.length; _i33++) {
      var _t41 = _arr8[_i33];
      this[_t41] = this[_t41].bind(this);
    }

    this.events = {
      init: this.onInit,
      prepare: this.onPrepare,
      done: this.onDone,
      keydown: this.onKeydown,
      closing: this.onClosing,
      "Carousel.change": this.onChange,
      "Carousel.settle": this.onSettle,
      "Carousel.Panzoom.touchStart": function CarouselPanzoomTouchStart() {
        return _this33.onRefresh();
      },
      "Image.startAnimation": function ImageStartAnimation(t, e) {
        return _this33.onRefresh(e);
      },
      "Image.afterUpdate": function ImageAfterUpdate(t, e) {
        return _this33.onRefresh(e);
      }
    };
  }

  _createClass(z, [{
    key: "onInit",
    value: function onInit() {
      if (this.fancybox.option("Toolbar.autoEnable")) {
        var _t42 = !1;

        var _iterator8 = _createForOfIteratorHelper(this.fancybox.items),
            _step8;

        try {
          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
            var _e26 = _step8.value;

            if ("image" === _e26.type) {
              _t42 = !0;
              break;
            }
          }
        } catch (err) {
          _iterator8.e(err);
        } finally {
          _iterator8.f();
        }

        if (!_t42) return void (this.state = "disabled");
      }

      var _iterator9 = _createForOfIteratorHelper(this.fancybox.option("Toolbar.display")),
          _step9;

      try {
        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
          var _e27 = _step9.value;

          if ("close" === (t(_e27) ? _e27.id : _e27)) {
            this.fancybox.options.closeButton = !1;
            break;
          }
        }
      } catch (err) {
        _iterator9.e(err);
      } finally {
        _iterator9.f();
      }
    }
  }, {
    key: "onPrepare",
    value: function onPrepare() {
      var t = this.fancybox;
      if ("init" === this.state && (this.build(), this.update(), this.Slideshow = new _(t), !t.Carousel.prevPage && (t.option("slideshow.autoStart") && this.Slideshow.activate(), t.option("fullscreen.autoStart") && !T.element()))) try {
        T.activate(t.$container);
      } catch (t) {}
    }
  }, {
    key: "onFsChange",
    value: function onFsChange() {
      window.scrollTo(T.pageXOffset, T.pageYOffset);
    }
  }, {
    key: "onSettle",
    value: function onSettle() {
      var t = this.fancybox,
          e = this.Slideshow;
      e && e.isActive() && (t.getSlide().index !== t.Carousel.slides.length - 1 || t.option("infinite") ? "done" === t.getSlide().state && e.setTimer() : e.deactivate());
    }
  }, {
    key: "onChange",
    value: function onChange() {
      this.update(), this.Slideshow && this.Slideshow.isActive() && this.Slideshow.clearTimer();
    }
  }, {
    key: "onDone",
    value: function onDone(t, e) {
      var i = this.Slideshow;
      e.index === t.getSlide().index && (this.update(), i && i.isActive() && (t.option("infinite") || e.index !== t.Carousel.slides.length - 1 ? i.setTimer() : i.deactivate()));
    }
  }, {
    key: "onRefresh",
    value: function onRefresh(t) {
      t && t.index !== this.fancybox.getSlide().index || (this.update(), !this.Slideshow || !this.Slideshow.isActive() || t && "done" !== t.state || this.Slideshow.deactivate());
    }
  }, {
    key: "onKeydown",
    value: function onKeydown(t, e, i) {
      " " === e && this.Slideshow && (this.Slideshow.toggle(), i.preventDefault());
    }
  }, {
    key: "onClosing",
    value: function onClosing() {
      this.Slideshow && this.Slideshow.deactivate(), document.removeEventListener("fullscreenchange", this.onFsChange);
    }
  }, {
    key: "createElement",
    value: function createElement(t) {
      var _e$classList4;

      var e;
      "div" === t.type ? e = document.createElement("div") : (e = document.createElement("link" === t.type ? "a" : "button"), e.classList.add("carousel__button")), e.innerHTML = t.html, e.setAttribute("tabindex", t.tabindex || 0), t.class && (_e$classList4 = e.classList).add.apply(_e$classList4, _toConsumableArray(t.class.split(" ")));

      for (var _i34 in t.attr) {
        e.setAttribute(_i34, t.attr[_i34]);
      }

      t.label && e.setAttribute("title", this.fancybox.localize("{{".concat(t.label, "}}"))), t.click && e.addEventListener("click", t.click.bind(this)), "prev" === t.id && e.setAttribute("data-fancybox-prev", ""), "next" === t.id && e.setAttribute("data-fancybox-next", "");
      var i = e.querySelector("svg");
      return i && (i.setAttribute("role", "img"), i.setAttribute("tabindex", "-1"), i.setAttribute("xmlns", "http://www.w3.org/2000/svg")), e;
    }
  }, {
    key: "build",
    value: function build() {
      var _this34 = this;

      this.cleanup();
      var i = this.fancybox.option("Toolbar.items"),
          s = [{
        position: "left",
        items: []
      }, {
        position: "center",
        items: []
      }, {
        position: "right",
        items: []
      }],
          o = this.fancybox.plugins.Thumbs;

      var _iterator10 = _createForOfIteratorHelper(this.fancybox.option("Toolbar.display")),
          _step10;

      try {
        var _loop3 = function _loop3() {
          var n = _step10.value;
          var a = void 0,
              r = void 0;
          if (t(n) ? (a = n.id, r = e({}, i[a], n)) : (a = n, r = i[a]), ["counter", "next", "prev", "slideshow"].includes(a) && _this34.fancybox.items.length < 2) return "continue";

          if ("fullscreen" === a) {
            if (!document.fullscreenEnabled || window.fullScreen) return "continue";
            document.addEventListener("fullscreenchange", _this34.onFsChange);
          }

          if ("thumbs" === a && (!o || "disabled" === o.state)) return "continue";
          if (!r) return "continue";
          var h = r.position || "right",
              l = s.find(function (t) {
            return t.position === h;
          });
          l && l.items.push(r);
        };

        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
          var _ret = _loop3();

          if (_ret === "continue") continue;
        }
      } catch (err) {
        _iterator10.e(err);
      } finally {
        _iterator10.f();
      }

      var n = document.createElement("div");
      n.classList.add("fancybox__toolbar");

      for (var _i35 = 0, _s9 = s; _i35 < _s9.length; _i35++) {
        var _t43 = _s9[_i35];

        if (_t43.items.length) {
          var _e28 = document.createElement("div");

          _e28.classList.add("fancybox__toolbar__items"), _e28.classList.add("fancybox__toolbar__items--".concat(_t43.position));

          var _iterator11 = _createForOfIteratorHelper(_t43.items),
              _step11;

          try {
            for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
              var _i36 = _step11.value;

              _e28.appendChild(this.createElement(_i36));
            }
          } catch (err) {
            _iterator11.e(err);
          } finally {
            _iterator11.f();
          }

          n.appendChild(_e28);
        }
      }

      this.fancybox.$carousel.parentNode.insertBefore(n, this.fancybox.$carousel), this.$container = n;
    }
  }, {
    key: "update",
    value: function update() {
      var t = this.fancybox.getSlide(),
          e = t.index,
          i = this.fancybox.items.length,
          s = t.downloadSrc || ("image" !== t.type || t.error ? null : t.src);

      var _iterator12 = _createForOfIteratorHelper(this.fancybox.$container.querySelectorAll("a.fancybox__button--download")),
          _step12;

      try {
        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
          var _t46 = _step12.value;
          s ? (_t46.removeAttribute("disabled"), _t46.removeAttribute("tabindex"), _t46.setAttribute("href", s), _t46.setAttribute("download", s), _t46.setAttribute("target", "_blank")) : (_t46.setAttribute("disabled", ""), _t46.setAttribute("tabindex", -1), _t46.removeAttribute("href"), _t46.removeAttribute("download"));
        }
      } catch (err) {
        _iterator12.e(err);
      } finally {
        _iterator12.f();
      }

      var o = t.Panzoom,
          n = o && o.option("maxScale") > o.option("baseScale");

      var _iterator13 = _createForOfIteratorHelper(this.fancybox.$container.querySelectorAll(".fancybox__button--zoom")),
          _step13;

      try {
        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {
          var _t47 = _step13.value;
          n ? _t47.removeAttribute("disabled") : _t47.setAttribute("disabled", "");
        }
      } catch (err) {
        _iterator13.e(err);
      } finally {
        _iterator13.f();
      }

      var _iterator14 = _createForOfIteratorHelper(this.fancybox.$container.querySelectorAll("[data-fancybox-index]")),
          _step14;

      try {
        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {
          var _e29 = _step14.value;
          _e29.innerHTML = t.index + 1;
        }
      } catch (err) {
        _iterator14.e(err);
      } finally {
        _iterator14.f();
      }

      var _iterator15 = _createForOfIteratorHelper(this.fancybox.$container.querySelectorAll("[data-fancybox-count]")),
          _step15;

      try {
        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {
          var _t48 = _step15.value;
          _t48.innerHTML = i;
        }
      } catch (err) {
        _iterator15.e(err);
      } finally {
        _iterator15.f();
      }

      if (!this.fancybox.option("infinite")) {
        var _iterator16 = _createForOfIteratorHelper(this.fancybox.$container.querySelectorAll("[data-fancybox-prev]")),
            _step16;

        try {
          for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {
            var _t44 = _step16.value;
            0 === e ? _t44.setAttribute("disabled", "") : _t44.removeAttribute("disabled");
          }
        } catch (err) {
          _iterator16.e(err);
        } finally {
          _iterator16.f();
        }

        var _iterator17 = _createForOfIteratorHelper(this.fancybox.$container.querySelectorAll("[data-fancybox-next]")),
            _step17;

        try {
          for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {
            var _t45 = _step17.value;
            e === i - 1 ? _t45.setAttribute("disabled", "") : _t45.removeAttribute("disabled");
          }
        } catch (err) {
          _iterator17.e(err);
        } finally {
          _iterator17.f();
        }
      }
    }
  }, {
    key: "cleanup",
    value: function cleanup() {
      this.Slideshow && this.Slideshow.isActive() && this.Slideshow.clearTimer(), this.$container && this.$container.remove(), this.$container = null;
    }
  }, {
    key: "attach",
    value: function attach() {
      this.fancybox.on(this.events);
    }
  }, {
    key: "detach",
    value: function detach() {
      this.fancybox.off(this.events), this.cleanup();
    }
  }]);

  return z;
}();

z.defaults = A;
var k = {
  ScrollLock: /*#__PURE__*/function () {
    function ScrollLock(t) {
      _classCallCheck(this, ScrollLock);

      this.fancybox = t, this.viewport = null, this.pendingUpdate = null;

      for (var _i37 = 0, _arr9 = ["onReady", "onResize", "onTouchstart", "onTouchmove"]; _i37 < _arr9.length; _i37++) {
        var _t49 = _arr9[_i37];
        this[_t49] = this[_t49].bind(this);
      }
    }

    _createClass(ScrollLock, [{
      key: "onReady",
      value: function onReady() {
        var t = window.visualViewport;
        t && (this.viewport = t, this.startY = 0, t.addEventListener("resize", this.onResize), this.updateViewport()), window.addEventListener("touchstart", this.onTouchstart, {
          passive: !1
        }), window.addEventListener("touchmove", this.onTouchmove, {
          passive: !1
        }), window.addEventListener("wheel", this.onWheel, {
          passive: !1
        });
      }
    }, {
      key: "onResize",
      value: function onResize() {
        this.updateViewport();
      }
    }, {
      key: "updateViewport",
      value: function updateViewport() {
        var t = this.fancybox,
            e = this.viewport,
            i = e.scale || 1,
            s = t.$container;
        if (!s) return;
        var o = "",
            n = "",
            a = "";
        i - 1 > 0.1 && (o = e.width * i + "px", n = e.height * i + "px", a = "translate3d(".concat(e.offsetLeft, "px, ").concat(e.offsetTop, "px, 0) scale(").concat(1 / i, ")")), s.style.width = o, s.style.height = n, s.style.transform = a;
      }
    }, {
      key: "onTouchstart",
      value: function onTouchstart(t) {
        this.startY = t.touches ? t.touches[0].screenY : t.screenY;
      }
    }, {
      key: "onTouchmove",
      value: function onTouchmove(t) {
        var e = this.startY,
            i = window.innerWidth / window.document.documentElement.clientWidth;
        if (!t.cancelable) return;
        if (t.touches.length > 1 || 1 !== i) return;
        var o = s(t.composedPath()[0]);
        if (!o) return void t.preventDefault();
        var n = window.getComputedStyle(o),
            a = parseInt(n.getPropertyValue("height"), 10),
            r = t.touches ? t.touches[0].screenY : t.screenY,
            h = e <= r && 0 === o.scrollTop,
            l = e >= r && o.scrollHeight - o.scrollTop === a;
        (h || l) && t.preventDefault();
      }
    }, {
      key: "onWheel",
      value: function onWheel(t) {
        s(t.composedPath()[0]) || t.preventDefault();
      }
    }, {
      key: "cleanup",
      value: function cleanup() {
        this.pendingUpdate && (cancelAnimationFrame(this.pendingUpdate), this.pendingUpdate = null);
        var t = this.viewport;
        t && (t.removeEventListener("resize", this.onResize), this.viewport = null), window.removeEventListener("touchstart", this.onTouchstart, !1), window.removeEventListener("touchmove", this.onTouchmove, !1), window.removeEventListener("wheel", this.onWheel, {
          passive: !1
        });
      }
    }, {
      key: "attach",
      value: function attach() {
        this.fancybox.on("initLayout", this.onReady);
      }
    }, {
      key: "detach",
      value: function detach() {
        this.fancybox.off("initLayout", this.onReady), this.cleanup();
      }
    }]);

    return ScrollLock;
  }(),
  Thumbs: $,
  Html: E,
  Toolbar: z,
  Image: P,
  Hash: L
};
var O = {
  startIndex: 0,
  preload: 1,
  infinite: !0,
  showClass: "fancybox-zoomInUp",
  hideClass: "fancybox-fadeOut",
  animated: !0,
  hideScrollbar: !0,
  parentEl: null,
  mainClass: null,
  autoFocus: !0,
  trapFocus: !0,
  placeFocusBack: !0,
  click: "close",
  closeButton: "inside",
  dragToClose: !0,
  keyboard: {
    Escape: "close",
    Delete: "close",
    Backspace: "close",
    PageUp: "next",
    PageDown: "prev",
    ArrowUp: "next",
    ArrowDown: "prev",
    ArrowRight: "next",
    ArrowLeft: "prev"
  },
  template: {
    closeButton: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" tabindex="-1"><path d="M20 20L4 4m16 0L4 20"/></svg>',
    spinner: '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" viewBox="25 25 50 50" tabindex="-1"><circle cx="50" cy="50" r="20"/></svg>',
    main: null
  },
  l10n: {
    CLOSE: "Close",
    NEXT: "Next",
    PREV: "Previous",
    MODAL: "You can close this modal content with the ESC key",
    ERROR: "Something Went Wrong, Please Try Again Later",
    IMAGE_ERROR: "Image Not Found",
    ELEMENT_NOT_FOUND: "HTML Element Not Found",
    AJAX_NOT_FOUND: "Error Loading AJAX : Not Found",
    AJAX_FORBIDDEN: "Error Loading AJAX : Forbidden",
    IFRAME_ERROR: "Error Loading Page",
    TOGGLE_ZOOM: "Toggle zoom level",
    TOGGLE_THUMBS: "Toggle thumbnails",
    TOGGLE_SLIDESHOW: "Toggle slideshow",
    TOGGLE_FULLSCREEN: "Toggle full-screen mode",
    DOWNLOAD: "Download"
  }
},
    M = new Map();
var I = 0;

var F = /*#__PURE__*/function (_l5) {
  _inherits(F, _l5);

  var _super3 = _createSuper(F);

  function F(t) {
    var _this35;

    var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, F);

    t = t.map(function (t) {
      return t.width && (t._width = t.width), t.height && (t._height = t.height), t;
    }), _this35 = _super3.call(this, e(!0, {}, O, i)), _this35.bindHandlers(), _this35.state = "init", _this35.setItems(t), _this35.attachPlugins(F.Plugins), _this35.trigger("init"), !0 === _this35.option("hideScrollbar") && _this35.hideScrollbar(), _this35.initLayout(), _this35.initCarousel(), _this35.attachEvents(), M.set(_this35.id, _assertThisInitialized(_this35)), _this35.trigger("prepare"), _this35.state = "ready", _this35.trigger("ready"), _this35.$container.setAttribute("aria-hidden", "false"), _this35.option("trapFocus") && _this35.focus();
    return _this35;
  }

  _createClass(F, [{
    key: "option",
    value: function option(t) {
      var _s10, _get2;

      var i = this.getSlide();
      var s = i ? i[t] : void 0;

      for (var _len6 = arguments.length, e = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {
        e[_key6 - 1] = arguments[_key6];
      }

      return void 0 !== s ? ("function" == typeof s && (s = (_s10 = s).call.apply(_s10, [this, this].concat(e))), s) : (_get2 = _get(_getPrototypeOf(F.prototype), "option", this)).call.apply(_get2, [this, t].concat(e));
    }
  }, {
    key: "bindHandlers",
    value: function bindHandlers() {
      for (var _i38 = 0, _arr10 = ["onMousedown", "onKeydown", "onClick", "onFocus", "onCreateSlide", "onSettle", "onTouchMove", "onTouchEnd", "onTransform"]; _i38 < _arr10.length; _i38++) {
        var _t50 = _arr10[_i38];
        this[_t50] = this[_t50].bind(this);
      }
    }
  }, {
    key: "attachEvents",
    value: function attachEvents() {
      document.addEventListener("mousedown", this.onMousedown), document.addEventListener("keydown", this.onKeydown, !0), this.option("trapFocus") && document.addEventListener("focus", this.onFocus, !0), this.$container.addEventListener("click", this.onClick);
    }
  }, {
    key: "detachEvents",
    value: function detachEvents() {
      document.removeEventListener("mousedown", this.onMousedown), document.removeEventListener("keydown", this.onKeydown, !0), document.removeEventListener("focus", this.onFocus, !0), this.$container.removeEventListener("click", this.onClick);
    }
  }, {
    key: "initLayout",
    value: function initLayout() {
      var _this36 = this,
          _this$$container$clas2;

      this.$root = this.option("parentEl") || document.body;
      var t = this.option("template.main");
      t && (this.$root.insertAdjacentHTML("beforeend", this.localize(t)), this.$container = this.$root.querySelector(".fancybox__container")), this.$container || (this.$container = document.createElement("div"), this.$root.appendChild(this.$container)), this.$container.onscroll = function () {
        return _this36.$container.scrollLeft = 0, !1;
      }, Object.entries({
        class: "fancybox__container",
        role: "dialog",
        tabIndex: "-1",
        "aria-modal": "true",
        "aria-hidden": "true",
        "aria-label": this.localize("{{MODAL}}")
      }).forEach(function (t) {
        var _this36$$container;

        return (_this36$$container = _this36.$container).setAttribute.apply(_this36$$container, _toConsumableArray(t));
      }), this.option("animated") && this.$container.classList.add("is-animated"), this.$backdrop = this.$container.querySelector(".fancybox__backdrop"), this.$backdrop || (this.$backdrop = document.createElement("div"), this.$backdrop.classList.add("fancybox__backdrop"), this.$container.appendChild(this.$backdrop)), this.$carousel = this.$container.querySelector(".fancybox__carousel"), this.$carousel || (this.$carousel = document.createElement("div"), this.$carousel.classList.add("fancybox__carousel"), this.$container.appendChild(this.$carousel)), this.$container.Fancybox = this, this.id = this.$container.getAttribute("id"), this.id || (this.id = this.options.id || ++I, this.$container.setAttribute("id", "fancybox-" + this.id));
      var e = this.option("mainClass");
      return e && (_this$$container$clas2 = this.$container.classList).add.apply(_this$$container$clas2, _toConsumableArray(e.split(" "))), document.documentElement.classList.add("with-fancybox"), this.trigger("initLayout"), this;
    }
  }, {
    key: "setItems",
    value: function setItems(t) {
      var e = [];

      var _iterator18 = _createForOfIteratorHelper(t),
          _step18;

      try {
        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {
          var _i39 = _step18.value;
          var _t51 = _i39.$trigger;

          if (_t51) {
            var _e30 = _t51.dataset || {};

            _i39.src = _e30.src || _t51.getAttribute("href") || _i39.src, _i39.type = _e30.type || _i39.type, !_i39.src && _t51 instanceof HTMLImageElement && (_i39.src = _t51.currentSrc || _i39.$trigger.src);
          }

          var _s11 = _i39.$thumb;

          if (!_s11) {
            var _t52 = _i39.$trigger && _i39.$trigger.origTarget;

            _t52 && (_s11 = _t52 instanceof HTMLImageElement ? _t52 : _t52.querySelector("img:not([aria-hidden])")), !_s11 && _i39.$trigger && (_s11 = _i39.$trigger instanceof HTMLImageElement ? _i39.$trigger : _i39.$trigger.querySelector("img:not([aria-hidden])"));
          }

          _i39.$thumb = _s11 || null;
          var _o12 = _i39.thumb;
          !_o12 && _s11 && (_o12 = _s11.currentSrc || _s11.src, !_o12 && _s11.dataset && (_o12 = _s11.dataset.lazySrc || _s11.dataset.src)), _o12 || "image" !== _i39.type || (_o12 = _i39.src), _i39.thumb = _o12 || null, _i39.caption = _i39.caption || "", e.push(_i39);
        }
      } catch (err) {
        _iterator18.e(err);
      } finally {
        _iterator18.f();
      }

      this.items = e;
    }
  }, {
    key: "initCarousel",
    value: function initCarousel() {
      var _this37 = this;

      return this.Carousel = new y(this.$carousel, e(!0, {}, {
        prefix: "",
        classNames: {
          viewport: "fancybox__viewport",
          track: "fancybox__track",
          slide: "fancybox__slide"
        },
        textSelection: !0,
        preload: this.option("preload"),
        friction: 0.88,
        slides: this.items,
        initialPage: this.options.startIndex,
        slidesPerPage: 1,
        infiniteX: this.option("infinite"),
        infiniteY: !0,
        l10n: this.option("l10n"),
        Dots: !1,
        Navigation: {
          classNames: {
            main: "fancybox__nav",
            button: "carousel__button",
            next: "is-next",
            prev: "is-prev"
          }
        },
        Panzoom: {
          textSelection: !0,
          panOnlyZoomed: function panOnlyZoomed() {
            return _this37.Carousel && _this37.Carousel.pages && _this37.Carousel.pages.length < 2 && !_this37.option("dragToClose");
          },
          lockAxis: function lockAxis() {
            if (_this37.Carousel) {
              var _t53 = "x";
              return _this37.option("dragToClose") && (_t53 += "y"), _t53;
            }
          }
        },
        on: {
          "*": function _(t) {
            for (var _len7 = arguments.length, e = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {
              e[_key7 - 1] = arguments[_key7];
            }

            return _this37.trigger.apply(_this37, ["Carousel.".concat(t)].concat(e));
          },
          init: function init(t) {
            return _this37.Carousel = t;
          },
          createSlide: this.onCreateSlide,
          settle: this.onSettle
        }
      }, this.option("Carousel"))), this.option("dragToClose") && this.Carousel.Panzoom.on({
        touchMove: this.onTouchMove,
        afterTransform: this.onTransform,
        touchEnd: this.onTouchEnd
      }), this.trigger("initCarousel"), this;
    }
  }, {
    key: "onCreateSlide",
    value: function onCreateSlide(t, e) {
      var i = e.caption || "";

      if ("function" == typeof this.options.caption && (i = this.options.caption.call(this, this, this.Carousel, e)), "string" == typeof i && i.length) {
        var _t54 = document.createElement("div"),
            _s12 = "fancybox__caption_".concat(this.id, "_").concat(e.index);

        _t54.className = "fancybox__caption", _t54.innerHTML = i, _t54.setAttribute("id", _s12), e.$caption = e.$el.appendChild(_t54), e.$el.classList.add("has-caption"), e.$el.setAttribute("aria-labelledby", _s12);
      }
    }
  }, {
    key: "onSettle",
    value: function onSettle() {
      this.option("autoFocus") && this.focus();
    }
  }, {
    key: "onFocus",
    value: function onFocus(t) {
      this.focus(t);
    }
  }, {
    key: "onClick",
    value: function onClick(t) {
      if (t.defaultPrevented) return;
      var e = t.composedPath()[0];
      if (e.matches("[data-fancybox-close]")) return t.preventDefault(), void F.close(!1, t);
      if (e.matches("[data-fancybox-next]")) return t.preventDefault(), void F.next();
      if (e.matches("[data-fancybox-prev]")) return t.preventDefault(), void F.prev();
      if (e.matches(x) || document.activeElement.blur(), e.closest(".fancybox__content")) return;
      if (getSelection().toString().length) return;
      if (!1 === this.trigger("click", t)) return;

      switch (this.option("click")) {
        case "close":
          this.close();
          break;

        case "next":
          this.next();
      }
    }
  }, {
    key: "onTouchMove",
    value: function onTouchMove() {
      var t = this.getSlide().Panzoom;
      return !t || 1 === t.content.scale;
    }
  }, {
    key: "onTouchEnd",
    value: function onTouchEnd(t) {
      var e = t.dragOffset.y;
      Math.abs(e) >= 150 || Math.abs(e) >= 35 && t.dragOffset.time < 350 ? (this.option("hideClass") && (this.getSlide().hideClass = "fancybox-throwOut" + (t.content.y < 0 ? "Up" : "Down")), this.close()) : "y" === t.lockAxis && t.panTo({
        y: 0
      });
    }
  }, {
    key: "onTransform",
    value: function onTransform(t) {
      if (this.$backdrop) {
        var _e31 = Math.abs(t.content.y),
            _i40 = _e31 < 1 ? "" : Math.max(0.33, Math.min(1, 1 - _e31 / t.content.fitHeight * 1.5));

        this.$container.style.setProperty("--fancybox-ts", _i40 ? "0s" : ""), this.$container.style.setProperty("--fancybox-opacity", _i40);
      }
    }
  }, {
    key: "onMousedown",
    value: function onMousedown() {
      "ready" === this.state && document.body.classList.add("is-using-mouse");
    }
  }, {
    key: "onKeydown",
    value: function onKeydown(t) {
      if (F.getInstance().id !== this.id) return;
      document.body.classList.remove("is-using-mouse");
      var e = t.key,
          i = this.option("keyboard");
      if (!i || t.ctrlKey || t.altKey || t.shiftKey) return;
      var s = t.composedPath()[0],
          o = document.activeElement && document.activeElement.classList,
          n = o && o.contains("carousel__button");

      if ("Escape" !== e && !n) {
        if (t.target.isContentEditable || -1 !== ["BUTTON", "TEXTAREA", "OPTION", "INPUT", "SELECT", "VIDEO"].indexOf(s.nodeName)) return;
      }

      if (!1 === this.trigger("keydown", e, t)) return;
      var a = i[e];
      "function" == typeof this[a] && this[a]();
    }
  }, {
    key: "getSlide",
    value: function getSlide() {
      var t = this.Carousel;
      if (!t) return null;
      var e = null === t.page ? t.option("initialPage") : t.page,
          i = t.pages || [];
      return i.length && i[e] ? i[e].slides[0] : null;
    }
  }, {
    key: "focus",
    value: function focus(t) {
      if (F.ignoreFocusChange) return;
      if (["init", "closing", "customClosing", "destroy"].indexOf(this.state) > -1) return;
      var e = this.$container,
          i = this.getSlide(),
          s = "done" === i.state ? i.$el : null;
      if (s && s.contains(document.activeElement)) return;
      t && t.preventDefault(), F.ignoreFocusChange = !0;
      var o = Array.from(e.querySelectorAll(x));
      var n,
          a = [];

      for (var _i41 = 0, _o13 = o; _i41 < _o13.length; _i41++) {
        var _t55 = _o13[_i41];

        var _e32 = _t55.offsetParent,
            _i42 = s && s.contains(_t55),
            _o14 = !this.Carousel.$viewport.contains(_t55);

        _e32 && (_i42 || _o14) ? (a.push(_t55), void 0 !== _t55.dataset.origTabindex && (_t55.tabIndex = _t55.dataset.origTabindex, _t55.removeAttribute("data-orig-tabindex")), (_t55.hasAttribute("autoFocus") || !n && _i42 && !_t55.classList.contains("carousel__button")) && (n = _t55)) : (_t55.dataset.origTabindex = void 0 === _t55.dataset.origTabindex ? _t55.getAttribute("tabindex") : _t55.dataset.origTabindex, _t55.tabIndex = -1);
      }

      t ? a.indexOf(t.target) > -1 ? this.lastFocus = t.target : this.lastFocus === e ? w(a[a.length - 1]) : w(e) : this.option("autoFocus") && n ? w(n) : a.indexOf(document.activeElement) < 0 && w(e), this.lastFocus = document.activeElement, F.ignoreFocusChange = !1;
    }
  }, {
    key: "hideScrollbar",
    value: function hideScrollbar() {
      if (!v) return;
      var t = window.innerWidth - document.documentElement.getBoundingClientRect().width,
          e = "fancybox-style-noscroll";
      var i = document.getElementById(e);
      i || t > 0 && (i = document.createElement("style"), i.id = e, i.type = "text/css", i.innerHTML = ".compensate-for-scrollbar {padding-right: ".concat(t, "px;}"), document.getElementsByTagName("head")[0].appendChild(i), document.body.classList.add("compensate-for-scrollbar"));
    }
  }, {
    key: "revealScrollbar",
    value: function revealScrollbar() {
      document.body.classList.remove("compensate-for-scrollbar");
      var t = document.getElementById("fancybox-style-noscroll");
      t && t.remove();
    }
  }, {
    key: "clearContent",
    value: function clearContent(t) {
      this.Carousel.trigger("removeSlide", t), t.$content && (t.$content.remove(), t.$content = null), t.$closeButton && (t.$closeButton.remove(), t.$closeButton = null), t._className && t.$el.classList.remove(t._className);
    }
  }, {
    key: "setContent",
    value: function setContent(t, e) {
      var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var s;
      var o = t.$el;
      if (e instanceof HTMLElement) ["img", "iframe", "video", "audio"].indexOf(e.nodeName.toLowerCase()) > -1 ? (s = document.createElement("div"), s.appendChild(e)) : s = e;else {
        var _t56 = document.createRange().createContextualFragment(e);

        s = document.createElement("div"), s.appendChild(_t56);
      }
      if (t.filter && !t.error && (s = s.querySelector(t.filter)), s instanceof Element) return t._className = "has-".concat(i.suffix || t.type || "unknown"), o.classList.add(t._className), s.classList.add("fancybox__content"), "none" !== s.style.display && "none" !== getComputedStyle(s).getPropertyValue("display") || (s.style.display = t.display || this.option("defaultDisplay") || "flex"), t.id && s.setAttribute("id", t.id), t.$content = s, o.prepend(s), this.manageCloseButton(t), "loading" !== t.state && this.revealContent(t), s;
      this.setError(t, "{{ELEMENT_NOT_FOUND}}");
    }
  }, {
    key: "manageCloseButton",
    value: function manageCloseButton(t) {
      var _this38 = this;

      var e = void 0 === t.closeButton ? this.option("closeButton") : t.closeButton;
      if (!e || "top" === e && this.$closeButton) return;
      var i = document.createElement("button");
      i.classList.add("carousel__button", "is-close"), i.setAttribute("title", this.options.l10n.CLOSE), i.innerHTML = this.option("template.closeButton"), i.addEventListener("click", function (t) {
        return _this38.close(t);
      }), "inside" === e ? (t.$closeButton && t.$closeButton.remove(), t.$closeButton = t.$content.appendChild(i)) : this.$closeButton = this.$container.insertBefore(i, this.$container.firstChild);
    }
  }, {
    key: "revealContent",
    value: function revealContent(t) {
      var _this39 = this;

      this.trigger("reveal", t), t.$content.style.visibility = "";
      var e = !1;
      t.error || "loading" === t.state || null !== this.Carousel.prevPage || t.index !== this.options.startIndex || (e = void 0 === t.showClass ? this.option("showClass") : t.showClass), e ? (t.state = "animating", this.animateCSS(t.$content, e, function () {
        _this39.done(t);
      })) : this.done(t);
    }
  }, {
    key: "animateCSS",
    value: function animateCSS(t, e, i) {
      if (t && t.dispatchEvent(new CustomEvent("animationend", {
        bubbles: !0,
        cancelable: !0
      })), !t || !e) return void ("function" == typeof i && i());

      var s = function s(o) {
        o.currentTarget === this && (t.removeEventListener("animationend", s), i && i(), t.classList.remove(e));
      };

      t.addEventListener("animationend", s), t.classList.add(e);
    }
  }, {
    key: "done",
    value: function done(t) {
      t.state = "done", this.trigger("done", t);
      var e = this.getSlide();
      e && t.index === e.index && this.option("autoFocus") && this.focus();
    }
  }, {
    key: "setError",
    value: function setError(t, e) {
      t.error = e, this.hideLoading(t), this.clearContent(t);
      var i = document.createElement("div");
      i.classList.add("fancybox-error"), i.innerHTML = this.localize(e || "<p>{{ERROR}}</p>"), this.setContent(t, i, {
        suffix: "error"
      });
    }
  }, {
    key: "showLoading",
    value: function showLoading(t) {
      var _this40 = this;

      t.state = "loading", t.$el.classList.add("is-loading");
      var e = t.$el.querySelector(".fancybox__spinner");
      e || (e = document.createElement("div"), e.classList.add("fancybox__spinner"), e.innerHTML = this.option("template.spinner"), e.addEventListener("click", function () {
        _this40.Carousel.Panzoom.velocity || _this40.close();
      }), t.$el.prepend(e));
    }
  }, {
    key: "hideLoading",
    value: function hideLoading(t) {
      var e = t.$el && t.$el.querySelector(".fancybox__spinner");
      e && (e.remove(), t.$el.classList.remove("is-loading")), "loading" === t.state && (this.trigger("load", t), t.state = "ready");
    }
  }, {
    key: "next",
    value: function next() {
      var t = this.Carousel;
      t && t.pages.length > 1 && t.slideNext();
    }
  }, {
    key: "prev",
    value: function prev() {
      var t = this.Carousel;
      t && t.pages.length > 1 && t.slidePrev();
    }
  }, {
    key: "jumpTo",
    value: function jumpTo() {
      var _this$Carousel;

      this.Carousel && (_this$Carousel = this.Carousel).slideTo.apply(_this$Carousel, arguments);
    }
  }, {
    key: "close",
    value: function close(t) {
      var _this41 = this;

      if (t && t.preventDefault(), ["closing", "customClosing", "destroy"].includes(this.state)) return;
      if (!1 === this.trigger("shouldClose", t)) return;
      if (this.state = "closing", this.Carousel.Panzoom.destroy(), this.detachEvents(), this.trigger("closing", t), "destroy" === this.state) return;
      this.$container.setAttribute("aria-hidden", "true"), this.$container.classList.add("is-closing");
      var e = this.getSlide();

      if (this.Carousel.slides.forEach(function (t) {
        t.$content && t.index !== e.index && _this41.Carousel.trigger("removeSlide", t);
      }), "closing" === this.state) {
        var _t57 = void 0 === e.hideClass ? this.option("hideClass") : e.hideClass;

        this.animateCSS(e.$content, _t57, function () {
          _this41.destroy();
        }, !0);
      }
    }
  }, {
    key: "destroy",
    value: function destroy() {
      if ("destroy" === this.state) return;
      this.state = "destroy", this.trigger("destroy");
      var t = this.option("placeFocusBack") ? this.getSlide().$trigger : null;
      this.Carousel.destroy(), this.detachPlugins(), this.Carousel = null, this.options = {}, this.events = {}, this.$container.remove(), this.$container = this.$backdrop = this.$carousel = null, t && w(t), M.delete(this.id);
      var e = F.getInstance();
      e ? e.focus() : (document.documentElement.classList.remove("with-fancybox"), document.body.classList.remove("is-using-mouse"), this.revealScrollbar());
    }
  }], [{
    key: "show",
    value: function show(t) {
      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return new F(t, e);
    }
  }, {
    key: "fromEvent",
    value: function fromEvent(t) {
      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      if (t.defaultPrevented) return;
      if (t.button && 0 !== t.button) return;
      if (t.ctrlKey || t.metaKey || t.shiftKey) return;
      var i = t.composedPath()[0];
      var s,
          o,
          n,
          a = i;

      if ((a.matches("[data-fancybox-trigger]") || (a = a.closest("[data-fancybox-trigger]"))) && (s = a && a.dataset && a.dataset.fancyboxTrigger), s) {
        var _t58 = document.querySelectorAll("[data-fancybox=\"".concat(s, "\"]")),
            _e33 = parseInt(a.dataset.fancyboxIndex, 10) || 0;

        a = _t58.length ? _t58[_e33] : a;
      }

      a || (a = i), Array.from(F.openers.keys()).reverse().some(function (e) {
        n = a;
        var i = !1;

        try {
          n instanceof Element && ("string" == typeof e || e instanceof String) && (i = n.matches(e) || (n = n.closest(e)));
        } catch (t) {}

        return !!i && (t.preventDefault(), o = e, !0);
      });
      var r = !1;

      if (o) {
        e.event = t, e.target = n, n.origTarget = i, r = F.fromOpener(o, e);

        var _s13 = F.getInstance();

        _s13 && "ready" === _s13.state && t.detail && document.body.classList.add("is-using-mouse");
      }

      return r;
    }
  }, {
    key: "fromOpener",
    value: function fromOpener(t) {
      var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var s = [],
          o = i.startIndex || 0,
          n = i.target || null;
      var a = void 0 !== (i = e({}, i, F.openers.get(t))).groupAll && i.groupAll,
          r = void 0 === i.groupAttr ? "data-fancybox" : i.groupAttr,
          h = r && n ? n.getAttribute("".concat(r)) : "";

      if (!n || h || a) {
        var _e34 = i.root || (n ? n.getRootNode() : document.body);

        s = [].slice.call(_e34.querySelectorAll(t));
      }

      if (n && !a && (s = h ? s.filter(function (t) {
        return t.getAttribute("".concat(r)) === h;
      }) : [n]), !s.length) return !1;
      var l = F.getInstance();
      return !(l && s.indexOf(l.options.$trigger) > -1) && (o = n ? s.indexOf(n) : o, s = s.map(function (t) {
        var e = ["false", "0", "no", "null", "undefined"],
            i = ["true", "1", "yes"],
            s = Object.assign({}, t.dataset),
            o = {};

        for (var _i43 = 0, _Object$entries7 = Object.entries(s); _i43 < _Object$entries7.length; _i43++) {
          var _Object$entries7$_i = _slicedToArray(_Object$entries7[_i43], 2),
              _t59 = _Object$entries7$_i[0],
              _n9 = _Object$entries7$_i[1];

          if ("fancybox" !== _t59) if ("width" === _t59 || "height" === _t59) o["_".concat(_t59)] = _n9;else if ("string" == typeof _n9 || _n9 instanceof String) {
            if (e.indexOf(_n9) > -1) o[_t59] = !1;else if (i.indexOf(o[_t59]) > -1) o[_t59] = !0;else try {
              o[_t59] = JSON.parse(_n9);
            } catch (e) {
              o[_t59] = _n9;
            }
          } else o[_t59] = _n9;
        }

        return t instanceof Element && (o.$trigger = t), o;
      }), new F(s, e({}, i, {
        startIndex: o,
        $trigger: n
      })));
    }
  }, {
    key: "bind",
    value: function bind(t) {
      var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      function i() {
        document.body.addEventListener("click", F.fromEvent, !1);
      }

      v && (F.openers.size || (/complete|interactive|loaded/.test(document.readyState) ? i() : document.addEventListener("DOMContentLoaded", i)), F.openers.set(t, e));
    }
  }, {
    key: "unbind",
    value: function unbind(t) {
      F.openers.delete(t), F.openers.size || F.destroy();
    }
  }, {
    key: "destroy",
    value: function destroy() {
      var t;

      for (; t = F.getInstance();) {
        t.destroy();
      }

      F.openers = new Map(), document.body.removeEventListener("click", F.fromEvent, !1);
    }
  }, {
    key: "getInstance",
    value: function getInstance(t) {
      if (t) return M.get(t);
      return Array.from(M.values()).reverse().find(function (t) {
        return !["closing", "customClosing", "destroy"].includes(t.state) && t;
      }) || null;
    }
  }, {
    key: "close",
    value: function close() {
      var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !0;
      var e = arguments.length > 1 ? arguments[1] : undefined;

      if (t) {
        var _iterator19 = _createForOfIteratorHelper(M.values()),
            _step19;

        try {
          for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {
            var _t60 = _step19.value;

            _t60.close(e);
          }
        } catch (err) {
          _iterator19.e(err);
        } finally {
          _iterator19.f();
        }
      } else {
        var _t61 = F.getInstance();

        _t61 && _t61.close(e);
      }
    }
  }, {
    key: "next",
    value: function next() {
      var t = F.getInstance();
      t && t.next();
    }
  }, {
    key: "prev",
    value: function prev() {
      var t = F.getInstance();
      t && t.prev();
    }
  }]);

  return F;
}(l);

F.version = "4.0.26", F.defaults = O, F.openers = new Map(), F.Plugins = k, F.bind("[data-fancybox]");

for (var _i44 = 0, _Object$entries8 = Object.entries(F.Plugins || {}); _i44 < _Object$entries8.length; _i44++) {
  var _Object$entries8$_i = _slicedToArray(_Object$entries8[_i44], 2),
      _t62 = _Object$entries8$_i[0],
      _e35 = _Object$entries8$_i[1];

  "function" == typeof _e35.create && _e35.create(F);
}



/***/ }),

/***/ "./js/vendor/moveTo.js":
/*!*****************************!*\
  !*** ./js/vendor/moveTo.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var MoveTo = function () {
  /**
   * Defaults
   * @type {object}
   */
  var defaults = {
    tolerance: 0,
    duration: 800,
    easing: 'easeOutQuart',
    container: window,
    callback: function callback() {}
  };
  /**
   * easeOutQuart Easing Function
   * @param  {number} t - current time
   * @param  {number} b - start value
   * @param  {number} c - change in value
   * @param  {number} d - duration
   * @return {number} - calculated value
   */

  function easeOutQuart(t, b, c, d) {
    t /= d;
    t--;
    return -c * (t * t * t * t - 1) + b;
  }
  /**
   * Merge two object
   *
   * @param  {object} obj1
   * @param  {object} obj2
   * @return {object} merged object
   */


  function mergeObject(obj1, obj2) {
    var obj3 = {};
    Object.keys(obj1).forEach(function (propertyName) {
      obj3[propertyName] = obj1[propertyName];
    });
    Object.keys(obj2).forEach(function (propertyName) {
      obj3[propertyName] = obj2[propertyName];
    });
    return obj3;
  }

  ;
  /**
   * Converts camel case to kebab case
   * @param  {string} val the value to be converted
   * @return {string} the converted value
   */

  function kebabCase(val) {
    return val.replace(/([A-Z])/g, function ($1) {
      return '-' + $1.toLowerCase();
    });
  }

  ;
  /**
   * Count a number of item scrolled top
   * @param  {Window|HTMLElement} container
   * @return {number}
   */

  function countScrollTop(container) {
    if (container instanceof HTMLElement) {
      return container.scrollTop;
    }

    return container.pageYOffset;
  }

  ;
  /**
   * MoveTo Constructor
   * @param {object} options Options
   * @param {object} easeFunctions Custom ease functions
   */

  function MoveTo() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    var easeFunctions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    this.options = mergeObject(defaults, options);
    this.easeFunctions = mergeObject({
      easeOutQuart: easeOutQuart
    }, easeFunctions);
  }
  /**
   * Register a dom element as trigger
   * @param  {HTMLElement} dom Dom trigger element
   * @param  {function} callback Callback function
   * @return {function|void} unregister function
   */


  MoveTo.prototype.registerTrigger = function (dom, callback) {
    var _this = this;

    if (!dom) {
      return;
    }

    var href = dom.getAttribute('href') || dom.getAttribute('data-target'); // The element to be scrolled

    var target = href && href !== '#' ? document.getElementById(href.substring(1)) : document.body;
    var options = mergeObject(this.options, _getOptionsFromTriggerDom(dom, this.options));

    if (typeof callback === 'function') {
      options.callback = callback;
    }

    var listener = function listener(e) {
      e.preventDefault();

      _this.move(target, options);
    };

    dom.addEventListener('click', listener, false);
    return function () {
      return dom.removeEventListener('click', listener, false);
    };
  };
  /**
   * Move
   * Scrolls to given element by using easeOutQuart function
   * @param  {HTMLElement|number} target Target element to be scrolled or target position
   * @param  {object} options Custom options
   */


  MoveTo.prototype.move = function (target) {
    var _this2 = this;

    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    if (target !== 0 && !target) {
      return;
    }

    options = mergeObject(this.options, options);
    var distance = typeof target === 'number' ? target : target.getBoundingClientRect().top;
    var from = countScrollTop(options.container);
    var startTime = null;
    var lastYOffset;
    distance -= options.tolerance; // rAF loop

    var loop = function loop(currentTime) {
      var currentYOffset = countScrollTop(_this2.options.container);

      if (!startTime) {
        // To starts time from 1, we subtracted 1 from current time
        // If time starts from 1 The first loop will not do anything,
        // because easing value will be zero
        startTime = currentTime - 1;
      }

      var timeElapsed = currentTime - startTime;

      if (lastYOffset) {
        if (distance > 0 && lastYOffset > currentYOffset || distance < 0 && lastYOffset < currentYOffset) {
          return options.callback(target);
        }
      }

      lastYOffset = currentYOffset;

      var val = _this2.easeFunctions[options.easing](timeElapsed, from, distance, options.duration);

      options.container.scroll(0, val);

      if (timeElapsed < options.duration) {
        window.requestAnimationFrame(loop);
      } else {
        options.container.scroll(0, distance + from);
        options.callback(target);
      }
    };

    window.requestAnimationFrame(loop);
  };
  /**
   * Adds custom ease function
   * @param {string}   name Ease function name
   * @param {function} fn   Ease function
   */


  MoveTo.prototype.addEaseFunction = function (name, fn) {
    this.easeFunctions[name] = fn;
  };
  /**
   * Returns options which created from trigger dom element
   * @param  {HTMLElement} dom Trigger dom element
   * @param  {object} options The instance's options
   * @return {object} The options which created from trigger dom element
   */


  function _getOptionsFromTriggerDom(dom, options) {
    var domOptions = {};
    Object.keys(options).forEach(function (key) {
      var value = dom.getAttribute("data-mt-".concat(kebabCase(key)));

      if (value) {
        domOptions[key] = isNaN(value) ? value : parseInt(value, 10);
      }
    });
    return domOptions;
  }

  return MoveTo;
}();

if (true) {
  module.exports = MoveTo;
} else {}

/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map